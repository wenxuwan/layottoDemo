// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: runtime.proto

#include "runtime.pb.h"
#include "runtime.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace spec {
namespace proto {
namespace runtime {
namespace v1 {

static const char* Runtime_method_names[] = {
  "/spec.proto.runtime.v1.Runtime/SayHello",
  "/spec.proto.runtime.v1.Runtime/InvokeService",
  "/spec.proto.runtime.v1.Runtime/GetConfiguration",
  "/spec.proto.runtime.v1.Runtime/SaveConfiguration",
  "/spec.proto.runtime.v1.Runtime/DeleteConfiguration",
  "/spec.proto.runtime.v1.Runtime/SubscribeConfiguration",
  "/spec.proto.runtime.v1.Runtime/TryLock",
  "/spec.proto.runtime.v1.Runtime/Unlock",
  "/spec.proto.runtime.v1.Runtime/GetNextId",
  "/spec.proto.runtime.v1.Runtime/GetState",
  "/spec.proto.runtime.v1.Runtime/GetBulkState",
  "/spec.proto.runtime.v1.Runtime/SaveState",
  "/spec.proto.runtime.v1.Runtime/DeleteState",
  "/spec.proto.runtime.v1.Runtime/DeleteBulkState",
  "/spec.proto.runtime.v1.Runtime/ExecuteStateTransaction",
  "/spec.proto.runtime.v1.Runtime/PublishEvent",
  "/spec.proto.runtime.v1.Runtime/GetFile",
  "/spec.proto.runtime.v1.Runtime/PutFile",
  "/spec.proto.runtime.v1.Runtime/ListFile",
  "/spec.proto.runtime.v1.Runtime/DelFile",
  "/spec.proto.runtime.v1.Runtime/GetFileMeta",
  "/spec.proto.runtime.v1.Runtime/InvokeBinding",
};

std::unique_ptr< Runtime::Stub> Runtime::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Runtime::Stub> stub(new Runtime::Stub(channel, options));
  return stub;
}

Runtime::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_SayHello_(Runtime_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_InvokeService_(Runtime_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetConfiguration_(Runtime_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SaveConfiguration_(Runtime_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteConfiguration_(Runtime_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SubscribeConfiguration_(Runtime_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  , rpcmethod_TryLock_(Runtime_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Unlock_(Runtime_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetNextId_(Runtime_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetState_(Runtime_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetBulkState_(Runtime_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SaveState_(Runtime_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteState_(Runtime_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteBulkState_(Runtime_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ExecuteStateTransaction_(Runtime_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_PublishEvent_(Runtime_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetFile_(Runtime_method_names[16], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_PutFile_(Runtime_method_names[17], options.suffix_for_stats(),::grpc::internal::RpcMethod::CLIENT_STREAMING, channel)
  , rpcmethod_ListFile_(Runtime_method_names[18], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DelFile_(Runtime_method_names[19], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetFileMeta_(Runtime_method_names[20], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_InvokeBinding_(Runtime_method_names[21], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Runtime::Stub::SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::spec::proto::runtime::v1::SayHelloResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::SayHelloRequest, ::spec::proto::runtime::v1::SayHelloResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SayHello_, context, request, response);
}

void Runtime::Stub::async::SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::SayHelloRequest, ::spec::proto::runtime::v1::SayHelloResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SayHello_, context, request, response, std::move(f));
}

void Runtime::Stub::async::SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SayHello_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::SayHelloResponse>* Runtime::Stub::PrepareAsyncSayHelloRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::SayHelloResponse, ::spec::proto::runtime::v1::SayHelloRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SayHello_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::SayHelloResponse>* Runtime::Stub::AsyncSayHelloRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSayHelloRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::spec::proto::runtime::v1::InvokeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::InvokeServiceRequest, ::spec::proto::runtime::v1::InvokeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_InvokeService_, context, request, response);
}

void Runtime::Stub::async::InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::InvokeServiceRequest, ::spec::proto::runtime::v1::InvokeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_InvokeService_, context, request, response, std::move(f));
}

void Runtime::Stub::async::InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_InvokeService_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeResponse>* Runtime::Stub::PrepareAsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::InvokeResponse, ::spec::proto::runtime::v1::InvokeServiceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_InvokeService_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeResponse>* Runtime::Stub::AsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncInvokeServiceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::spec::proto::runtime::v1::GetConfigurationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::GetConfigurationRequest, ::spec::proto::runtime::v1::GetConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetConfiguration_, context, request, response);
}

void Runtime::Stub::async::GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::GetConfigurationRequest, ::spec::proto::runtime::v1::GetConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetConfiguration_, context, request, response, std::move(f));
}

void Runtime::Stub::async::GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetConfigurationResponse>* Runtime::Stub::PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::GetConfigurationResponse, ::spec::proto::runtime::v1::GetConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetConfigurationResponse>* Runtime::Stub::AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::SaveConfigurationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SaveConfiguration_, context, request, response);
}

void Runtime::Stub::async::SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::SaveConfigurationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SaveConfiguration_, context, request, response, std::move(f));
}

void Runtime::Stub::async::SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SaveConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::PrepareAsyncSaveConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::spec::proto::runtime::v1::SaveConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SaveConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::AsyncSaveConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSaveConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteConfiguration_, context, request, response);
}

void Runtime::Stub::async::DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteConfiguration_, context, request, response, std::move(f));
}

void Runtime::Stub::async::DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::PrepareAsyncDeleteConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::AsyncDeleteConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* Runtime::Stub::SubscribeConfigurationRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>::Create(channel_.get(), rpcmethod_SubscribeConfiguration_, context);
}

void Runtime::Stub::async::SubscribeConfiguration(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::spec::proto::runtime::v1::SubscribeConfigurationRequest,::spec::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderWriterFactory< ::spec::proto::runtime::v1::SubscribeConfigurationRequest,::spec::proto::runtime::v1::SubscribeConfigurationResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_SubscribeConfiguration_, context, reactor);
}

::grpc::ClientAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* Runtime::Stub::AsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>::Create(channel_.get(), cq, rpcmethod_SubscribeConfiguration_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* Runtime::Stub::PrepareAsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>::Create(channel_.get(), cq, rpcmethod_SubscribeConfiguration_, context, false, nullptr);
}

::grpc::Status Runtime::Stub::TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::spec::proto::runtime::v1::TryLockResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::TryLockRequest, ::spec::proto::runtime::v1::TryLockResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_TryLock_, context, request, response);
}

void Runtime::Stub::async::TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::TryLockRequest, ::spec::proto::runtime::v1::TryLockResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_TryLock_, context, request, response, std::move(f));
}

void Runtime::Stub::async::TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_TryLock_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::TryLockResponse>* Runtime::Stub::PrepareAsyncTryLockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::TryLockResponse, ::spec::proto::runtime::v1::TryLockRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_TryLock_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::TryLockResponse>* Runtime::Stub::AsyncTryLockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncTryLockRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::spec::proto::runtime::v1::UnlockResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::UnlockRequest, ::spec::proto::runtime::v1::UnlockResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Unlock_, context, request, response);
}

void Runtime::Stub::async::Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::UnlockRequest, ::spec::proto::runtime::v1::UnlockResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Unlock_, context, request, response, std::move(f));
}

void Runtime::Stub::async::Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Unlock_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::UnlockResponse>* Runtime::Stub::PrepareAsyncUnlockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::UnlockResponse, ::spec::proto::runtime::v1::UnlockRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Unlock_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::UnlockResponse>* Runtime::Stub::AsyncUnlockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUnlockRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::spec::proto::runtime::v1::GetNextIdResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::GetNextIdRequest, ::spec::proto::runtime::v1::GetNextIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetNextId_, context, request, response);
}

void Runtime::Stub::async::GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::GetNextIdRequest, ::spec::proto::runtime::v1::GetNextIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNextId_, context, request, response, std::move(f));
}

void Runtime::Stub::async::GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNextId_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetNextIdResponse>* Runtime::Stub::PrepareAsyncGetNextIdRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::GetNextIdResponse, ::spec::proto::runtime::v1::GetNextIdRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetNextId_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetNextIdResponse>* Runtime::Stub::AsyncGetNextIdRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetNextIdRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::spec::proto::runtime::v1::GetStateResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::GetStateRequest, ::spec::proto::runtime::v1::GetStateResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetState_, context, request, response);
}

void Runtime::Stub::async::GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::GetStateRequest, ::spec::proto::runtime::v1::GetStateResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetState_, context, request, response, std::move(f));
}

void Runtime::Stub::async::GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetState_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetStateResponse>* Runtime::Stub::PrepareAsyncGetStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::GetStateResponse, ::spec::proto::runtime::v1::GetStateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetState_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetStateResponse>* Runtime::Stub::AsyncGetStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetStateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::spec::proto::runtime::v1::GetBulkStateResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::GetBulkStateRequest, ::spec::proto::runtime::v1::GetBulkStateResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetBulkState_, context, request, response);
}

void Runtime::Stub::async::GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::GetBulkStateRequest, ::spec::proto::runtime::v1::GetBulkStateResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetBulkState_, context, request, response, std::move(f));
}

void Runtime::Stub::async::GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetBulkState_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetBulkStateResponse>* Runtime::Stub::PrepareAsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::GetBulkStateResponse, ::spec::proto::runtime::v1::GetBulkStateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetBulkState_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetBulkStateResponse>* Runtime::Stub::AsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetBulkStateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SaveState_, context, request, response);
}

void Runtime::Stub::async::SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SaveState_, context, request, response, std::move(f));
}

void Runtime::Stub::async::SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SaveState_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::PrepareAsyncSaveStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::spec::proto::runtime::v1::SaveStateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SaveState_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::AsyncSaveStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSaveStateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteState_, context, request, response);
}

void Runtime::Stub::async::DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteState_, context, request, response, std::move(f));
}

void Runtime::Stub::async::DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteState_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::PrepareAsyncDeleteStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::spec::proto::runtime::v1::DeleteStateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteState_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::AsyncDeleteStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteStateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteBulkState_, context, request, response);
}

void Runtime::Stub::async::DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteBulkState_, context, request, response, std::move(f));
}

void Runtime::Stub::async::DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteBulkState_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::PrepareAsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteBulkState_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::AsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteBulkStateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ExecuteStateTransaction_, context, request, response);
}

void Runtime::Stub::async::ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ExecuteStateTransaction_, context, request, response, std::move(f));
}

void Runtime::Stub::async::ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ExecuteStateTransaction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::PrepareAsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ExecuteStateTransaction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::AsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncExecuteStateTransactionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_PublishEvent_, context, request, response);
}

void Runtime::Stub::async::PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_PublishEvent_, context, request, response, std::move(f));
}

void Runtime::Stub::async::PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_PublishEvent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::PrepareAsyncPublishEventRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::spec::proto::runtime::v1::PublishEventRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_PublishEvent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::AsyncPublishEventRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncPublishEventRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::spec::proto::runtime::v1::GetFileResponse>* Runtime::Stub::GetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::spec::proto::runtime::v1::GetFileResponse>::Create(channel_.get(), rpcmethod_GetFile_, context, request);
}

void Runtime::Stub::async::GetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest* request, ::grpc::ClientReadReactor< ::spec::proto::runtime::v1::GetFileResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::spec::proto::runtime::v1::GetFileResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_GetFile_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::spec::proto::runtime::v1::GetFileResponse>* Runtime::Stub::AsyncGetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::spec::proto::runtime::v1::GetFileResponse>::Create(channel_.get(), cq, rpcmethod_GetFile_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::spec::proto::runtime::v1::GetFileResponse>* Runtime::Stub::PrepareAsyncGetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::spec::proto::runtime::v1::GetFileResponse>::Create(channel_.get(), cq, rpcmethod_GetFile_, context, request, false, nullptr);
}

::grpc::ClientWriter< ::spec::proto::runtime::v1::PutFileRequest>* Runtime::Stub::PutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response) {
  return ::grpc::internal::ClientWriterFactory< ::spec::proto::runtime::v1::PutFileRequest>::Create(channel_.get(), rpcmethod_PutFile_, context, response);
}

void Runtime::Stub::async::PutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::ClientWriteReactor< ::spec::proto::runtime::v1::PutFileRequest>* reactor) {
  ::grpc::internal::ClientCallbackWriterFactory< ::spec::proto::runtime::v1::PutFileRequest>::Create(stub_->channel_.get(), stub_->rpcmethod_PutFile_, context, response, reactor);
}

::grpc::ClientAsyncWriter< ::spec::proto::runtime::v1::PutFileRequest>* Runtime::Stub::AsyncPutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::spec::proto::runtime::v1::PutFileRequest>::Create(channel_.get(), cq, rpcmethod_PutFile_, context, response, true, tag);
}

::grpc::ClientAsyncWriter< ::spec::proto::runtime::v1::PutFileRequest>* Runtime::Stub::PrepareAsyncPutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::spec::proto::runtime::v1::PutFileRequest>::Create(channel_.get(), cq, rpcmethod_PutFile_, context, response, false, nullptr);
}

::grpc::Status Runtime::Stub::ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::spec::proto::runtime::v1::ListFileResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::ListFileRequest, ::spec::proto::runtime::v1::ListFileResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListFile_, context, request, response);
}

void Runtime::Stub::async::ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::ListFileRequest, ::spec::proto::runtime::v1::ListFileResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListFile_, context, request, response, std::move(f));
}

void Runtime::Stub::async::ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListFile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::ListFileResp>* Runtime::Stub::PrepareAsyncListFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::ListFileResp, ::spec::proto::runtime::v1::ListFileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListFile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::ListFileResp>* Runtime::Stub::AsyncListFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListFileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::DelFileRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DelFile_, context, request, response);
}

void Runtime::Stub::async::DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::DelFileRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DelFile_, context, request, response, std::move(f));
}

void Runtime::Stub::async::DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DelFile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::PrepareAsyncDelFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::spec::proto::runtime::v1::DelFileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DelFile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtime::Stub::AsyncDelFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDelFileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::spec::proto::runtime::v1::GetFileMetaResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::GetFileMetaRequest, ::spec::proto::runtime::v1::GetFileMetaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetFileMeta_, context, request, response);
}

void Runtime::Stub::async::GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::GetFileMetaRequest, ::spec::proto::runtime::v1::GetFileMetaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetFileMeta_, context, request, response, std::move(f));
}

void Runtime::Stub::async::GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetFileMeta_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetFileMetaResponse>* Runtime::Stub::PrepareAsyncGetFileMetaRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::GetFileMetaResponse, ::spec::proto::runtime::v1::GetFileMetaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetFileMeta_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetFileMetaResponse>* Runtime::Stub::AsyncGetFileMetaRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetFileMetaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Runtime::Stub::InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::spec::proto::runtime::v1::InvokeBindingResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::spec::proto::runtime::v1::InvokeBindingRequest, ::spec::proto::runtime::v1::InvokeBindingResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_InvokeBinding_, context, request, response);
}

void Runtime::Stub::async::InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::spec::proto::runtime::v1::InvokeBindingRequest, ::spec::proto::runtime::v1::InvokeBindingResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_InvokeBinding_, context, request, response, std::move(f));
}

void Runtime::Stub::async::InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_InvokeBinding_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeBindingResponse>* Runtime::Stub::PrepareAsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::spec::proto::runtime::v1::InvokeBindingResponse, ::spec::proto::runtime::v1::InvokeBindingRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_InvokeBinding_, context, request);
}

::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeBindingResponse>* Runtime::Stub::AsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncInvokeBindingRaw(context, request, cq);
  result->StartCall();
  return result;
}

Runtime::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::SayHelloRequest, ::spec::proto::runtime::v1::SayHelloResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::SayHelloRequest* req,
             ::spec::proto::runtime::v1::SayHelloResponse* resp) {
               return service->SayHello(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::InvokeServiceRequest, ::spec::proto::runtime::v1::InvokeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::InvokeServiceRequest* req,
             ::spec::proto::runtime::v1::InvokeResponse* resp) {
               return service->InvokeService(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::GetConfigurationRequest, ::spec::proto::runtime::v1::GetConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::GetConfigurationRequest* req,
             ::spec::proto::runtime::v1::GetConfigurationResponse* resp) {
               return service->GetConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::SaveConfigurationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::SaveConfigurationRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->SaveConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::DeleteConfigurationRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[5],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< Runtime::Service, ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReaderWriter<::spec::proto::runtime::v1::SubscribeConfigurationResponse,
             ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* stream) {
               return service->SubscribeConfiguration(ctx, stream);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::TryLockRequest, ::spec::proto::runtime::v1::TryLockResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::TryLockRequest* req,
             ::spec::proto::runtime::v1::TryLockResponse* resp) {
               return service->TryLock(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::UnlockRequest, ::spec::proto::runtime::v1::UnlockResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::UnlockRequest* req,
             ::spec::proto::runtime::v1::UnlockResponse* resp) {
               return service->Unlock(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::GetNextIdRequest, ::spec::proto::runtime::v1::GetNextIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::GetNextIdRequest* req,
             ::spec::proto::runtime::v1::GetNextIdResponse* resp) {
               return service->GetNextId(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::GetStateRequest, ::spec::proto::runtime::v1::GetStateResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::GetStateRequest* req,
             ::spec::proto::runtime::v1::GetStateResponse* resp) {
               return service->GetState(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::GetBulkStateRequest, ::spec::proto::runtime::v1::GetBulkStateResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::GetBulkStateRequest* req,
             ::spec::proto::runtime::v1::GetBulkStateResponse* resp) {
               return service->GetBulkState(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::SaveStateRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->SaveState(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::DeleteStateRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteState(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::DeleteBulkStateRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteBulkState(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->ExecuteStateTransaction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::PublishEventRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->PublishEvent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[16],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< Runtime::Service, ::spec::proto::runtime::v1::GetFileRequest, ::spec::proto::runtime::v1::GetFileResponse>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::GetFileRequest* req,
             ::grpc::ServerWriter<::spec::proto::runtime::v1::GetFileResponse>* writer) {
               return service->GetFile(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[17],
      ::grpc::internal::RpcMethod::CLIENT_STREAMING,
      new ::grpc::internal::ClientStreamingHandler< Runtime::Service, ::spec::proto::runtime::v1::PutFileRequest, ::google::protobuf::Empty>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReader<::spec::proto::runtime::v1::PutFileRequest>* reader,
             ::google::protobuf::Empty* resp) {
               return service->PutFile(ctx, reader, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::ListFileRequest, ::spec::proto::runtime::v1::ListFileResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::ListFileRequest* req,
             ::spec::proto::runtime::v1::ListFileResp* resp) {
               return service->ListFile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::DelFileRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::DelFileRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DelFile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::GetFileMetaRequest, ::spec::proto::runtime::v1::GetFileMetaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::GetFileMetaRequest* req,
             ::spec::proto::runtime::v1::GetFileMetaResponse* resp) {
               return service->GetFileMeta(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtime_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtime::Service, ::spec::proto::runtime::v1::InvokeBindingRequest, ::spec::proto::runtime::v1::InvokeBindingResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Runtime::Service* service,
             ::grpc::ServerContext* ctx,
             const ::spec::proto::runtime::v1::InvokeBindingRequest* req,
             ::spec::proto::runtime::v1::InvokeBindingResponse* resp) {
               return service->InvokeBinding(ctx, req, resp);
             }, this)));
}

Runtime::Service::~Service() {
}

::grpc::Status Runtime::Service::SayHello(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::InvokeService(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::GetConfiguration(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::SaveConfiguration(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::DeleteConfiguration(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::SubscribeConfiguration(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationResponse, ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::TryLock(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::Unlock(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::GetNextId(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::GetState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::GetBulkState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::SaveState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::DeleteState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::DeleteBulkState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::ExecuteStateTransaction(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::PublishEvent(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::GetFile(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetFileRequest* request, ::grpc::ServerWriter< ::spec::proto::runtime::v1::GetFileResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::PutFile(::grpc::ServerContext* context, ::grpc::ServerReader< ::spec::proto::runtime::v1::PutFileRequest>* reader, ::google::protobuf::Empty* response) {
  (void) context;
  (void) reader;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::ListFile(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::DelFile(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::GetFileMeta(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtime::Service::InvokeBinding(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace spec
}  // namespace proto
}  // namespace runtime
}  // namespace v1

