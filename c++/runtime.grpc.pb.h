// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: runtime.proto
#ifndef GRPC_runtime_2eproto__INCLUDED
#define GRPC_runtime_2eproto__INCLUDED

#include "runtime.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace spec {
namespace proto {
namespace runtime {
namespace v1 {

class Runtime final {
 public:
  static constexpr char const* service_full_name() {
    return "spec.proto.runtime.v1.Runtime";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // SayHello used for test
    virtual ::grpc::Status SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::spec::proto::runtime::v1::SayHelloResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::SayHelloResponse>> AsyncSayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::SayHelloResponse>>(AsyncSayHelloRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::SayHelloResponse>> PrepareAsyncSayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::SayHelloResponse>>(PrepareAsyncSayHelloRaw(context, request, cq));
    }
    // InvokeService do rpc calls
    virtual ::grpc::Status InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::spec::proto::runtime::v1::InvokeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeResponse>> AsyncInvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeResponse>>(AsyncInvokeServiceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeResponse>> PrepareAsyncInvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeResponse>>(PrepareAsyncInvokeServiceRaw(context, request, cq));
    }
    // GetConfiguration gets configuration from configuration store.
    virtual ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::spec::proto::runtime::v1::GetConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetConfigurationResponse>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetConfigurationResponse>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetConfigurationResponse>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetConfigurationResponse>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    // SaveConfiguration saves configuration into configuration store.
    virtual ::grpc::Status SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSaveConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSaveConfigurationRaw(context, request, cq));
    }
    // DeleteConfiguration deletes configuration from configuration store.
    virtual ::grpc::Status DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteConfigurationRaw(context, request, cq));
    }
    // SubscribeConfiguration gets configuration from configuration store and subscribe the updates.
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>> SubscribeConfiguration(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>>(SubscribeConfigurationRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>> AsyncSubscribeConfiguration(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>>(AsyncSubscribeConfigurationRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>> PrepareAsyncSubscribeConfiguration(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>>(PrepareAsyncSubscribeConfigurationRaw(context, cq));
    }
    // Distributed Lock API
    // A non-blocking method trying to get a lock with ttl.
    virtual ::grpc::Status TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::spec::proto::runtime::v1::TryLockResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::TryLockResponse>> AsyncTryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::TryLockResponse>>(AsyncTryLockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::TryLockResponse>> PrepareAsyncTryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::TryLockResponse>>(PrepareAsyncTryLockRaw(context, request, cq));
    }
    virtual ::grpc::Status Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::spec::proto::runtime::v1::UnlockResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::UnlockResponse>> AsyncUnlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::UnlockResponse>>(AsyncUnlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::UnlockResponse>> PrepareAsyncUnlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::UnlockResponse>>(PrepareAsyncUnlockRaw(context, request, cq));
    }
    // Sequencer API
    // Get next unique id with some auto-increment guarantee
    virtual ::grpc::Status GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::spec::proto::runtime::v1::GetNextIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetNextIdResponse>> AsyncGetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetNextIdResponse>>(AsyncGetNextIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetNextIdResponse>> PrepareAsyncGetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetNextIdResponse>>(PrepareAsyncGetNextIdRaw(context, request, cq));
    }
    //  Below are the APIs compatible with Dapr.
    //  We try to keep them same as Dapr's because we want to work with Dapr to build an API spec for cloud native runtime
    //  ,like CloudEvent for event data.
    //
    // Gets the state for a specific key.
    virtual ::grpc::Status GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::spec::proto::runtime::v1::GetStateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetStateResponse>> AsyncGetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetStateResponse>>(AsyncGetStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetStateResponse>> PrepareAsyncGetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetStateResponse>>(PrepareAsyncGetStateRaw(context, request, cq));
    }
    // Gets a bulk of state items for a list of keys
    virtual ::grpc::Status GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::spec::proto::runtime::v1::GetBulkStateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetBulkStateResponse>> AsyncGetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetBulkStateResponse>>(AsyncGetBulkStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetBulkStateResponse>> PrepareAsyncGetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetBulkStateResponse>>(PrepareAsyncGetBulkStateRaw(context, request, cq));
    }
    // Saves an array of state objects
    virtual ::grpc::Status SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSaveStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSaveStateRaw(context, request, cq));
    }
    // Deletes the state for a specific key.
    virtual ::grpc::Status DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteStateRaw(context, request, cq));
    }
    // Deletes a bulk of state items for a list of keys
    virtual ::grpc::Status DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteBulkStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteBulkStateRaw(context, request, cq));
    }
    // Executes transactions for a specified store
    virtual ::grpc::Status ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncExecuteStateTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncExecuteStateTransactionRaw(context, request, cq));
    }
    // Publishes events to the specific topic
    virtual ::grpc::Status PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncPublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncPublishEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncPublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncPublishEventRaw(context, request, cq));
    }
    // Get file with stream
    std::unique_ptr< ::grpc::ClientReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>> GetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>>(GetFileRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>> AsyncGetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>>(AsyncGetFileRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>> PrepareAsyncGetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>>(PrepareAsyncGetFileRaw(context, request, cq));
    }
    // Put file with stream
    std::unique_ptr< ::grpc::ClientWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>> PutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>>(PutFileRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>> AsyncPutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>>(AsyncPutFileRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>> PrepareAsyncPutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>>(PrepareAsyncPutFileRaw(context, response, cq));
    }
    // List all files
    virtual ::grpc::Status ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::spec::proto::runtime::v1::ListFileResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::ListFileResp>> AsyncListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::ListFileResp>>(AsyncListFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::ListFileResp>> PrepareAsyncListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::ListFileResp>>(PrepareAsyncListFileRaw(context, request, cq));
    }
    // Delete specific file
    virtual ::grpc::Status DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDelFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDelFileRaw(context, request, cq));
    }
    // Get file meta data, if file not exist,return code.NotFound error
    virtual ::grpc::Status GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::spec::proto::runtime::v1::GetFileMetaResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetFileMetaResponse>> AsyncGetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetFileMetaResponse>>(AsyncGetFileMetaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetFileMetaResponse>> PrepareAsyncGetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetFileMetaResponse>>(PrepareAsyncGetFileMetaRaw(context, request, cq));
    }
    // Invokes binding data to specific output bindings
    virtual ::grpc::Status InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::spec::proto::runtime::v1::InvokeBindingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeBindingResponse>> AsyncInvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeBindingResponse>>(AsyncInvokeBindingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeBindingResponse>> PrepareAsyncInvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeBindingResponse>>(PrepareAsyncInvokeBindingRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // SayHello used for test
      virtual void SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // InvokeService do rpc calls
      virtual void InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetConfiguration gets configuration from configuration store.
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // SaveConfiguration saves configuration into configuration store.
      virtual void SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // DeleteConfiguration deletes configuration from configuration store.
      virtual void DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // SubscribeConfiguration gets configuration from configuration store and subscribe the updates.
      virtual void SubscribeConfiguration(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::spec::proto::runtime::v1::SubscribeConfigurationRequest,::spec::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) = 0;
      // Distributed Lock API
      // A non-blocking method trying to get a lock with ttl.
      virtual void TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Sequencer API
      // Get next unique id with some auto-increment guarantee
      virtual void GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //  Below are the APIs compatible with Dapr.
      //  We try to keep them same as Dapr's because we want to work with Dapr to build an API spec for cloud native runtime
      //  ,like CloudEvent for event data.
      //
      // Gets the state for a specific key.
      virtual void GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets a bulk of state items for a list of keys
      virtual void GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Saves an array of state objects
      virtual void SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes the state for a specific key.
      virtual void DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a bulk of state items for a list of keys
      virtual void DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Executes transactions for a specified store
      virtual void ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Publishes events to the specific topic
      virtual void PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get file with stream
      virtual void GetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest* request, ::grpc::ClientReadReactor< ::spec::proto::runtime::v1::GetFileResponse>* reactor) = 0;
      // Put file with stream
      virtual void PutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::ClientWriteReactor< ::spec::proto::runtime::v1::PutFileRequest>* reactor) = 0;
      // List all files
      virtual void ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete specific file
      virtual void DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get file meta data, if file not exist,return code.NotFound error
      virtual void GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Invokes binding data to specific output bindings
      virtual void InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::SayHelloResponse>* AsyncSayHelloRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::SayHelloResponse>* PrepareAsyncSayHelloRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeResponse>* AsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeResponse>* PrepareAsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetConfigurationResponse>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetConfigurationResponse>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSaveConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSaveConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfigurationRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* AsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* PrepareAsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::TryLockResponse>* AsyncTryLockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::TryLockResponse>* PrepareAsyncTryLockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::UnlockResponse>* AsyncUnlockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::UnlockResponse>* PrepareAsyncUnlockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetNextIdResponse>* AsyncGetNextIdRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetNextIdResponse>* PrepareAsyncGetNextIdRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetStateResponse>* AsyncGetStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetStateResponse>* PrepareAsyncGetStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetBulkStateResponse>* AsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetBulkStateResponse>* PrepareAsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSaveStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSaveStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncPublishEventRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncPublishEventRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>* GetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>* AsyncGetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::spec::proto::runtime::v1::GetFileResponse>* PrepareAsyncGetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>* PutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>* AsyncPutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::spec::proto::runtime::v1::PutFileRequest>* PrepareAsyncPutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::ListFileResp>* AsyncListFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::ListFileResp>* PrepareAsyncListFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDelFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDelFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetFileMetaResponse>* AsyncGetFileMetaRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::GetFileMetaResponse>* PrepareAsyncGetFileMetaRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeBindingResponse>* AsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::spec::proto::runtime::v1::InvokeBindingResponse>* PrepareAsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::spec::proto::runtime::v1::SayHelloResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::SayHelloResponse>> AsyncSayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::SayHelloResponse>>(AsyncSayHelloRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::SayHelloResponse>> PrepareAsyncSayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::SayHelloResponse>>(PrepareAsyncSayHelloRaw(context, request, cq));
    }
    ::grpc::Status InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::spec::proto::runtime::v1::InvokeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeResponse>> AsyncInvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeResponse>>(AsyncInvokeServiceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeResponse>> PrepareAsyncInvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeResponse>>(PrepareAsyncInvokeServiceRaw(context, request, cq));
    }
    ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::spec::proto::runtime::v1::GetConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetConfigurationResponse>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetConfigurationResponse>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetConfigurationResponse>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetConfigurationResponse>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    ::grpc::Status SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSaveConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSaveConfigurationRaw(context, request, cq));
    }
    ::grpc::Status DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>> SubscribeConfiguration(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>>(SubscribeConfigurationRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>> AsyncSubscribeConfiguration(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>>(AsyncSubscribeConfigurationRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>> PrepareAsyncSubscribeConfiguration(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>>(PrepareAsyncSubscribeConfigurationRaw(context, cq));
    }
    ::grpc::Status TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::spec::proto::runtime::v1::TryLockResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::TryLockResponse>> AsyncTryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::TryLockResponse>>(AsyncTryLockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::TryLockResponse>> PrepareAsyncTryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::TryLockResponse>>(PrepareAsyncTryLockRaw(context, request, cq));
    }
    ::grpc::Status Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::spec::proto::runtime::v1::UnlockResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::UnlockResponse>> AsyncUnlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::UnlockResponse>>(AsyncUnlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::UnlockResponse>> PrepareAsyncUnlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::UnlockResponse>>(PrepareAsyncUnlockRaw(context, request, cq));
    }
    ::grpc::Status GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::spec::proto::runtime::v1::GetNextIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetNextIdResponse>> AsyncGetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetNextIdResponse>>(AsyncGetNextIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetNextIdResponse>> PrepareAsyncGetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetNextIdResponse>>(PrepareAsyncGetNextIdRaw(context, request, cq));
    }
    ::grpc::Status GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::spec::proto::runtime::v1::GetStateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetStateResponse>> AsyncGetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetStateResponse>>(AsyncGetStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetStateResponse>> PrepareAsyncGetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetStateResponse>>(PrepareAsyncGetStateRaw(context, request, cq));
    }
    ::grpc::Status GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::spec::proto::runtime::v1::GetBulkStateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetBulkStateResponse>> AsyncGetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetBulkStateResponse>>(AsyncGetBulkStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetBulkStateResponse>> PrepareAsyncGetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetBulkStateResponse>>(PrepareAsyncGetBulkStateRaw(context, request, cq));
    }
    ::grpc::Status SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSaveStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSaveStateRaw(context, request, cq));
    }
    ::grpc::Status DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteStateRaw(context, request, cq));
    }
    ::grpc::Status DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteBulkStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteBulkStateRaw(context, request, cq));
    }
    ::grpc::Status ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncExecuteStateTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncExecuteStateTransactionRaw(context, request, cq));
    }
    ::grpc::Status PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncPublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncPublishEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncPublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncPublishEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::spec::proto::runtime::v1::GetFileResponse>> GetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::spec::proto::runtime::v1::GetFileResponse>>(GetFileRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::spec::proto::runtime::v1::GetFileResponse>> AsyncGetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::spec::proto::runtime::v1::GetFileResponse>>(AsyncGetFileRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::spec::proto::runtime::v1::GetFileResponse>> PrepareAsyncGetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::spec::proto::runtime::v1::GetFileResponse>>(PrepareAsyncGetFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::spec::proto::runtime::v1::PutFileRequest>> PutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::spec::proto::runtime::v1::PutFileRequest>>(PutFileRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::spec::proto::runtime::v1::PutFileRequest>> AsyncPutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::spec::proto::runtime::v1::PutFileRequest>>(AsyncPutFileRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::spec::proto::runtime::v1::PutFileRequest>> PrepareAsyncPutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::spec::proto::runtime::v1::PutFileRequest>>(PrepareAsyncPutFileRaw(context, response, cq));
    }
    ::grpc::Status ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::spec::proto::runtime::v1::ListFileResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::ListFileResp>> AsyncListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::ListFileResp>>(AsyncListFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::ListFileResp>> PrepareAsyncListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::ListFileResp>>(PrepareAsyncListFileRaw(context, request, cq));
    }
    ::grpc::Status DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDelFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDelFileRaw(context, request, cq));
    }
    ::grpc::Status GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::spec::proto::runtime::v1::GetFileMetaResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetFileMetaResponse>> AsyncGetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetFileMetaResponse>>(AsyncGetFileMetaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetFileMetaResponse>> PrepareAsyncGetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetFileMetaResponse>>(PrepareAsyncGetFileMetaRaw(context, request, cq));
    }
    ::grpc::Status InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::spec::proto::runtime::v1::InvokeBindingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeBindingResponse>> AsyncInvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeBindingResponse>>(AsyncInvokeBindingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeBindingResponse>> PrepareAsyncInvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeBindingResponse>>(PrepareAsyncInvokeBindingRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response, std::function<void(::grpc::Status)>) override;
      void SayHello(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response, std::function<void(::grpc::Status)>) override;
      void InvokeService(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SaveConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteConfiguration(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SubscribeConfiguration(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::spec::proto::runtime::v1::SubscribeConfigurationRequest,::spec::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) override;
      void TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response, std::function<void(::grpc::Status)>) override;
      void TryLock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response, std::function<void(::grpc::Status)>) override;
      void Unlock(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response, std::function<void(::grpc::Status)>) override;
      void GetNextId(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response, std::function<void(::grpc::Status)>) override;
      void GetState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SaveState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteBulkState(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ExecuteStateTransaction(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void PublishEvent(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest* request, ::grpc::ClientReadReactor< ::spec::proto::runtime::v1::GetFileResponse>* reactor) override;
      void PutFile(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::ClientWriteReactor< ::spec::proto::runtime::v1::PutFileRequest>* reactor) override;
      void ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response, std::function<void(::grpc::Status)>) override;
      void ListFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DelFile(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFileMeta(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response, std::function<void(::grpc::Status)>) override;
      void InvokeBinding(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::SayHelloResponse>* AsyncSayHelloRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::SayHelloResponse>* PrepareAsyncSayHelloRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SayHelloRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeResponse>* AsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeResponse>* PrepareAsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetConfigurationResponse>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetConfigurationResponse>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSaveConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSaveConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteConfigurationRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfigurationRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* AsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* PrepareAsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::TryLockResponse>* AsyncTryLockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::TryLockResponse>* PrepareAsyncTryLockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::UnlockResponse>* AsyncUnlockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::UnlockResponse>* PrepareAsyncUnlockRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetNextIdResponse>* AsyncGetNextIdRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetNextIdResponse>* PrepareAsyncGetNextIdRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetStateResponse>* AsyncGetStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetStateResponse>* PrepareAsyncGetStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetBulkStateResponse>* AsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetBulkStateResponse>* PrepareAsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSaveStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSaveStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncPublishEventRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncPublishEventRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::spec::proto::runtime::v1::GetFileResponse>* GetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request) override;
    ::grpc::ClientAsyncReader< ::spec::proto::runtime::v1::GetFileResponse>* AsyncGetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::spec::proto::runtime::v1::GetFileResponse>* PrepareAsyncGetFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::spec::proto::runtime::v1::PutFileRequest>* PutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response) override;
    ::grpc::ClientAsyncWriter< ::spec::proto::runtime::v1::PutFileRequest>* AsyncPutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::spec::proto::runtime::v1::PutFileRequest>* PrepareAsyncPutFileRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::ListFileResp>* AsyncListFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::ListFileResp>* PrepareAsyncListFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::ListFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDelFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDelFileRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::DelFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetFileMetaResponse>* AsyncGetFileMetaRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::GetFileMetaResponse>* PrepareAsyncGetFileMetaRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeBindingResponse>* AsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::spec::proto::runtime::v1::InvokeBindingResponse>* PrepareAsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SayHello_;
    const ::grpc::internal::RpcMethod rpcmethod_InvokeService_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_TryLock_;
    const ::grpc::internal::RpcMethod rpcmethod_Unlock_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNextId_;
    const ::grpc::internal::RpcMethod rpcmethod_GetState_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBulkState_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveState_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteState_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteBulkState_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteStateTransaction_;
    const ::grpc::internal::RpcMethod rpcmethod_PublishEvent_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFile_;
    const ::grpc::internal::RpcMethod rpcmethod_PutFile_;
    const ::grpc::internal::RpcMethod rpcmethod_ListFile_;
    const ::grpc::internal::RpcMethod rpcmethod_DelFile_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFileMeta_;
    const ::grpc::internal::RpcMethod rpcmethod_InvokeBinding_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // SayHello used for test
    virtual ::grpc::Status SayHello(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response);
    // InvokeService do rpc calls
    virtual ::grpc::Status InvokeService(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response);
    // GetConfiguration gets configuration from configuration store.
    virtual ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response);
    // SaveConfiguration saves configuration into configuration store.
    virtual ::grpc::Status SaveConfiguration(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response);
    // DeleteConfiguration deletes configuration from configuration store.
    virtual ::grpc::Status DeleteConfiguration(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response);
    // SubscribeConfiguration gets configuration from configuration store and subscribe the updates.
    virtual ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationResponse, ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* stream);
    // Distributed Lock API
    // A non-blocking method trying to get a lock with ttl.
    virtual ::grpc::Status TryLock(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response);
    virtual ::grpc::Status Unlock(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response);
    // Sequencer API
    // Get next unique id with some auto-increment guarantee
    virtual ::grpc::Status GetNextId(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response);
    //  Below are the APIs compatible with Dapr.
    //  We try to keep them same as Dapr's because we want to work with Dapr to build an API spec for cloud native runtime
    //  ,like CloudEvent for event data.
    //
    // Gets the state for a specific key.
    virtual ::grpc::Status GetState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response);
    // Gets a bulk of state items for a list of keys
    virtual ::grpc::Status GetBulkState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response);
    // Saves an array of state objects
    virtual ::grpc::Status SaveState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response);
    // Deletes the state for a specific key.
    virtual ::grpc::Status DeleteState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response);
    // Deletes a bulk of state items for a list of keys
    virtual ::grpc::Status DeleteBulkState(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response);
    // Executes transactions for a specified store
    virtual ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response);
    // Publishes events to the specific topic
    virtual ::grpc::Status PublishEvent(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response);
    // Get file with stream
    virtual ::grpc::Status GetFile(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetFileRequest* request, ::grpc::ServerWriter< ::spec::proto::runtime::v1::GetFileResponse>* writer);
    // Put file with stream
    virtual ::grpc::Status PutFile(::grpc::ServerContext* context, ::grpc::ServerReader< ::spec::proto::runtime::v1::PutFileRequest>* reader, ::google::protobuf::Empty* response);
    // List all files
    virtual ::grpc::Status ListFile(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response);
    // Delete specific file
    virtual ::grpc::Status DelFile(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response);
    // Get file meta data, if file not exist,return code.NotFound error
    virtual ::grpc::Status GetFileMeta(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response);
    // Invokes binding data to specific output bindings
    virtual ::grpc::Status InvokeBinding(::grpc::ServerContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SayHello() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SayHelloRequest* /*request*/, ::spec::proto::runtime::v1::SayHelloResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSayHello(::grpc::ServerContext* context, ::spec::proto::runtime::v1::SayHelloRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::SayHelloResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InvokeService() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::spec::proto::runtime::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeService(::grpc::ServerContext* context, ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::InvokeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::spec::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::GetConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SaveConfiguration() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SaveConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveConfiguration(::grpc::ServerContext* context, ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteConfiguration() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteConfiguration(::grpc::ServerContext* context, ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationResponse, ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeConfiguration(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationResponse, ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(5, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TryLock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TryLock() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_TryLock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::TryLockRequest* /*request*/, ::spec::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTryLock(::grpc::ServerContext* context, ::spec::proto::runtime::v1::TryLockRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::TryLockResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Unlock() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::UnlockRequest* /*request*/, ::spec::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlock(::grpc::ServerContext* context, ::spec::proto::runtime::v1::UnlockRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::UnlockResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNextId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNextId() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetNextId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextId(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetNextIdRequest* /*request*/, ::spec::proto::runtime::v1::GetNextIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNextId(::grpc::ServerContext* context, ::spec::proto::runtime::v1::GetNextIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::GetNextIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetState() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetStateRequest* /*request*/, ::spec::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetState(::grpc::ServerContext* context, ::spec::proto::runtime::v1::GetStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::GetStateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBulkState() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::spec::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBulkState(::grpc::ServerContext* context, ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::GetBulkStateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SaveState() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveState(::grpc::ServerContext* context, ::spec::proto::runtime::v1::SaveStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteState() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteState(::grpc::ServerContext* context, ::spec::proto::runtime::v1::DeleteStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBulkState(::grpc::ServerContext* context, ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteStateTransaction(::grpc::ServerContext* context, ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PublishEvent() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishEvent(::grpc::ServerContext* context, ::spec::proto::runtime::v1::PublishEventRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFile() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GetFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileRequest* /*request*/, ::grpc::ServerWriter< ::spec::proto::runtime::v1::GetFileResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFile(::grpc::ServerContext* context, ::spec::proto::runtime::v1::GetFileRequest* request, ::grpc::ServerAsyncWriter< ::spec::proto::runtime::v1::GetFileResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(16, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PutFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PutFile() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_PutFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutFile(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::spec::proto::runtime::v1::PutFileRequest>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPutFile(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::google::protobuf::Empty, ::spec::proto::runtime::v1::PutFileRequest>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(17, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListFile() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_ListFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ListFileRequest* /*request*/, ::spec::proto::runtime::v1::ListFileResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFile(::grpc::ServerContext* context, ::spec::proto::runtime::v1::ListFileRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::ListFileResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DelFile() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_DelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DelFileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelFile(::grpc::ServerContext* context, ::spec::proto::runtime::v1::DelFileRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFileMeta() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_GetFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileMeta(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileMetaRequest* /*request*/, ::spec::proto::runtime::v1::GetFileMetaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileMeta(::grpc::ServerContext* context, ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::GetFileMetaResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::spec::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeBinding(::grpc::ServerContext* context, ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::grpc::ServerAsyncResponseWriter< ::spec::proto::runtime::v1::InvokeBindingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SayHello<WithAsyncMethod_InvokeService<WithAsyncMethod_GetConfiguration<WithAsyncMethod_SaveConfiguration<WithAsyncMethod_DeleteConfiguration<WithAsyncMethod_SubscribeConfiguration<WithAsyncMethod_TryLock<WithAsyncMethod_Unlock<WithAsyncMethod_GetNextId<WithAsyncMethod_GetState<WithAsyncMethod_GetBulkState<WithAsyncMethod_SaveState<WithAsyncMethod_DeleteState<WithAsyncMethod_DeleteBulkState<WithAsyncMethod_ExecuteStateTransaction<WithAsyncMethod_PublishEvent<WithAsyncMethod_GetFile<WithAsyncMethod_PutFile<WithAsyncMethod_ListFile<WithAsyncMethod_DelFile<WithAsyncMethod_GetFileMeta<WithAsyncMethod_InvokeBinding<Service > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SayHello() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::SayHelloRequest, ::spec::proto::runtime::v1::SayHelloResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::SayHelloRequest* request, ::spec::proto::runtime::v1::SayHelloResponse* response) { return this->SayHello(context, request, response); }));}
    void SetMessageAllocatorFor_SayHello(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::SayHelloRequest, ::spec::proto::runtime::v1::SayHelloResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::SayHelloRequest, ::spec::proto::runtime::v1::SayHelloResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SayHelloRequest* /*request*/, ::spec::proto::runtime::v1::SayHelloResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SayHello(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::SayHelloRequest* /*request*/, ::spec::proto::runtime::v1::SayHelloResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InvokeService() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::InvokeServiceRequest, ::spec::proto::runtime::v1::InvokeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::InvokeServiceRequest* request, ::spec::proto::runtime::v1::InvokeResponse* response) { return this->InvokeService(context, request, response); }));}
    void SetMessageAllocatorFor_InvokeService(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::InvokeServiceRequest, ::spec::proto::runtime::v1::InvokeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::InvokeServiceRequest, ::spec::proto::runtime::v1::InvokeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::spec::proto::runtime::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InvokeService(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::spec::proto::runtime::v1::InvokeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetConfigurationRequest, ::spec::proto::runtime::v1::GetConfigurationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::GetConfigurationRequest* request, ::spec::proto::runtime::v1::GetConfigurationResponse* response) { return this->GetConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_GetConfiguration(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::GetConfigurationRequest, ::spec::proto::runtime::v1::GetConfigurationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetConfigurationRequest, ::spec::proto::runtime::v1::GetConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::spec::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::spec::proto::runtime::v1::GetConfigurationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SaveConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SaveConfiguration() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::SaveConfigurationRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::SaveConfigurationRequest* request, ::google::protobuf::Empty* response) { return this->SaveConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_SaveConfiguration(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::SaveConfigurationRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::SaveConfigurationRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SaveConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteConfiguration() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* request, ::google::protobuf::Empty* response) { return this->DeleteConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteConfiguration(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackBidiHandler< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->SubscribeConfiguration(context); }));
    }
    ~WithCallbackMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationResponse, ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::spec::proto::runtime::v1::SubscribeConfigurationRequest, ::spec::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfiguration(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_TryLock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TryLock() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::TryLockRequest, ::spec::proto::runtime::v1::TryLockResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::TryLockRequest* request, ::spec::proto::runtime::v1::TryLockResponse* response) { return this->TryLock(context, request, response); }));}
    void SetMessageAllocatorFor_TryLock(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::TryLockRequest, ::spec::proto::runtime::v1::TryLockResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::TryLockRequest, ::spec::proto::runtime::v1::TryLockResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TryLock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::TryLockRequest* /*request*/, ::spec::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TryLock(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::TryLockRequest* /*request*/, ::spec::proto::runtime::v1::TryLockResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Unlock() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::UnlockRequest, ::spec::proto::runtime::v1::UnlockResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::UnlockRequest* request, ::spec::proto::runtime::v1::UnlockResponse* response) { return this->Unlock(context, request, response); }));}
    void SetMessageAllocatorFor_Unlock(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::UnlockRequest, ::spec::proto::runtime::v1::UnlockResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::UnlockRequest, ::spec::proto::runtime::v1::UnlockResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::UnlockRequest* /*request*/, ::spec::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Unlock(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::UnlockRequest* /*request*/, ::spec::proto::runtime::v1::UnlockResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNextId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNextId() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetNextIdRequest, ::spec::proto::runtime::v1::GetNextIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::GetNextIdRequest* request, ::spec::proto::runtime::v1::GetNextIdResponse* response) { return this->GetNextId(context, request, response); }));}
    void SetMessageAllocatorFor_GetNextId(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::GetNextIdRequest, ::spec::proto::runtime::v1::GetNextIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetNextIdRequest, ::spec::proto::runtime::v1::GetNextIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetNextId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextId(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetNextIdRequest* /*request*/, ::spec::proto::runtime::v1::GetNextIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNextId(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::GetNextIdRequest* /*request*/, ::spec::proto::runtime::v1::GetNextIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetState() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetStateRequest, ::spec::proto::runtime::v1::GetStateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::GetStateRequest* request, ::spec::proto::runtime::v1::GetStateResponse* response) { return this->GetState(context, request, response); }));}
    void SetMessageAllocatorFor_GetState(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::GetStateRequest, ::spec::proto::runtime::v1::GetStateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetStateRequest, ::spec::proto::runtime::v1::GetStateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetStateRequest* /*request*/, ::spec::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetState(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::GetStateRequest* /*request*/, ::spec::proto::runtime::v1::GetStateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBulkState() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetBulkStateRequest, ::spec::proto::runtime::v1::GetBulkStateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::GetBulkStateRequest* request, ::spec::proto::runtime::v1::GetBulkStateResponse* response) { return this->GetBulkState(context, request, response); }));}
    void SetMessageAllocatorFor_GetBulkState(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::GetBulkStateRequest, ::spec::proto::runtime::v1::GetBulkStateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetBulkStateRequest, ::spec::proto::runtime::v1::GetBulkStateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::spec::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBulkState(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::spec::proto::runtime::v1::GetBulkStateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SaveState() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response) { return this->SaveState(context, request, response); }));}
    void SetMessageAllocatorFor_SaveState(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveState(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteState() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response) { return this->DeleteState(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteState(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteState(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response) { return this->DeleteBulkState(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteBulkState(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteBulkState(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response) { return this->ExecuteStateTransaction(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteStateTransaction(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteStateTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PublishEvent() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response) { return this->PublishEvent(context, request, response); }));}
    void SetMessageAllocatorFor_PublishEvent(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PublishEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFile() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackServerStreamingHandler< ::spec::proto::runtime::v1::GetFileRequest, ::spec::proto::runtime::v1::GetFileResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::GetFileRequest* request) { return this->GetFile(context, request); }));
    }
    ~WithCallbackMethod_GetFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileRequest* /*request*/, ::grpc::ServerWriter< ::spec::proto::runtime::v1::GetFileResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::spec::proto::runtime::v1::GetFileResponse>* GetFile(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PutFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PutFile() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackClientStreamingHandler< ::spec::proto::runtime::v1::PutFileRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, ::google::protobuf::Empty* response) { return this->PutFile(context, response); }));
    }
    ~WithCallbackMethod_PutFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutFile(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::spec::proto::runtime::v1::PutFileRequest>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::spec::proto::runtime::v1::PutFileRequest>* PutFile(
      ::grpc::CallbackServerContext* /*context*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListFile() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::ListFileRequest, ::spec::proto::runtime::v1::ListFileResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::ListFileRequest* request, ::spec::proto::runtime::v1::ListFileResp* response) { return this->ListFile(context, request, response); }));}
    void SetMessageAllocatorFor_ListFile(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::ListFileRequest, ::spec::proto::runtime::v1::ListFileResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::ListFileRequest, ::spec::proto::runtime::v1::ListFileResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ListFileRequest* /*request*/, ::spec::proto::runtime::v1::ListFileResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFile(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::ListFileRequest* /*request*/, ::spec::proto::runtime::v1::ListFileResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DelFile() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::DelFileRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::DelFileRequest* request, ::google::protobuf::Empty* response) { return this->DelFile(context, request, response); }));}
    void SetMessageAllocatorFor_DelFile(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::DelFileRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::DelFileRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DelFileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelFile(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::DelFileRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFileMeta() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetFileMetaRequest, ::spec::proto::runtime::v1::GetFileMetaResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::GetFileMetaRequest* request, ::spec::proto::runtime::v1::GetFileMetaResponse* response) { return this->GetFileMeta(context, request, response); }));}
    void SetMessageAllocatorFor_GetFileMeta(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::GetFileMetaRequest, ::spec::proto::runtime::v1::GetFileMetaResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::GetFileMetaRequest, ::spec::proto::runtime::v1::GetFileMetaResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileMeta(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileMetaRequest* /*request*/, ::spec::proto::runtime::v1::GetFileMetaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFileMeta(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileMetaRequest* /*request*/, ::spec::proto::runtime::v1::GetFileMetaResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::InvokeBindingRequest, ::spec::proto::runtime::v1::InvokeBindingResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::spec::proto::runtime::v1::InvokeBindingRequest* request, ::spec::proto::runtime::v1::InvokeBindingResponse* response) { return this->InvokeBinding(context, request, response); }));}
    void SetMessageAllocatorFor_InvokeBinding(
        ::grpc::MessageAllocator< ::spec::proto::runtime::v1::InvokeBindingRequest, ::spec::proto::runtime::v1::InvokeBindingResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::spec::proto::runtime::v1::InvokeBindingRequest, ::spec::proto::runtime::v1::InvokeBindingResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::spec::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InvokeBinding(
      ::grpc::CallbackServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::spec::proto::runtime::v1::InvokeBindingResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SayHello<WithCallbackMethod_InvokeService<WithCallbackMethod_GetConfiguration<WithCallbackMethod_SaveConfiguration<WithCallbackMethod_DeleteConfiguration<WithCallbackMethod_SubscribeConfiguration<WithCallbackMethod_TryLock<WithCallbackMethod_Unlock<WithCallbackMethod_GetNextId<WithCallbackMethod_GetState<WithCallbackMethod_GetBulkState<WithCallbackMethod_SaveState<WithCallbackMethod_DeleteState<WithCallbackMethod_DeleteBulkState<WithCallbackMethod_ExecuteStateTransaction<WithCallbackMethod_PublishEvent<WithCallbackMethod_GetFile<WithCallbackMethod_PutFile<WithCallbackMethod_ListFile<WithCallbackMethod_DelFile<WithCallbackMethod_GetFileMeta<WithCallbackMethod_InvokeBinding<Service > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SayHello() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SayHelloRequest* /*request*/, ::spec::proto::runtime::v1::SayHelloResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InvokeService() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::spec::proto::runtime::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::spec::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SaveConfiguration() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SaveConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteConfiguration() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationResponse, ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TryLock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TryLock() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_TryLock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::TryLockRequest* /*request*/, ::spec::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Unlock() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::UnlockRequest* /*request*/, ::spec::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNextId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNextId() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetNextId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextId(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetNextIdRequest* /*request*/, ::spec::proto::runtime::v1::GetNextIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetState() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetStateRequest* /*request*/, ::spec::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBulkState() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::spec::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SaveState() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteState() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PublishEvent() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFile() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GetFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileRequest* /*request*/, ::grpc::ServerWriter< ::spec::proto::runtime::v1::GetFileResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PutFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PutFile() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_PutFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutFile(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::spec::proto::runtime::v1::PutFileRequest>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListFile() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_ListFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ListFileRequest* /*request*/, ::spec::proto::runtime::v1::ListFileResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DelFile() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_DelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DelFileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFileMeta() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_GetFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileMeta(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileMetaRequest* /*request*/, ::spec::proto::runtime::v1::GetFileMetaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::spec::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SayHello() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SayHelloRequest* /*request*/, ::spec::proto::runtime::v1::SayHelloResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSayHello(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InvokeService() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::spec::proto::runtime::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeService(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::spec::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SaveConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SaveConfiguration() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SaveConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteConfiguration() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationResponse, ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeConfiguration(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(5, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TryLock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TryLock() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_TryLock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::TryLockRequest* /*request*/, ::spec::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTryLock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Unlock() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::UnlockRequest* /*request*/, ::spec::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNextId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNextId() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetNextId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextId(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetNextIdRequest* /*request*/, ::spec::proto::runtime::v1::GetNextIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNextId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetState() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetStateRequest* /*request*/, ::spec::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBulkState() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::spec::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBulkState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SaveState() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteState() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBulkState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteStateTransaction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PublishEvent() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFile() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GetFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileRequest* /*request*/, ::grpc::ServerWriter< ::spec::proto::runtime::v1::GetFileResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(16, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PutFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PutFile() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_PutFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutFile(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::spec::proto::runtime::v1::PutFileRequest>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPutFile(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(17, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListFile() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_ListFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ListFileRequest* /*request*/, ::spec::proto::runtime::v1::ListFileResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DelFile() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_DelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DelFileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFileMeta() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_GetFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileMeta(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileMetaRequest* /*request*/, ::spec::proto::runtime::v1::GetFileMetaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileMeta(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::spec::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeBinding(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SayHello() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SayHello(context, request, response); }));
    }
    ~WithRawCallbackMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SayHelloRequest* /*request*/, ::spec::proto::runtime::v1::SayHelloResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SayHello(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InvokeService() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InvokeService(context, request, response); }));
    }
    ~WithRawCallbackMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::spec::proto::runtime::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InvokeService(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConfiguration(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::spec::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SaveConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SaveConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SaveConfiguration(context, request, response); }));
    }
    ~WithRawCallbackMethod_SaveConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteConfiguration(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->SubscribeConfiguration(context); }));
    }
    ~WithRawCallbackMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::spec::proto::runtime::v1::SubscribeConfigurationResponse, ::spec::proto::runtime::v1::SubscribeConfigurationRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* SubscribeConfiguration(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TryLock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TryLock() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TryLock(context, request, response); }));
    }
    ~WithRawCallbackMethod_TryLock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::TryLockRequest* /*request*/, ::spec::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TryLock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Unlock() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Unlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::UnlockRequest* /*request*/, ::spec::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Unlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNextId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNextId() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNextId(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetNextId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextId(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetNextIdRequest* /*request*/, ::spec::proto::runtime::v1::GetNextIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNextId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetState() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetState(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetStateRequest* /*request*/, ::spec::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBulkState() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBulkState(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::spec::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBulkState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SaveState() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SaveState(context, request, response); }));
    }
    ~WithRawCallbackMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteState() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteState(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteBulkState(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteBulkState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteStateTransaction(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteStateTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PublishEvent() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PublishEvent(context, request, response); }));
    }
    ~WithRawCallbackMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PublishEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFile() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetFile(context, request); }));
    }
    ~WithRawCallbackMethod_GetFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileRequest* /*request*/, ::grpc::ServerWriter< ::spec::proto::runtime::v1::GetFileResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PutFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PutFile() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->PutFile(context, response); }));
    }
    ~WithRawCallbackMethod_PutFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutFile(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::spec::proto::runtime::v1::PutFileRequest>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* PutFile(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListFile() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListFile(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ListFileRequest* /*request*/, ::spec::proto::runtime::v1::ListFileResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DelFile() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DelFile(context, request, response); }));
    }
    ~WithRawCallbackMethod_DelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DelFileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFileMeta() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFileMeta(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileMeta(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileMetaRequest* /*request*/, ::spec::proto::runtime::v1::GetFileMetaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFileMeta(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InvokeBinding(context, request, response); }));
    }
    ~WithRawCallbackMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::spec::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InvokeBinding(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SayHello() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::SayHelloRequest, ::spec::proto::runtime::v1::SayHelloResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::SayHelloRequest, ::spec::proto::runtime::v1::SayHelloResponse>* streamer) {
                       return this->StreamedSayHello(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SayHelloRequest* /*request*/, ::spec::proto::runtime::v1::SayHelloResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSayHello(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::SayHelloRequest,::spec::proto::runtime::v1::SayHelloResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InvokeService() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::InvokeServiceRequest, ::spec::proto::runtime::v1::InvokeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::InvokeServiceRequest, ::spec::proto::runtime::v1::InvokeResponse>* streamer) {
                       return this->StreamedInvokeService(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::spec::proto::runtime::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInvokeService(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::InvokeServiceRequest,::spec::proto::runtime::v1::InvokeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::GetConfigurationRequest, ::spec::proto::runtime::v1::GetConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::GetConfigurationRequest, ::spec::proto::runtime::v1::GetConfigurationResponse>* streamer) {
                       return this->StreamedGetConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::spec::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::GetConfigurationRequest,::spec::proto::runtime::v1::GetConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SaveConfiguration() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::SaveConfigurationRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::SaveConfigurationRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSaveConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SaveConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::SaveConfigurationRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteConfiguration() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::DeleteConfigurationRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteConfiguration(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteConfigurationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::DeleteConfigurationRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TryLock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TryLock() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::TryLockRequest, ::spec::proto::runtime::v1::TryLockResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::TryLockRequest, ::spec::proto::runtime::v1::TryLockResponse>* streamer) {
                       return this->StreamedTryLock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TryLock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TryLock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::TryLockRequest* /*request*/, ::spec::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTryLock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::TryLockRequest,::spec::proto::runtime::v1::TryLockResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Unlock() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::UnlockRequest, ::spec::proto::runtime::v1::UnlockResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::UnlockRequest, ::spec::proto::runtime::v1::UnlockResponse>* streamer) {
                       return this->StreamedUnlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::UnlockRequest* /*request*/, ::spec::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::UnlockRequest,::spec::proto::runtime::v1::UnlockResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNextId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNextId() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::GetNextIdRequest, ::spec::proto::runtime::v1::GetNextIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::GetNextIdRequest, ::spec::proto::runtime::v1::GetNextIdResponse>* streamer) {
                       return this->StreamedGetNextId(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNextId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNextId(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetNextIdRequest* /*request*/, ::spec::proto::runtime::v1::GetNextIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNextId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::GetNextIdRequest,::spec::proto::runtime::v1::GetNextIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetState() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::GetStateRequest, ::spec::proto::runtime::v1::GetStateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::GetStateRequest, ::spec::proto::runtime::v1::GetStateResponse>* streamer) {
                       return this->StreamedGetState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetStateRequest* /*request*/, ::spec::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::GetStateRequest,::spec::proto::runtime::v1::GetStateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBulkState() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::GetBulkStateRequest, ::spec::proto::runtime::v1::GetBulkStateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::GetBulkStateRequest, ::spec::proto::runtime::v1::GetBulkStateResponse>* streamer) {
                       return this->StreamedGetBulkState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::spec::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBulkState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::GetBulkStateRequest,::spec::proto::runtime::v1::GetBulkStateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SaveState() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSaveState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::SaveStateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteState() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::DeleteStateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteBulkState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteBulkState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::DeleteBulkStateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedExecuteStateTransaction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteStateTransaction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PublishEvent() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedPublishEvent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPublishEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::PublishEventRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListFile() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::ListFileRequest, ::spec::proto::runtime::v1::ListFileResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::ListFileRequest, ::spec::proto::runtime::v1::ListFileResp>* streamer) {
                       return this->StreamedListFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::ListFileRequest* /*request*/, ::spec::proto::runtime::v1::ListFileResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::ListFileRequest,::spec::proto::runtime::v1::ListFileResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DelFile() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::DelFileRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::DelFileRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDelFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::DelFileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::DelFileRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFileMeta() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::GetFileMetaRequest, ::spec::proto::runtime::v1::GetFileMetaResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::GetFileMetaRequest, ::spec::proto::runtime::v1::GetFileMetaResponse>* streamer) {
                       return this->StreamedGetFileMeta(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFileMeta(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileMetaRequest* /*request*/, ::spec::proto::runtime::v1::GetFileMetaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFileMeta(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::GetFileMetaRequest,::spec::proto::runtime::v1::GetFileMetaResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::spec::proto::runtime::v1::InvokeBindingRequest, ::spec::proto::runtime::v1::InvokeBindingResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::spec::proto::runtime::v1::InvokeBindingRequest, ::spec::proto::runtime::v1::InvokeBindingResponse>* streamer) {
                       return this->StreamedInvokeBinding(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::spec::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInvokeBinding(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::spec::proto::runtime::v1::InvokeBindingRequest,::spec::proto::runtime::v1::InvokeBindingResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SayHello<WithStreamedUnaryMethod_InvokeService<WithStreamedUnaryMethod_GetConfiguration<WithStreamedUnaryMethod_SaveConfiguration<WithStreamedUnaryMethod_DeleteConfiguration<WithStreamedUnaryMethod_TryLock<WithStreamedUnaryMethod_Unlock<WithStreamedUnaryMethod_GetNextId<WithStreamedUnaryMethod_GetState<WithStreamedUnaryMethod_GetBulkState<WithStreamedUnaryMethod_SaveState<WithStreamedUnaryMethod_DeleteState<WithStreamedUnaryMethod_DeleteBulkState<WithStreamedUnaryMethod_ExecuteStateTransaction<WithStreamedUnaryMethod_PublishEvent<WithStreamedUnaryMethod_ListFile<WithStreamedUnaryMethod_DelFile<WithStreamedUnaryMethod_GetFileMeta<WithStreamedUnaryMethod_InvokeBinding<Service > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetFile() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::spec::proto::runtime::v1::GetFileRequest, ::spec::proto::runtime::v1::GetFileResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::spec::proto::runtime::v1::GetFileRequest, ::spec::proto::runtime::v1::GetFileResponse>* streamer) {
                       return this->StreamedGetFile(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFile(::grpc::ServerContext* /*context*/, const ::spec::proto::runtime::v1::GetFileRequest* /*request*/, ::grpc::ServerWriter< ::spec::proto::runtime::v1::GetFileResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetFile(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::spec::proto::runtime::v1::GetFileRequest,::spec::proto::runtime::v1::GetFileResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetFile<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_SayHello<WithStreamedUnaryMethod_InvokeService<WithStreamedUnaryMethod_GetConfiguration<WithStreamedUnaryMethod_SaveConfiguration<WithStreamedUnaryMethod_DeleteConfiguration<WithStreamedUnaryMethod_TryLock<WithStreamedUnaryMethod_Unlock<WithStreamedUnaryMethod_GetNextId<WithStreamedUnaryMethod_GetState<WithStreamedUnaryMethod_GetBulkState<WithStreamedUnaryMethod_SaveState<WithStreamedUnaryMethod_DeleteState<WithStreamedUnaryMethod_DeleteBulkState<WithStreamedUnaryMethod_ExecuteStateTransaction<WithStreamedUnaryMethod_PublishEvent<WithSplitStreamingMethod_GetFile<WithStreamedUnaryMethod_ListFile<WithStreamedUnaryMethod_DelFile<WithStreamedUnaryMethod_GetFileMeta<WithStreamedUnaryMethod_InvokeBinding<Service > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace spec


#endif  // GRPC_runtime_2eproto__INCLUDED
