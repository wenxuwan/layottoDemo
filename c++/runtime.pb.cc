// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: runtime.proto

#include "runtime.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace spec {
namespace proto {
namespace runtime {
namespace v1 {
constexpr GetFileMetaRequest::GetFileMetaRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : request_(nullptr){}
struct GetFileMetaRequestDefaultTypeInternal {
  constexpr GetFileMetaRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetFileMetaRequestDefaultTypeInternal() {}
  union {
    GetFileMetaRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetFileMetaRequestDefaultTypeInternal _GetFileMetaRequest_default_instance_;
constexpr GetFileMetaResponse::GetFileMetaResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : last_modified_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , size_(int64_t{0}){}
struct GetFileMetaResponseDefaultTypeInternal {
  constexpr GetFileMetaResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetFileMetaResponseDefaultTypeInternal() {}
  union {
    GetFileMetaResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetFileMetaResponseDefaultTypeInternal _GetFileMetaResponse_default_instance_;
constexpr FileMetaValue::FileMetaValue(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(){}
struct FileMetaValueDefaultTypeInternal {
  constexpr FileMetaValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileMetaValueDefaultTypeInternal() {}
  union {
    FileMetaValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileMetaValueDefaultTypeInternal _FileMetaValue_default_instance_;
constexpr FileMeta_MetadataEntry_DoNotUse::FileMeta_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct FileMeta_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr FileMeta_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileMeta_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FileMeta_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileMeta_MetadataEntry_DoNotUseDefaultTypeInternal _FileMeta_MetadataEntry_DoNotUse_default_instance_;
constexpr FileMeta::FileMeta(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct FileMetaDefaultTypeInternal {
  constexpr FileMetaDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileMetaDefaultTypeInternal() {}
  union {
    FileMeta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileMetaDefaultTypeInternal _FileMeta_default_instance_;
constexpr GetFileRequest_MetadataEntry_DoNotUse::GetFileRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetFileRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr GetFileRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetFileRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetFileRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetFileRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetFileRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr GetFileRequest::GetFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetFileRequestDefaultTypeInternal {
  constexpr GetFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetFileRequestDefaultTypeInternal() {}
  union {
    GetFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetFileRequestDefaultTypeInternal _GetFileRequest_default_instance_;
constexpr GetFileResponse::GetFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetFileResponseDefaultTypeInternal {
  constexpr GetFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetFileResponseDefaultTypeInternal() {}
  union {
    GetFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetFileResponseDefaultTypeInternal _GetFileResponse_default_instance_;
constexpr PutFileRequest_MetadataEntry_DoNotUse::PutFileRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PutFileRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr PutFileRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PutFileRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PutFileRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PutFileRequest_MetadataEntry_DoNotUseDefaultTypeInternal _PutFileRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr PutFileRequest::PutFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PutFileRequestDefaultTypeInternal {
  constexpr PutFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PutFileRequestDefaultTypeInternal() {}
  union {
    PutFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PutFileRequestDefaultTypeInternal _PutFileRequest_default_instance_;
constexpr FileRequest_MetadataEntry_DoNotUse::FileRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct FileRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr FileRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FileRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileRequest_MetadataEntry_DoNotUseDefaultTypeInternal _FileRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr FileRequest::FileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FileRequestDefaultTypeInternal {
  constexpr FileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileRequestDefaultTypeInternal() {}
  union {
    FileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileRequestDefaultTypeInternal _FileRequest_default_instance_;
constexpr ListFileRequest::ListFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : marker_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , request_(nullptr)
  , page_size_(0){}
struct ListFileRequestDefaultTypeInternal {
  constexpr ListFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListFileRequestDefaultTypeInternal() {}
  union {
    ListFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListFileRequestDefaultTypeInternal _ListFileRequest_default_instance_;
constexpr FileInfo_MetadataEntry_DoNotUse::FileInfo_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct FileInfo_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr FileInfo_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileInfo_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FileInfo_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileInfo_MetadataEntry_DoNotUseDefaultTypeInternal _FileInfo_MetadataEntry_DoNotUse_default_instance_;
constexpr FileInfo::FileInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , last_modified_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , size_(int64_t{0}){}
struct FileInfoDefaultTypeInternal {
  constexpr FileInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileInfoDefaultTypeInternal() {}
  union {
    FileInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileInfoDefaultTypeInternal _FileInfo_default_instance_;
constexpr ListFileResp::ListFileResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : files_()
  , marker_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , is_truncated_(false){}
struct ListFileRespDefaultTypeInternal {
  constexpr ListFileRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListFileRespDefaultTypeInternal() {}
  union {
    ListFileResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListFileRespDefaultTypeInternal _ListFileResp_default_instance_;
constexpr DelFileRequest::DelFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : request_(nullptr){}
struct DelFileRequestDefaultTypeInternal {
  constexpr DelFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DelFileRequestDefaultTypeInternal() {}
  union {
    DelFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DelFileRequestDefaultTypeInternal _DelFileRequest_default_instance_;
constexpr GetNextIdRequest_MetadataEntry_DoNotUse::GetNextIdRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetNextIdRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr GetNextIdRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNextIdRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetNextIdRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNextIdRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetNextIdRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr GetNextIdRequest::GetNextIdRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , options_(nullptr){}
struct GetNextIdRequestDefaultTypeInternal {
  constexpr GetNextIdRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNextIdRequestDefaultTypeInternal() {}
  union {
    GetNextIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNextIdRequestDefaultTypeInternal _GetNextIdRequest_default_instance_;
constexpr SequencerOptions::SequencerOptions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : increment_(0)
{}
struct SequencerOptionsDefaultTypeInternal {
  constexpr SequencerOptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SequencerOptionsDefaultTypeInternal() {}
  union {
    SequencerOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SequencerOptionsDefaultTypeInternal _SequencerOptions_default_instance_;
constexpr GetNextIdResponse::GetNextIdResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : next_id_(int64_t{0}){}
struct GetNextIdResponseDefaultTypeInternal {
  constexpr GetNextIdResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNextIdResponseDefaultTypeInternal() {}
  union {
    GetNextIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNextIdResponseDefaultTypeInternal _GetNextIdResponse_default_instance_;
constexpr TryLockRequest::TryLockRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resource_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lock_owner_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , expire_(0){}
struct TryLockRequestDefaultTypeInternal {
  constexpr TryLockRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TryLockRequestDefaultTypeInternal() {}
  union {
    TryLockRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TryLockRequestDefaultTypeInternal _TryLockRequest_default_instance_;
constexpr TryLockResponse::TryLockResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(false){}
struct TryLockResponseDefaultTypeInternal {
  constexpr TryLockResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TryLockResponseDefaultTypeInternal() {}
  union {
    TryLockResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TryLockResponseDefaultTypeInternal _TryLockResponse_default_instance_;
constexpr UnlockRequest::UnlockRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resource_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lock_owner_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UnlockRequestDefaultTypeInternal {
  constexpr UnlockRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnlockRequestDefaultTypeInternal() {}
  union {
    UnlockRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnlockRequestDefaultTypeInternal _UnlockRequest_default_instance_;
constexpr UnlockResponse::UnlockResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(0)
{}
struct UnlockResponseDefaultTypeInternal {
  constexpr UnlockResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnlockResponseDefaultTypeInternal() {}
  union {
    UnlockResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnlockResponseDefaultTypeInternal _UnlockResponse_default_instance_;
constexpr SayHelloRequest::SayHelloRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : service_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(nullptr){}
struct SayHelloRequestDefaultTypeInternal {
  constexpr SayHelloRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SayHelloRequestDefaultTypeInternal() {}
  union {
    SayHelloRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SayHelloRequestDefaultTypeInternal _SayHelloRequest_default_instance_;
constexpr SayHelloResponse::SayHelloResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hello_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(nullptr){}
struct SayHelloResponseDefaultTypeInternal {
  constexpr SayHelloResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SayHelloResponseDefaultTypeInternal() {}
  union {
    SayHelloResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SayHelloResponseDefaultTypeInternal _SayHelloResponse_default_instance_;
constexpr InvokeServiceRequest::InvokeServiceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(nullptr){}
struct InvokeServiceRequestDefaultTypeInternal {
  constexpr InvokeServiceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvokeServiceRequestDefaultTypeInternal() {}
  union {
    InvokeServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvokeServiceRequestDefaultTypeInternal _InvokeServiceRequest_default_instance_;
constexpr CommonInvokeRequest::CommonInvokeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : method_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , content_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(nullptr)
  , http_extension_(nullptr){}
struct CommonInvokeRequestDefaultTypeInternal {
  constexpr CommonInvokeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CommonInvokeRequestDefaultTypeInternal() {}
  union {
    CommonInvokeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CommonInvokeRequestDefaultTypeInternal _CommonInvokeRequest_default_instance_;
constexpr HTTPExtension::HTTPExtension(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : querystring_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , verb_(0)
{}
struct HTTPExtensionDefaultTypeInternal {
  constexpr HTTPExtensionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HTTPExtensionDefaultTypeInternal() {}
  union {
    HTTPExtension _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HTTPExtensionDefaultTypeInternal _HTTPExtension_default_instance_;
constexpr InvokeResponse::InvokeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : content_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(nullptr){}
struct InvokeResponseDefaultTypeInternal {
  constexpr InvokeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvokeResponseDefaultTypeInternal() {}
  union {
    InvokeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvokeResponseDefaultTypeInternal _InvokeResponse_default_instance_;
constexpr ConfigurationItem_TagsEntry_DoNotUse::ConfigurationItem_TagsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ConfigurationItem_TagsEntry_DoNotUseDefaultTypeInternal {
  constexpr ConfigurationItem_TagsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigurationItem_TagsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConfigurationItem_TagsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigurationItem_TagsEntry_DoNotUseDefaultTypeInternal _ConfigurationItem_TagsEntry_DoNotUse_default_instance_;
constexpr ConfigurationItem_MetadataEntry_DoNotUse::ConfigurationItem_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ConfigurationItem_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr ConfigurationItem_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigurationItem_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConfigurationItem_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigurationItem_MetadataEntry_DoNotUseDefaultTypeInternal _ConfigurationItem_MetadataEntry_DoNotUse_default_instance_;
constexpr ConfigurationItem::ConfigurationItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tags_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , content_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , group_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , label_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ConfigurationItemDefaultTypeInternal {
  constexpr ConfigurationItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigurationItemDefaultTypeInternal() {}
  union {
    ConfigurationItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigurationItemDefaultTypeInternal _ConfigurationItem_default_instance_;
constexpr GetConfigurationRequest_MetadataEntry_DoNotUse::GetConfigurationRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetConfigurationRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr GetConfigurationRequest::GetConfigurationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keys_()
  , metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , group_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , label_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subscribe_update_(false){}
struct GetConfigurationRequestDefaultTypeInternal {
  constexpr GetConfigurationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConfigurationRequestDefaultTypeInternal() {}
  union {
    GetConfigurationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConfigurationRequestDefaultTypeInternal _GetConfigurationRequest_default_instance_;
constexpr GetConfigurationResponse::GetConfigurationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct GetConfigurationResponseDefaultTypeInternal {
  constexpr GetConfigurationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConfigurationResponseDefaultTypeInternal() {}
  union {
    GetConfigurationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConfigurationResponseDefaultTypeInternal _GetConfigurationResponse_default_instance_;
constexpr SubscribeConfigurationRequest_MetadataEntry_DoNotUse::SubscribeConfigurationRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubscribeConfigurationRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr SubscribeConfigurationRequest::SubscribeConfigurationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keys_()
  , metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , group_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , label_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SubscribeConfigurationRequestDefaultTypeInternal {
  constexpr SubscribeConfigurationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubscribeConfigurationRequestDefaultTypeInternal() {}
  union {
    SubscribeConfigurationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubscribeConfigurationRequestDefaultTypeInternal _SubscribeConfigurationRequest_default_instance_;
constexpr SubscribeConfigurationResponse::SubscribeConfigurationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_()
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SubscribeConfigurationResponseDefaultTypeInternal {
  constexpr SubscribeConfigurationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubscribeConfigurationResponseDefaultTypeInternal() {}
  union {
    SubscribeConfigurationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubscribeConfigurationResponseDefaultTypeInternal _SubscribeConfigurationResponse_default_instance_;
constexpr SaveConfigurationRequest_MetadataEntry_DoNotUse::SaveConfigurationRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SaveConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr SaveConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SaveConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SaveConfigurationRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SaveConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _SaveConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr SaveConfigurationRequest::SaveConfigurationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_()
  , metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SaveConfigurationRequestDefaultTypeInternal {
  constexpr SaveConfigurationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SaveConfigurationRequestDefaultTypeInternal() {}
  union {
    SaveConfigurationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SaveConfigurationRequestDefaultTypeInternal _SaveConfigurationRequest_default_instance_;
constexpr DeleteConfigurationRequest_MetadataEntry_DoNotUse::DeleteConfigurationRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DeleteConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr DeleteConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeleteConfigurationRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _DeleteConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr DeleteConfigurationRequest::DeleteConfigurationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keys_()
  , metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , group_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , label_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteConfigurationRequestDefaultTypeInternal {
  constexpr DeleteConfigurationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteConfigurationRequestDefaultTypeInternal() {}
  union {
    DeleteConfigurationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteConfigurationRequestDefaultTypeInternal _DeleteConfigurationRequest_default_instance_;
constexpr GetStateRequest_MetadataEntry_DoNotUse::GetStateRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetStateRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetStateRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr GetStateRequest::GetStateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , consistency_(0)
{}
struct GetStateRequestDefaultTypeInternal {
  constexpr GetStateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStateRequestDefaultTypeInternal() {}
  union {
    GetStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStateRequestDefaultTypeInternal _GetStateRequest_default_instance_;
constexpr GetBulkStateRequest_MetadataEntry_DoNotUse::GetBulkStateRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetBulkStateRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr GetBulkStateRequest::GetBulkStateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keys_()
  , metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , parallelism_(0){}
struct GetBulkStateRequestDefaultTypeInternal {
  constexpr GetBulkStateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBulkStateRequestDefaultTypeInternal() {}
  union {
    GetBulkStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBulkStateRequestDefaultTypeInternal _GetBulkStateRequest_default_instance_;
constexpr GetBulkStateResponse::GetBulkStateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct GetBulkStateResponseDefaultTypeInternal {
  constexpr GetBulkStateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBulkStateResponseDefaultTypeInternal() {}
  union {
    GetBulkStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBulkStateResponseDefaultTypeInternal _GetBulkStateResponse_default_instance_;
constexpr BulkStateItem_MetadataEntry_DoNotUse::BulkStateItem_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BulkStateItem_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal _BulkStateItem_MetadataEntry_DoNotUse_default_instance_;
constexpr BulkStateItem::BulkStateItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , etag_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BulkStateItemDefaultTypeInternal {
  constexpr BulkStateItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BulkStateItemDefaultTypeInternal() {}
  union {
    BulkStateItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BulkStateItemDefaultTypeInternal _BulkStateItem_default_instance_;
constexpr GetStateResponse_MetadataEntry_DoNotUse::GetStateResponse_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetStateResponse_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal _GetStateResponse_MetadataEntry_DoNotUse_default_instance_;
constexpr GetStateResponse::GetStateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , etag_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetStateResponseDefaultTypeInternal {
  constexpr GetStateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStateResponseDefaultTypeInternal() {}
  union {
    GetStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStateResponseDefaultTypeInternal _GetStateResponse_default_instance_;
constexpr DeleteStateRequest_MetadataEntry_DoNotUse::DeleteStateRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeleteStateRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr DeleteStateRequest::DeleteStateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , etag_(nullptr)
  , options_(nullptr){}
struct DeleteStateRequestDefaultTypeInternal {
  constexpr DeleteStateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteStateRequestDefaultTypeInternal() {}
  union {
    DeleteStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteStateRequestDefaultTypeInternal _DeleteStateRequest_default_instance_;
constexpr DeleteBulkStateRequest::DeleteBulkStateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : states_()
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteBulkStateRequestDefaultTypeInternal {
  constexpr DeleteBulkStateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteBulkStateRequestDefaultTypeInternal() {}
  union {
    DeleteBulkStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteBulkStateRequestDefaultTypeInternal _DeleteBulkStateRequest_default_instance_;
constexpr SaveStateRequest::SaveStateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : states_()
  , store_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SaveStateRequestDefaultTypeInternal {
  constexpr SaveStateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SaveStateRequestDefaultTypeInternal() {}
  union {
    SaveStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SaveStateRequestDefaultTypeInternal _SaveStateRequest_default_instance_;
constexpr StateItem_MetadataEntry_DoNotUse::StateItem_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct StateItem_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr StateItem_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StateItem_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    StateItem_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StateItem_MetadataEntry_DoNotUseDefaultTypeInternal _StateItem_MetadataEntry_DoNotUse_default_instance_;
constexpr StateItem::StateItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , etag_(nullptr)
  , options_(nullptr){}
struct StateItemDefaultTypeInternal {
  constexpr StateItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StateItemDefaultTypeInternal() {}
  union {
    StateItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StateItemDefaultTypeInternal _StateItem_default_instance_;
constexpr Etag::Etag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct EtagDefaultTypeInternal {
  constexpr EtagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EtagDefaultTypeInternal() {}
  union {
    Etag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EtagDefaultTypeInternal _Etag_default_instance_;
constexpr StateOptions::StateOptions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : concurrency_(0)

  , consistency_(0)
{}
struct StateOptionsDefaultTypeInternal {
  constexpr StateOptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StateOptionsDefaultTypeInternal() {}
  union {
    StateOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StateOptionsDefaultTypeInternal _StateOptions_default_instance_;
constexpr TransactionalStateOperation::TransactionalStateOperation(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : operationtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , request_(nullptr){}
struct TransactionalStateOperationDefaultTypeInternal {
  constexpr TransactionalStateOperationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TransactionalStateOperationDefaultTypeInternal() {}
  union {
    TransactionalStateOperation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TransactionalStateOperationDefaultTypeInternal _TransactionalStateOperation_default_instance_;
constexpr ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ExecuteStateTransactionRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal _ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr ExecuteStateTransactionRequest::ExecuteStateTransactionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : operations_()
  , metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , storename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ExecuteStateTransactionRequestDefaultTypeInternal {
  constexpr ExecuteStateTransactionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecuteStateTransactionRequestDefaultTypeInternal() {}
  union {
    ExecuteStateTransactionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecuteStateTransactionRequestDefaultTypeInternal _ExecuteStateTransactionRequest_default_instance_;
constexpr PublishEventRequest_MetadataEntry_DoNotUse::PublishEventRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PublishEventRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal _PublishEventRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr PublishEventRequest::PublishEventRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , pubsub_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , topic_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_content_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PublishEventRequestDefaultTypeInternal {
  constexpr PublishEventRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PublishEventRequestDefaultTypeInternal() {}
  union {
    PublishEventRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PublishEventRequestDefaultTypeInternal _PublishEventRequest_default_instance_;
constexpr InvokeBindingRequest_MetadataEntry_DoNotUse::InvokeBindingRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InvokeBindingRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr InvokeBindingRequest::InvokeBindingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , operation_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct InvokeBindingRequestDefaultTypeInternal {
  constexpr InvokeBindingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvokeBindingRequestDefaultTypeInternal() {}
  union {
    InvokeBindingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvokeBindingRequestDefaultTypeInternal _InvokeBindingRequest_default_instance_;
constexpr InvokeBindingResponse_MetadataEntry_DoNotUse::InvokeBindingResponse_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InvokeBindingResponse_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_;
constexpr InvokeBindingResponse::InvokeBindingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct InvokeBindingResponseDefaultTypeInternal {
  constexpr InvokeBindingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvokeBindingResponseDefaultTypeInternal() {}
  union {
    InvokeBindingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvokeBindingResponseDefaultTypeInternal _InvokeBindingResponse_default_instance_;
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace spec
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_runtime_2eproto[70];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_runtime_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_runtime_2eproto = nullptr;

const uint32_t TableStruct_runtime_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileMetaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileMetaRequest, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileMetaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileMetaResponse, size_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileMetaResponse, last_modified_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileMetaResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileMetaValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileMetaValue, value_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileMeta_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileMeta_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileMeta_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileMeta_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileMeta, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileRequest, name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetFileResponse, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest, name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PutFileRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileRequest, name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ListFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ListFileRequest, request_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ListFileRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ListFileRequest, marker_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo, file_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo, size_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo, last_modified_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::FileInfo, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ListFileResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ListFileResp, files_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ListFileResp, marker_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ListFileResp, is_truncated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DelFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DelFileRequest, request_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest, options_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SequencerOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SequencerOptions, increment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetNextIdResponse, next_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TryLockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TryLockRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TryLockRequest, resource_id_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TryLockRequest, lock_owner_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TryLockRequest, expire_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TryLockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TryLockResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::UnlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::UnlockRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::UnlockRequest, resource_id_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::UnlockRequest, lock_owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::UnlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::UnlockResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SayHelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SayHelloRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SayHelloRequest, name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SayHelloRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SayHelloResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SayHelloResponse, hello_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SayHelloResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeServiceRequest, id_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeServiceRequest, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::CommonInvokeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::CommonInvokeRequest, method_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::CommonInvokeRequest, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::CommonInvokeRequest, content_type_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::CommonInvokeRequest, http_extension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::HTTPExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::HTTPExtension, verb_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::HTTPExtension, querystring_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeResponse, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeResponse, content_type_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem_TagsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem_TagsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem_TagsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem, content_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem, group_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem, label_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem, tags_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ConfigurationItem, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest, group_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest, label_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest, keys_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationRequest, subscribe_update_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetConfigurationResponse, items_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest, group_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest, label_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest, keys_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationResponse, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationResponse, app_id_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SubscribeConfigurationResponse, items_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest, items_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveConfigurationRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest, group_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest, label_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest, keys_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteConfigurationRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest, consistency_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest, keys_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest, parallelism_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetBulkStateResponse, items_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem, etag_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem, error_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::BulkStateItem, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateResponse, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateResponse, etag_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::GetStateResponse, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest, etag_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest, options_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteStateRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteBulkStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteBulkStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::DeleteBulkStateRequest, states_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::SaveStateRequest, states_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem, value_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem, etag_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateItem, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::Etag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::Etag, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateOptions, concurrency_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::StateOptions, consistency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TransactionalStateOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TransactionalStateOperation, operationtype_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::TransactionalStateOperation, request_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ExecuteStateTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ExecuteStateTransactionRequest, storename_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ExecuteStateTransactionRequest, operations_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::ExecuteStateTransactionRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest, pubsub_name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest, topic_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest, data_content_type_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::PublishEventRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest, name_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingRequest, operation_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingResponse, data_),
  PROTOBUF_FIELD_OFFSET(::spec::proto::runtime::v1::InvokeBindingResponse, metadata_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::spec::proto::runtime::v1::GetFileMetaRequest)},
  { 7, -1, -1, sizeof(::spec::proto::runtime::v1::GetFileMetaResponse)},
  { 16, -1, -1, sizeof(::spec::proto::runtime::v1::FileMetaValue)},
  { 23, 31, -1, sizeof(::spec::proto::runtime::v1::FileMeta_MetadataEntry_DoNotUse)},
  { 33, -1, -1, sizeof(::spec::proto::runtime::v1::FileMeta)},
  { 40, 48, -1, sizeof(::spec::proto::runtime::v1::GetFileRequest_MetadataEntry_DoNotUse)},
  { 50, -1, -1, sizeof(::spec::proto::runtime::v1::GetFileRequest)},
  { 59, -1, -1, sizeof(::spec::proto::runtime::v1::GetFileResponse)},
  { 66, 74, -1, sizeof(::spec::proto::runtime::v1::PutFileRequest_MetadataEntry_DoNotUse)},
  { 76, -1, -1, sizeof(::spec::proto::runtime::v1::PutFileRequest)},
  { 86, 94, -1, sizeof(::spec::proto::runtime::v1::FileRequest_MetadataEntry_DoNotUse)},
  { 96, -1, -1, sizeof(::spec::proto::runtime::v1::FileRequest)},
  { 105, -1, -1, sizeof(::spec::proto::runtime::v1::ListFileRequest)},
  { 114, 122, -1, sizeof(::spec::proto::runtime::v1::FileInfo_MetadataEntry_DoNotUse)},
  { 124, -1, -1, sizeof(::spec::proto::runtime::v1::FileInfo)},
  { 134, -1, -1, sizeof(::spec::proto::runtime::v1::ListFileResp)},
  { 143, -1, -1, sizeof(::spec::proto::runtime::v1::DelFileRequest)},
  { 150, 158, -1, sizeof(::spec::proto::runtime::v1::GetNextIdRequest_MetadataEntry_DoNotUse)},
  { 160, -1, -1, sizeof(::spec::proto::runtime::v1::GetNextIdRequest)},
  { 170, -1, -1, sizeof(::spec::proto::runtime::v1::SequencerOptions)},
  { 177, -1, -1, sizeof(::spec::proto::runtime::v1::GetNextIdResponse)},
  { 184, -1, -1, sizeof(::spec::proto::runtime::v1::TryLockRequest)},
  { 194, -1, -1, sizeof(::spec::proto::runtime::v1::TryLockResponse)},
  { 201, -1, -1, sizeof(::spec::proto::runtime::v1::UnlockRequest)},
  { 210, -1, -1, sizeof(::spec::proto::runtime::v1::UnlockResponse)},
  { 217, -1, -1, sizeof(::spec::proto::runtime::v1::SayHelloRequest)},
  { 226, -1, -1, sizeof(::spec::proto::runtime::v1::SayHelloResponse)},
  { 234, -1, -1, sizeof(::spec::proto::runtime::v1::InvokeServiceRequest)},
  { 242, -1, -1, sizeof(::spec::proto::runtime::v1::CommonInvokeRequest)},
  { 252, -1, -1, sizeof(::spec::proto::runtime::v1::HTTPExtension)},
  { 260, -1, -1, sizeof(::spec::proto::runtime::v1::InvokeResponse)},
  { 268, 276, -1, sizeof(::spec::proto::runtime::v1::ConfigurationItem_TagsEntry_DoNotUse)},
  { 278, 286, -1, sizeof(::spec::proto::runtime::v1::ConfigurationItem_MetadataEntry_DoNotUse)},
  { 288, -1, -1, sizeof(::spec::proto::runtime::v1::ConfigurationItem)},
  { 300, 308, -1, sizeof(::spec::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse)},
  { 310, -1, -1, sizeof(::spec::proto::runtime::v1::GetConfigurationRequest)},
  { 323, -1, -1, sizeof(::spec::proto::runtime::v1::GetConfigurationResponse)},
  { 330, 338, -1, sizeof(::spec::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse)},
  { 340, -1, -1, sizeof(::spec::proto::runtime::v1::SubscribeConfigurationRequest)},
  { 352, -1, -1, sizeof(::spec::proto::runtime::v1::SubscribeConfigurationResponse)},
  { 361, 369, -1, sizeof(::spec::proto::runtime::v1::SaveConfigurationRequest_MetadataEntry_DoNotUse)},
  { 371, -1, -1, sizeof(::spec::proto::runtime::v1::SaveConfigurationRequest)},
  { 381, 389, -1, sizeof(::spec::proto::runtime::v1::DeleteConfigurationRequest_MetadataEntry_DoNotUse)},
  { 391, -1, -1, sizeof(::spec::proto::runtime::v1::DeleteConfigurationRequest)},
  { 403, 411, -1, sizeof(::spec::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse)},
  { 413, -1, -1, sizeof(::spec::proto::runtime::v1::GetStateRequest)},
  { 423, 431, -1, sizeof(::spec::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse)},
  { 433, -1, -1, sizeof(::spec::proto::runtime::v1::GetBulkStateRequest)},
  { 443, -1, -1, sizeof(::spec::proto::runtime::v1::GetBulkStateResponse)},
  { 450, 458, -1, sizeof(::spec::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse)},
  { 460, -1, -1, sizeof(::spec::proto::runtime::v1::BulkStateItem)},
  { 471, 479, -1, sizeof(::spec::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse)},
  { 481, -1, -1, sizeof(::spec::proto::runtime::v1::GetStateResponse)},
  { 490, 498, -1, sizeof(::spec::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse)},
  { 500, -1, -1, sizeof(::spec::proto::runtime::v1::DeleteStateRequest)},
  { 511, -1, -1, sizeof(::spec::proto::runtime::v1::DeleteBulkStateRequest)},
  { 519, -1, -1, sizeof(::spec::proto::runtime::v1::SaveStateRequest)},
  { 527, 535, -1, sizeof(::spec::proto::runtime::v1::StateItem_MetadataEntry_DoNotUse)},
  { 537, -1, -1, sizeof(::spec::proto::runtime::v1::StateItem)},
  { 548, -1, -1, sizeof(::spec::proto::runtime::v1::Etag)},
  { 555, -1, -1, sizeof(::spec::proto::runtime::v1::StateOptions)},
  { 563, -1, -1, sizeof(::spec::proto::runtime::v1::TransactionalStateOperation)},
  { 571, 579, -1, sizeof(::spec::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse)},
  { 581, -1, -1, sizeof(::spec::proto::runtime::v1::ExecuteStateTransactionRequest)},
  { 590, 598, -1, sizeof(::spec::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse)},
  { 600, -1, -1, sizeof(::spec::proto::runtime::v1::PublishEventRequest)},
  { 611, 619, -1, sizeof(::spec::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse)},
  { 621, -1, -1, sizeof(::spec::proto::runtime::v1::InvokeBindingRequest)},
  { 631, 639, -1, sizeof(::spec::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse)},
  { 641, -1, -1, sizeof(::spec::proto::runtime::v1::InvokeBindingResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetFileMetaRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetFileMetaResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_FileMetaValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_FileMeta_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_FileMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetFileRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_PutFileRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_PutFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_FileRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_FileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_ListFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_FileInfo_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_FileInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_ListFileResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_DelFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetNextIdRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetNextIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SequencerOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetNextIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_TryLockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_TryLockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_UnlockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_UnlockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SayHelloRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SayHelloResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_InvokeServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_CommonInvokeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_HTTPExtension_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_InvokeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_ConfigurationItem_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_ConfigurationItem_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_ConfigurationItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetConfigurationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SubscribeConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SubscribeConfigurationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SaveConfigurationRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SaveConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_DeleteConfigurationRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_DeleteConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetStateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetBulkStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetBulkStateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_BulkStateItem_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_BulkStateItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetStateResponse_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_GetStateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_DeleteStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_DeleteBulkStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_SaveStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_StateItem_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_StateItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_Etag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_StateOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_TransactionalStateOperation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_ExecuteStateTransactionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_PublishEventRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_PublishEventRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_InvokeBindingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spec::proto::runtime::v1::_InvokeBindingResponse_default_instance_),
};

const char descriptor_table_protodef_runtime_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rruntime.proto\022\025spec.proto.runtime.v1\032\033"
  "google/protobuf/empty.proto\032\031google/prot"
  "obuf/any.proto\"I\n\022GetFileMetaRequest\0223\n\007"
  "request\030\001 \001(\0132\".spec.proto.runtime.v1.Fi"
  "leRequest\"m\n\023GetFileMetaResponse\022\014\n\004size"
  "\030\001 \001(\003\022\025\n\rlast_modified\030\002 \001(\t\0221\n\010respons"
  "e\030\003 \001(\0132\037.spec.proto.runtime.v1.FileMeta"
  "\"\036\n\rFileMetaValue\022\r\n\005value\030\001 \003(\t\"\242\001\n\010Fil"
  "eMeta\022\?\n\010metadata\030\001 \003(\0132-.spec.proto.run"
  "time.v1.FileMeta.MetadataEntry\032U\n\rMetada"
  "taEntry\022\013\n\003key\030\001 \001(\t\0223\n\005value\030\002 \001(\0132$.sp"
  "ec.proto.runtime.v1.FileMetaValue:\0028\001\"\252\001"
  "\n\016GetFileRequest\022\022\n\nstore_name\030\001 \001(\t\022\014\n\004"
  "name\030\002 \001(\t\022E\n\010metadata\030\003 \003(\01323.spec.prot"
  "o.runtime.v1.GetFileRequest.MetadataEntr"
  "y\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
  "\030\002 \001(\t:\0028\001\"\037\n\017GetFileResponse\022\014\n\004data\030\001 "
  "\001(\014\"\270\001\n\016PutFileRequest\022\022\n\nstore_name\030\001 \001"
  "(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004data\030\003 \001(\014\022E\n\010metada"
  "ta\030\004 \003(\01323.spec.proto.runtime.v1.PutFile"
  "Request.MetadataEntry\032/\n\rMetadataEntry\022\013"
  "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\244\001\n\013FileR"
  "equest\022\022\n\nstore_name\030\001 \001(\t\022\014\n\004name\030\002 \001(\t"
  "\022B\n\010metadata\030\003 \003(\01320.spec.proto.runtime."
  "v1.FileRequest.MetadataEntry\032/\n\rMetadata"
  "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"i\n"
  "\017ListFileRequest\0223\n\007request\030\001 \001(\0132\".spec"
  ".proto.runtime.v1.FileRequest\022\021\n\tpage_si"
  "ze\030\002 \001(\005\022\016\n\006marker\030\003 \001(\t\"\264\001\n\010FileInfo\022\021\n"
  "\tfile_name\030\001 \001(\t\022\014\n\004size\030\002 \001(\003\022\025\n\rlast_m"
  "odified\030\003 \001(\t\022\?\n\010metadata\030\004 \003(\0132-.spec.p"
  "roto.runtime.v1.FileInfo.MetadataEntry\032/"
  "\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
  "\001(\t:\0028\001\"d\n\014ListFileResp\022.\n\005files\030\001 \003(\0132\037"
  ".spec.proto.runtime.v1.FileInfo\022\016\n\006marke"
  "r\030\002 \001(\t\022\024\n\014is_truncated\030\003 \001(\010\"E\n\016DelFile"
  "Request\0223\n\007request\030\001 \001(\0132\".spec.proto.ru"
  "ntime.v1.FileRequest\"\347\001\n\020GetNextIdReques"
  "t\022\022\n\nstore_name\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\0228\n\007op"
  "tions\030\003 \001(\0132\'.spec.proto.runtime.v1.Sequ"
  "encerOptions\022G\n\010metadata\030\004 \003(\01325.spec.pr"
  "oto.runtime.v1.GetNextIdRequest.Metadata"
  "Entry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
  "alue\030\002 \001(\t:\0028\001\"\203\001\n\020SequencerOptions\022H\n\ti"
  "ncrement\030\001 \001(\01625.spec.proto.runtime.v1.S"
  "equencerOptions.AutoIncrement\"%\n\rAutoInc"
  "rement\022\010\n\004WEAK\020\000\022\n\n\006STRONG\020\001\"$\n\021GetNextI"
  "dResponse\022\017\n\007next_id\030\001 \001(\003\"]\n\016TryLockReq"
  "uest\022\022\n\nstore_name\030\001 \001(\t\022\023\n\013resource_id\030"
  "\002 \001(\t\022\022\n\nlock_owner\030\003 \001(\t\022\016\n\006expire\030\004 \001("
  "\005\"\"\n\017TryLockResponse\022\017\n\007success\030\001 \001(\010\"L\n"
  "\rUnlockRequest\022\022\n\nstore_name\030\001 \001(\t\022\023\n\013re"
  "source_id\030\002 \001(\t\022\022\n\nlock_owner\030\003 \001(\t\"\246\001\n\016"
  "UnlockResponse\022<\n\006status\030\001 \001(\0162,.spec.pr"
  "oto.runtime.v1.UnlockResponse.Status\"V\n\006"
  "Status\022\013\n\007SUCCESS\020\000\022\020\n\014LOCK_UNEXIST\020\001\022\031\n"
  "\025LOCK_BELONG_TO_OTHERS\020\002\022\022\n\016INTERNAL_ERR"
  "OR\020\003\"Y\n\017SayHelloRequest\022\024\n\014service_name\030"
  "\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\"\n\004data\030\003 \001(\0132\024.goog"
  "le.protobuf.Any\"E\n\020SayHelloResponse\022\r\n\005h"
  "ello\030\001 \001(\t\022\"\n\004data\030\002 \001(\0132\024.google.protob"
  "uf.Any\"_\n\024InvokeServiceRequest\022\n\n\002id\030\001 \001"
  "(\t\022;\n\007message\030\003 \001(\0132*.spec.proto.runtime"
  ".v1.CommonInvokeRequest\"\235\001\n\023CommonInvoke"
  "Request\022\016\n\006method\030\001 \001(\t\022\"\n\004data\030\002 \001(\0132\024."
  "google.protobuf.Any\022\024\n\014content_type\030\003 \001("
  "\t\022<\n\016http_extension\030\004 \001(\0132$.spec.proto.r"
  "untime.v1.HTTPExtension\"\306\001\n\rHTTPExtensio"
  "n\0227\n\004verb\030\001 \001(\0162).spec.proto.runtime.v1."
  "HTTPExtension.Verb\022\023\n\013querystring\030\002 \001(\t\""
  "g\n\004Verb\022\010\n\004NONE\020\000\022\007\n\003GET\020\001\022\010\n\004HEAD\020\002\022\010\n\004"
  "POST\020\003\022\007\n\003PUT\020\004\022\n\n\006DELETE\020\005\022\013\n\007CONNECT\020\006"
  "\022\013\n\007OPTIONS\020\007\022\t\n\005TRACE\020\010\"J\n\016InvokeRespon"
  "se\022\"\n\004data\030\001 \001(\0132\024.google.protobuf.Any\022\024"
  "\n\014content_type\030\002 \001(\t\"\271\002\n\021ConfigurationIt"
  "em\022\013\n\003key\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\r\n\005grou"
  "p\030\003 \001(\t\022\r\n\005label\030\004 \001(\t\022@\n\004tags\030\005 \003(\01322.s"
  "pec.proto.runtime.v1.ConfigurationItem.T"
  "agsEntry\022H\n\010metadata\030\006 \003(\01326.spec.proto."
  "runtime.v1.ConfigurationItem.MetadataEnt"
  "ry\032+\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
  "\001(\t:\0028\001\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
  "\005value\030\002 \001(\t:\0028\001\"\204\002\n\027GetConfigurationReq"
  "uest\022\022\n\nstore_name\030\001 \001(\t\022\016\n\006app_id\030\002 \001(\t"
  "\022\r\n\005group\030\003 \001(\t\022\r\n\005label\030\004 \001(\t\022\014\n\004keys\030\005"
  " \003(\t\022N\n\010metadata\030\006 \003(\0132<.spec.proto.runt"
  "ime.v1.GetConfigurationRequest.MetadataE"
  "ntry\022\030\n\020subscribe_update\030\007 \001(\010\032/\n\rMetada"
  "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
  "S\n\030GetConfigurationResponse\0227\n\005items\030\001 \003"
  "(\0132(.spec.proto.runtime.v1.Configuration"
  "Item\"\366\001\n\035SubscribeConfigurationRequest\022\022"
  "\n\nstore_name\030\001 \001(\t\022\016\n\006app_id\030\002 \001(\t\022\r\n\005gr"
  "oup\030\003 \001(\t\022\r\n\005label\030\004 \001(\t\022\014\n\004keys\030\005 \003(\t\022T"
  "\n\010metadata\030\006 \003(\0132B.spec.proto.runtime.v1"
  ".SubscribeConfigurationRequest.MetadataE"
  "ntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
  "lue\030\002 \001(\t:\0028\001\"}\n\036SubscribeConfigurationR"
  "esponse\022\022\n\nstore_name\030\001 \001(\t\022\016\n\006app_id\030\002 "
  "\001(\t\0227\n\005items\030\003 \003(\0132(.spec.proto.runtime."
  "v1.ConfigurationItem\"\371\001\n\030SaveConfigurati"
  "onRequest\022\022\n\nstore_name\030\001 \001(\t\022\016\n\006app_id\030"
  "\002 \001(\t\0227\n\005items\030\003 \003(\0132(.spec.proto.runtim"
  "e.v1.ConfigurationItem\022O\n\010metadata\030\004 \003(\013"
  "2=.spec.proto.runtime.v1.SaveConfigurati"
  "onRequest.MetadataEntry\032/\n\rMetadataEntry"
  "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\360\001\n\032Del"
  "eteConfigurationRequest\022\022\n\nstore_name\030\001 "
  "\001(\t\022\016\n\006app_id\030\002 \001(\t\022\r\n\005group\030\003 \001(\t\022\r\n\005la"
  "bel\030\004 \001(\t\022\014\n\004keys\030\005 \003(\t\022Q\n\010metadata\030\006 \003("
  "\0132\?.spec.proto.runtime.v1.DeleteConfigur"
  "ationRequest.MetadataEntry\032/\n\rMetadataEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\366\001\n\017"
  "GetStateRequest\022\022\n\nstore_name\030\001 \001(\t\022\013\n\003k"
  "ey\030\002 \001(\t\022I\n\013consistency\030\003 \001(\01624.spec.pro"
  "to.runtime.v1.StateOptions.StateConsiste"
  "ncy\022F\n\010metadata\030\004 \003(\01324.spec.proto.runti"
  "me.v1.GetStateRequest.MetadataEntry\032/\n\rM"
  "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
  ":\0028\001\"\311\001\n\023GetBulkStateRequest\022\022\n\nstore_na"
  "me\030\001 \001(\t\022\014\n\004keys\030\002 \003(\t\022\023\n\013parallelism\030\003 "
  "\001(\005\022J\n\010metadata\030\004 \003(\01328.spec.proto.runti"
  "me.v1.GetBulkStateRequest.MetadataEntry\032"
  "/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
  " \001(\t:\0028\001\"K\n\024GetBulkStateResponse\0223\n\005item"
  "s\030\001 \003(\0132$.spec.proto.runtime.v1.BulkStat"
  "eItem\"\276\001\n\rBulkStateItem\022\013\n\003key\030\001 \001(\t\022\014\n\004"
  "data\030\002 \001(\014\022\014\n\004etag\030\003 \001(\t\022\r\n\005error\030\004 \001(\t\022"
  "D\n\010metadata\030\005 \003(\01322.spec.proto.runtime.v"
  "1.BulkStateItem.MetadataEntry\032/\n\rMetadat"
  "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\250"
  "\001\n\020GetStateResponse\022\014\n\004data\030\001 \001(\014\022\014\n\004eta"
  "g\030\002 \001(\t\022G\n\010metadata\030\003 \003(\01325.spec.proto.r"
  "untime.v1.GetStateResponse.MetadataEntry"
  "\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t:\0028\001\"\222\002\n\022DeleteStateRequest\022\022\n\nstor"
  "e_name\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022)\n\004etag\030\003 \001(\0132"
  "\033.spec.proto.runtime.v1.Etag\0224\n\007options\030"
  "\004 \001(\0132#.spec.proto.runtime.v1.StateOptio"
  "ns\022I\n\010metadata\030\005 \003(\01327.spec.proto.runtim"
  "e.v1.DeleteStateRequest.MetadataEntry\032/\n"
  "\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
  "(\t:\0028\001\"^\n\026DeleteBulkStateRequest\022\022\n\nstor"
  "e_name\030\001 \001(\t\0220\n\006states\030\002 \003(\0132 .spec.prot"
  "o.runtime.v1.StateItem\"X\n\020SaveStateReque"
  "st\022\022\n\nstore_name\030\001 \001(\t\0220\n\006states\030\002 \003(\0132 "
  ".spec.proto.runtime.v1.StateItem\"\373\001\n\tSta"
  "teItem\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\022)\n\004et"
  "ag\030\003 \001(\0132\033.spec.proto.runtime.v1.Etag\022@\n"
  "\010metadata\030\004 \003(\0132..spec.proto.runtime.v1."
  "StateItem.MetadataEntry\0224\n\007options\030\005 \001(\013"
  "2#.spec.proto.runtime.v1.StateOptions\032/\n"
  "\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
  "(\t:\0028\001\"\025\n\004Etag\022\r\n\005value\030\001 \001(\t\"\361\002\n\014StateO"
  "ptions\022I\n\013concurrency\030\001 \001(\01624.spec.proto"
  ".runtime.v1.StateOptions.StateConcurrenc"
  "y\022I\n\013consistency\030\002 \001(\01624.spec.proto.runt"
  "ime.v1.StateOptions.StateConsistency\"h\n\020"
  "StateConcurrency\022\033\n\027CONCURRENCY_UNSPECIF"
  "IED\020\000\022\033\n\027CONCURRENCY_FIRST_WRITE\020\001\022\032\n\026CO"
  "NCURRENCY_LAST_WRITE\020\002\"a\n\020StateConsisten"
  "cy\022\033\n\027CONSISTENCY_UNSPECIFIED\020\000\022\030\n\024CONSI"
  "STENCY_EVENTUAL\020\001\022\026\n\022CONSISTENCY_STRONG\020"
  "\002\"g\n\033TransactionalStateOperation\022\025\n\roper"
  "ationType\030\001 \001(\t\0221\n\007request\030\002 \001(\0132 .spec."
  "proto.runtime.v1.StateItem\"\203\002\n\036ExecuteSt"
  "ateTransactionRequest\022\021\n\tstoreName\030\001 \001(\t"
  "\022F\n\noperations\030\002 \003(\01322.spec.proto.runtim"
  "e.v1.TransactionalStateOperation\022U\n\010meta"
  "data\030\003 \003(\0132C.spec.proto.runtime.v1.Execu"
  "teStateTransactionRequest.MetadataEntry\032"
  "/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
  " \001(\t:\0028\001\"\337\001\n\023PublishEventRequest\022\023\n\013pubs"
  "ub_name\030\001 \001(\t\022\r\n\005topic\030\002 \001(\t\022\014\n\004data\030\003 \001"
  "(\014\022\031\n\021data_content_type\030\004 \001(\t\022J\n\010metadat"
  "a\030\005 \003(\01328.spec.proto.runtime.v1.PublishE"
  "ventRequest.MetadataEntry\032/\n\rMetadataEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\303\001\n\024I"
  "nvokeBindingRequest\022\014\n\004name\030\001 \001(\t\022\014\n\004dat"
  "a\030\002 \001(\014\022K\n\010metadata\030\003 \003(\01329.spec.proto.r"
  "untime.v1.InvokeBindingRequest.MetadataE"
  "ntry\022\021\n\toperation\030\004 \001(\t\032/\n\rMetadataEntry"
  "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\244\001\n\025Inv"
  "okeBindingResponse\022\014\n\004data\030\001 \001(\014\022L\n\010meta"
  "data\030\002 \003(\0132:.spec.proto.runtime.v1.Invok"
  "eBindingResponse.MetadataEntry\032/\n\rMetada"
  "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\0012"
  "\344\020\n\007Runtime\022]\n\010SayHello\022&.spec.proto.run"
  "time.v1.SayHelloRequest\032\'.spec.proto.run"
  "time.v1.SayHelloResponse\"\000\022e\n\rInvokeServ"
  "ice\022+.spec.proto.runtime.v1.InvokeServic"
  "eRequest\032%.spec.proto.runtime.v1.InvokeR"
  "esponse\"\000\022u\n\020GetConfiguration\022..spec.pro"
  "to.runtime.v1.GetConfigurationRequest\032/."
  "spec.proto.runtime.v1.GetConfigurationRe"
  "sponse\"\000\022^\n\021SaveConfiguration\022/.spec.pro"
  "to.runtime.v1.SaveConfigurationRequest\032\026"
  ".google.protobuf.Empty\"\000\022b\n\023DeleteConfig"
  "uration\0221.spec.proto.runtime.v1.DeleteCo"
  "nfigurationRequest\032\026.google.protobuf.Emp"
  "ty\"\000\022\213\001\n\026SubscribeConfiguration\0224.spec.p"
  "roto.runtime.v1.SubscribeConfigurationRe"
  "quest\0325.spec.proto.runtime.v1.SubscribeC"
  "onfigurationResponse\"\000(\0010\001\022Z\n\007TryLock\022%."
  "spec.proto.runtime.v1.TryLockRequest\032&.s"
  "pec.proto.runtime.v1.TryLockResponse\"\000\022W"
  "\n\006Unlock\022$.spec.proto.runtime.v1.UnlockR"
  "equest\032%.spec.proto.runtime.v1.UnlockRes"
  "ponse\"\000\022`\n\tGetNextId\022\'.spec.proto.runtim"
  "e.v1.GetNextIdRequest\032(.spec.proto.runti"
  "me.v1.GetNextIdResponse\"\000\022]\n\010GetState\022&."
  "spec.proto.runtime.v1.GetStateRequest\032\'."
  "spec.proto.runtime.v1.GetStateResponse\"\000"
  "\022i\n\014GetBulkState\022*.spec.proto.runtime.v1"
  ".GetBulkStateRequest\032+.spec.proto.runtim"
  "e.v1.GetBulkStateResponse\"\000\022N\n\tSaveState"
  "\022\'.spec.proto.runtime.v1.SaveStateReques"
  "t\032\026.google.protobuf.Empty\"\000\022R\n\013DeleteSta"
  "te\022).spec.proto.runtime.v1.DeleteStateRe"
  "quest\032\026.google.protobuf.Empty\"\000\022Z\n\017Delet"
  "eBulkState\022-.spec.proto.runtime.v1.Delet"
  "eBulkStateRequest\032\026.google.protobuf.Empt"
  "y\"\000\022j\n\027ExecuteStateTransaction\0225.spec.pr"
  "oto.runtime.v1.ExecuteStateTransactionRe"
  "quest\032\026.google.protobuf.Empty\"\000\022T\n\014Publi"
  "shEvent\022*.spec.proto.runtime.v1.PublishE"
  "ventRequest\032\026.google.protobuf.Empty\"\000\022\\\n"
  "\007GetFile\022%.spec.proto.runtime.v1.GetFile"
  "Request\032&.spec.proto.runtime.v1.GetFileR"
  "esponse\"\0000\001\022L\n\007PutFile\022%.spec.proto.runt"
  "ime.v1.PutFileRequest\032\026.google.protobuf."
  "Empty\"\000(\001\022Y\n\010ListFile\022&.spec.proto.runti"
  "me.v1.ListFileRequest\032#.spec.proto.runti"
  "me.v1.ListFileResp\"\000\022J\n\007DelFile\022%.spec.p"
  "roto.runtime.v1.DelFileRequest\032\026.google."
  "protobuf.Empty\"\000\022f\n\013GetFileMeta\022).spec.p"
  "roto.runtime.v1.GetFileMetaRequest\032*.spe"
  "c.proto.runtime.v1.GetFileMetaResponse\"\000"
  "\022l\n\rInvokeBinding\022+.spec.proto.runtime.v"
  "1.InvokeBindingRequest\032,.spec.proto.runt"
  "ime.v1.InvokeBindingResponse\"\000BT\n\025spec.p"
  "roto.runtime.v1B\014RuntimeProtoZ-mosn.io/l"
  "ayotto/spec/proto/runtime/v1;runtimeb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_runtime_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_runtime_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_runtime_2eproto = {
  false, false, 9724, descriptor_table_protodef_runtime_2eproto, "runtime.proto", 
  &descriptor_table_runtime_2eproto_once, descriptor_table_runtime_2eproto_deps, 2, 70,
  schemas, file_default_instances, TableStruct_runtime_2eproto::offsets,
  file_level_metadata_runtime_2eproto, file_level_enum_descriptors_runtime_2eproto, file_level_service_descriptors_runtime_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_runtime_2eproto_getter() {
  return &descriptor_table_runtime_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_runtime_2eproto(&descriptor_table_runtime_2eproto);
namespace spec {
namespace proto {
namespace runtime {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SequencerOptions_AutoIncrement_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_runtime_2eproto);
  return file_level_enum_descriptors_runtime_2eproto[0];
}
bool SequencerOptions_AutoIncrement_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SequencerOptions_AutoIncrement SequencerOptions::WEAK;
constexpr SequencerOptions_AutoIncrement SequencerOptions::STRONG;
constexpr SequencerOptions_AutoIncrement SequencerOptions::AutoIncrement_MIN;
constexpr SequencerOptions_AutoIncrement SequencerOptions::AutoIncrement_MAX;
constexpr int SequencerOptions::AutoIncrement_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UnlockResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_runtime_2eproto);
  return file_level_enum_descriptors_runtime_2eproto[1];
}
bool UnlockResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr UnlockResponse_Status UnlockResponse::SUCCESS;
constexpr UnlockResponse_Status UnlockResponse::LOCK_UNEXIST;
constexpr UnlockResponse_Status UnlockResponse::LOCK_BELONG_TO_OTHERS;
constexpr UnlockResponse_Status UnlockResponse::INTERNAL_ERROR;
constexpr UnlockResponse_Status UnlockResponse::Status_MIN;
constexpr UnlockResponse_Status UnlockResponse::Status_MAX;
constexpr int UnlockResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* HTTPExtension_Verb_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_runtime_2eproto);
  return file_level_enum_descriptors_runtime_2eproto[2];
}
bool HTTPExtension_Verb_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr HTTPExtension_Verb HTTPExtension::NONE;
constexpr HTTPExtension_Verb HTTPExtension::GET;
constexpr HTTPExtension_Verb HTTPExtension::HEAD;
constexpr HTTPExtension_Verb HTTPExtension::POST;
constexpr HTTPExtension_Verb HTTPExtension::PUT;
constexpr HTTPExtension_Verb HTTPExtension::DELETE;
constexpr HTTPExtension_Verb HTTPExtension::CONNECT;
constexpr HTTPExtension_Verb HTTPExtension::OPTIONS;
constexpr HTTPExtension_Verb HTTPExtension::TRACE;
constexpr HTTPExtension_Verb HTTPExtension::Verb_MIN;
constexpr HTTPExtension_Verb HTTPExtension::Verb_MAX;
constexpr int HTTPExtension::Verb_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StateOptions_StateConcurrency_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_runtime_2eproto);
  return file_level_enum_descriptors_runtime_2eproto[3];
}
bool StateOptions_StateConcurrency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr StateOptions_StateConcurrency StateOptions::CONCURRENCY_UNSPECIFIED;
constexpr StateOptions_StateConcurrency StateOptions::CONCURRENCY_FIRST_WRITE;
constexpr StateOptions_StateConcurrency StateOptions::CONCURRENCY_LAST_WRITE;
constexpr StateOptions_StateConcurrency StateOptions::StateConcurrency_MIN;
constexpr StateOptions_StateConcurrency StateOptions::StateConcurrency_MAX;
constexpr int StateOptions::StateConcurrency_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StateOptions_StateConsistency_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_runtime_2eproto);
  return file_level_enum_descriptors_runtime_2eproto[4];
}
bool StateOptions_StateConsistency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr StateOptions_StateConsistency StateOptions::CONSISTENCY_UNSPECIFIED;
constexpr StateOptions_StateConsistency StateOptions::CONSISTENCY_EVENTUAL;
constexpr StateOptions_StateConsistency StateOptions::CONSISTENCY_STRONG;
constexpr StateOptions_StateConsistency StateOptions::StateConsistency_MIN;
constexpr StateOptions_StateConsistency StateOptions::StateConsistency_MAX;
constexpr int StateOptions::StateConsistency_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class GetFileMetaRequest::_Internal {
 public:
  static const ::spec::proto::runtime::v1::FileRequest& request(const GetFileMetaRequest* msg);
};

const ::spec::proto::runtime::v1::FileRequest&
GetFileMetaRequest::_Internal::request(const GetFileMetaRequest* msg) {
  return *msg->request_;
}
GetFileMetaRequest::GetFileMetaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetFileMetaRequest)
}
GetFileMetaRequest::GetFileMetaRequest(const GetFileMetaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_request()) {
    request_ = new ::spec::proto::runtime::v1::FileRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetFileMetaRequest)
}

inline void GetFileMetaRequest::SharedCtor() {
request_ = nullptr;
}

GetFileMetaRequest::~GetFileMetaRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetFileMetaRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetFileMetaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete request_;
}

void GetFileMetaRequest::ArenaDtor(void* object) {
  GetFileMetaRequest* _this = reinterpret_cast< GetFileMetaRequest* >(object);
  (void)_this;
}
void GetFileMetaRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetFileMetaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFileMetaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetFileMetaRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFileMetaRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .spec.proto.runtime.v1.FileRequest request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFileMetaRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetFileMetaRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.FileRequest request = 1;
  if (this->_internal_has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetFileMetaRequest)
  return target;
}

size_t GetFileMetaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetFileMetaRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.FileRequest request = 1;
  if (this->_internal_has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFileMetaRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFileMetaRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFileMetaRequest::GetClassData() const { return &_class_data_; }

void GetFileMetaRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFileMetaRequest *>(to)->MergeFrom(
      static_cast<const GetFileMetaRequest &>(from));
}


void GetFileMetaRequest::MergeFrom(const GetFileMetaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetFileMetaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_request()) {
    _internal_mutable_request()->::spec::proto::runtime::v1::FileRequest::MergeFrom(from._internal_request());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFileMetaRequest::CopyFrom(const GetFileMetaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetFileMetaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileMetaRequest::IsInitialized() const {
  return true;
}

void GetFileMetaRequest::InternalSwap(GetFileMetaRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFileMetaRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[0]);
}

// ===================================================================

class GetFileMetaResponse::_Internal {
 public:
  static const ::spec::proto::runtime::v1::FileMeta& response(const GetFileMetaResponse* msg);
};

const ::spec::proto::runtime::v1::FileMeta&
GetFileMetaResponse::_Internal::response(const GetFileMetaResponse* msg) {
  return *msg->response_;
}
GetFileMetaResponse::GetFileMetaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetFileMetaResponse)
}
GetFileMetaResponse::GetFileMetaResponse(const GetFileMetaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  last_modified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    last_modified_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_modified().empty()) {
    last_modified_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_last_modified(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    response_ = new ::spec::proto::runtime::v1::FileMeta(*from.response_);
  } else {
    response_ = nullptr;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetFileMetaResponse)
}

inline void GetFileMetaResponse::SharedCtor() {
last_modified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  last_modified_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&response_)) + sizeof(size_));
}

GetFileMetaResponse::~GetFileMetaResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetFileMetaResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetFileMetaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  last_modified_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void GetFileMetaResponse::ArenaDtor(void* object) {
  GetFileMetaResponse* _this = reinterpret_cast< GetFileMetaResponse* >(object);
  (void)_this;
}
void GetFileMetaResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetFileMetaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFileMetaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetFileMetaResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  last_modified_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  size_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFileMetaResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string last_modified = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_last_modified();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetFileMetaResponse.last_modified"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.FileMeta response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFileMetaResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetFileMetaResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 size = 1;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_size(), target);
  }

  // string last_modified = 2;
  if (!this->_internal_last_modified().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_modified().data(), static_cast<int>(this->_internal_last_modified().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetFileMetaResponse.last_modified");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_last_modified(), target);
  }

  // .spec.proto.runtime.v1.FileMeta response = 3;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetFileMetaResponse)
  return target;
}

size_t GetFileMetaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetFileMetaResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string last_modified = 2;
  if (!this->_internal_last_modified().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_modified());
  }

  // .spec.proto.runtime.v1.FileMeta response = 3;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int64 size = 1;
  if (this->_internal_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFileMetaResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFileMetaResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFileMetaResponse::GetClassData() const { return &_class_data_; }

void GetFileMetaResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFileMetaResponse *>(to)->MergeFrom(
      static_cast<const GetFileMetaResponse &>(from));
}


void GetFileMetaResponse::MergeFrom(const GetFileMetaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetFileMetaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_last_modified().empty()) {
    _internal_set_last_modified(from._internal_last_modified());
  }
  if (from._internal_has_response()) {
    _internal_mutable_response()->::spec::proto::runtime::v1::FileMeta::MergeFrom(from._internal_response());
  }
  if (from._internal_size() != 0) {
    _internal_set_size(from._internal_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFileMetaResponse::CopyFrom(const GetFileMetaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetFileMetaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileMetaResponse::IsInitialized() const {
  return true;
}

void GetFileMetaResponse::InternalSwap(GetFileMetaResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &last_modified_, lhs_arena,
      &other->last_modified_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetFileMetaResponse, size_)
      + sizeof(GetFileMetaResponse::size_)
      - PROTOBUF_FIELD_OFFSET(GetFileMetaResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFileMetaResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[1]);
}

// ===================================================================

class FileMetaValue::_Internal {
 public:
};

FileMetaValue::FileMetaValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  value_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.FileMetaValue)
}
FileMetaValue::FileMetaValue(const FileMetaValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      value_(from.value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.FileMetaValue)
}

inline void FileMetaValue::SharedCtor() {
}

FileMetaValue::~FileMetaValue() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.FileMetaValue)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileMetaValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FileMetaValue::ArenaDtor(void* object) {
  FileMetaValue* _this = reinterpret_cast< FileMetaValue* >(object);
  (void)_this;
}
void FileMetaValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileMetaValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileMetaValue::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.FileMetaValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileMetaValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.FileMetaValue.value"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileMetaValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.FileMetaValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.FileMetaValue.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.FileMetaValue)
  return target;
}

size_t FileMetaValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.FileMetaValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(value_.size());
  for (int i = 0, n = value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileMetaValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileMetaValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileMetaValue::GetClassData() const { return &_class_data_; }

void FileMetaValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileMetaValue *>(to)->MergeFrom(
      static_cast<const FileMetaValue &>(from));
}


void FileMetaValue::MergeFrom(const FileMetaValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.FileMetaValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileMetaValue::CopyFrom(const FileMetaValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.FileMetaValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileMetaValue::IsInitialized() const {
  return true;
}

void FileMetaValue::InternalSwap(FileMetaValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileMetaValue::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[2]);
}

// ===================================================================

FileMeta_MetadataEntry_DoNotUse::FileMeta_MetadataEntry_DoNotUse() {}
FileMeta_MetadataEntry_DoNotUse::FileMeta_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FileMeta_MetadataEntry_DoNotUse::MergeFrom(const FileMeta_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FileMeta_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[3]);
}

// ===================================================================

class FileMeta::_Internal {
 public:
};

FileMeta::FileMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.FileMeta)
}
FileMeta::FileMeta(const FileMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.FileMeta)
}

inline void FileMeta::SharedCtor() {
}

FileMeta::~FileMeta() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.FileMeta)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileMeta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FileMeta::ArenaDtor(void* object) {
  FileMeta* _this = reinterpret_cast< FileMeta* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void FileMeta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &FileMeta::ArenaDtor);
  }
}
void FileMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.FileMeta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .spec.proto.runtime.v1.FileMetaValue> metadata = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileMeta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.FileMeta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .spec.proto.runtime.v1.FileMetaValue> metadata = 1;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::spec::proto::runtime::v1::FileMetaValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.FileMeta.MetadataEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::spec::proto::runtime::v1::FileMetaValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::spec::proto::runtime::v1::FileMetaValue >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = FileMeta_MetadataEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::spec::proto::runtime::v1::FileMetaValue >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = FileMeta_MetadataEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.FileMeta)
  return target;
}

size_t FileMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.FileMeta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .spec.proto.runtime.v1.FileMetaValue> metadata = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::spec::proto::runtime::v1::FileMetaValue >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += FileMeta_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileMeta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileMeta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileMeta::GetClassData() const { return &_class_data_; }

void FileMeta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileMeta *>(to)->MergeFrom(
      static_cast<const FileMeta &>(from));
}


void FileMeta::MergeFrom(const FileMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.FileMeta)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileMeta::CopyFrom(const FileMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.FileMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileMeta::IsInitialized() const {
  return true;
}

void FileMeta::InternalSwap(FileMeta* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileMeta::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[4]);
}

// ===================================================================

GetFileRequest_MetadataEntry_DoNotUse::GetFileRequest_MetadataEntry_DoNotUse() {}
GetFileRequest_MetadataEntry_DoNotUse::GetFileRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetFileRequest_MetadataEntry_DoNotUse::MergeFrom(const GetFileRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetFileRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[5]);
}

// ===================================================================

class GetFileRequest::_Internal {
 public:
};

GetFileRequest::GetFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetFileRequest)
}
GetFileRequest::GetFileRequest(const GetFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetFileRequest)
}

inline void GetFileRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFileRequest::~GetFileRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetFileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetFileRequest::ArenaDtor(void* object) {
  GetFileRequest* _this = reinterpret_cast< GetFileRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void GetFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &GetFileRequest::ArenaDtor);
  }
}
void GetFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetFileRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetFileRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetFileRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetFileRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetFileRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetFileRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetFileRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetFileRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetFileRequest)
  return target;
}

size_t GetFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetFileRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFileRequest::GetClassData() const { return &_class_data_; }

void GetFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFileRequest *>(to)->MergeFrom(
      static_cast<const GetFileRequest &>(from));
}


void GetFileRequest::MergeFrom(const GetFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFileRequest::CopyFrom(const GetFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileRequest::IsInitialized() const {
  return true;
}

void GetFileRequest::InternalSwap(GetFileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[6]);
}

// ===================================================================

class GetFileResponse::_Internal {
 public:
};

GetFileResponse::GetFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetFileResponse)
}
GetFileResponse::GetFileResponse(const GetFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetFileResponse)
}

inline void GetFileResponse::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFileResponse::~GetFileResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetFileResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetFileResponse::ArenaDtor(void* object) {
  GetFileResponse* _this = reinterpret_cast< GetFileResponse* >(object);
  (void)_this;
}
void GetFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetFileResponse)
  return target;
}

size_t GetFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFileResponse::GetClassData() const { return &_class_data_; }

void GetFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFileResponse *>(to)->MergeFrom(
      static_cast<const GetFileResponse &>(from));
}


void GetFileResponse::MergeFrom(const GetFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFileResponse::CopyFrom(const GetFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileResponse::IsInitialized() const {
  return true;
}

void GetFileResponse::InternalSwap(GetFileResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFileResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[7]);
}

// ===================================================================

PutFileRequest_MetadataEntry_DoNotUse::PutFileRequest_MetadataEntry_DoNotUse() {}
PutFileRequest_MetadataEntry_DoNotUse::PutFileRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PutFileRequest_MetadataEntry_DoNotUse::MergeFrom(const PutFileRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PutFileRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[8]);
}

// ===================================================================

class PutFileRequest::_Internal {
 public:
};

PutFileRequest::PutFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.PutFileRequest)
}
PutFileRequest::PutFileRequest(const PutFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.PutFileRequest)
}

inline void PutFileRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PutFileRequest::~PutFileRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.PutFileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PutFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PutFileRequest::ArenaDtor(void* object) {
  PutFileRequest* _this = reinterpret_cast< PutFileRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void PutFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &PutFileRequest::ArenaDtor);
  }
}
void PutFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PutFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.PutFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty();
  name_.ClearToEmpty();
  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.PutFileRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.PutFileRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.PutFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.PutFileRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.PutFileRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.PutFileRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.PutFileRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PutFileRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = PutFileRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.PutFileRequest)
  return target;
}

size_t PutFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.PutFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += PutFileRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PutFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutFileRequest::GetClassData() const { return &_class_data_; }

void PutFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PutFileRequest *>(to)->MergeFrom(
      static_cast<const PutFileRequest &>(from));
}


void PutFileRequest::MergeFrom(const PutFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.PutFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutFileRequest::CopyFrom(const PutFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.PutFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutFileRequest::IsInitialized() const {
  return true;
}

void PutFileRequest::InternalSwap(PutFileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PutFileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[9]);
}

// ===================================================================

FileRequest_MetadataEntry_DoNotUse::FileRequest_MetadataEntry_DoNotUse() {}
FileRequest_MetadataEntry_DoNotUse::FileRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FileRequest_MetadataEntry_DoNotUse::MergeFrom(const FileRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FileRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[10]);
}

// ===================================================================

class FileRequest::_Internal {
 public:
};

FileRequest::FileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.FileRequest)
}
FileRequest::FileRequest(const FileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.FileRequest)
}

inline void FileRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FileRequest::~FileRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.FileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileRequest::ArenaDtor(void* object) {
  FileRequest* _this = reinterpret_cast< FileRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void FileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &FileRequest::ArenaDtor);
  }
}
void FileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.FileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.FileRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.FileRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.FileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.FileRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.FileRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.FileRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.FileRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = FileRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = FileRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.FileRequest)
  return target;
}

size_t FileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.FileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += FileRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileRequest::GetClassData() const { return &_class_data_; }

void FileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileRequest *>(to)->MergeFrom(
      static_cast<const FileRequest &>(from));
}


void FileRequest::MergeFrom(const FileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.FileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileRequest::CopyFrom(const FileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.FileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileRequest::IsInitialized() const {
  return true;
}

void FileRequest::InternalSwap(FileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[11]);
}

// ===================================================================

class ListFileRequest::_Internal {
 public:
  static const ::spec::proto::runtime::v1::FileRequest& request(const ListFileRequest* msg);
};

const ::spec::proto::runtime::v1::FileRequest&
ListFileRequest::_Internal::request(const ListFileRequest* msg) {
  return *msg->request_;
}
ListFileRequest::ListFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.ListFileRequest)
}
ListFileRequest::ListFileRequest(const ListFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  marker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    marker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_marker().empty()) {
    marker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_marker(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_request()) {
    request_ = new ::spec::proto::runtime::v1::FileRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.ListFileRequest)
}

inline void ListFileRequest::SharedCtor() {
marker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  marker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&request_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&request_)) + sizeof(page_size_));
}

ListFileRequest::~ListFileRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.ListFileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  marker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void ListFileRequest::ArenaDtor(void* object) {
  ListFileRequest* _this = reinterpret_cast< ListFileRequest* >(object);
  (void)_this;
}
void ListFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.ListFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  marker_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .spec.proto.runtime.v1.FileRequest request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string marker = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_marker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.ListFileRequest.marker"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.ListFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.FileRequest request = 1;
  if (this->_internal_has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::request(this), target, stream);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string marker = 3;
  if (!this->_internal_marker().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_marker().data(), static_cast<int>(this->_internal_marker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.ListFileRequest.marker");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_marker(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.ListFileRequest)
  return target;
}

size_t ListFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.ListFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string marker = 3;
  if (!this->_internal_marker().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_marker());
  }

  // .spec.proto.runtime.v1.FileRequest request = 1;
  if (this->_internal_has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFileRequest::GetClassData() const { return &_class_data_; }

void ListFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListFileRequest *>(to)->MergeFrom(
      static_cast<const ListFileRequest &>(from));
}


void ListFileRequest::MergeFrom(const ListFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.ListFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_marker().empty()) {
    _internal_set_marker(from._internal_marker());
  }
  if (from._internal_has_request()) {
    _internal_mutable_request()->::spec::proto::runtime::v1::FileRequest::MergeFrom(from._internal_request());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListFileRequest::CopyFrom(const ListFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.ListFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFileRequest::IsInitialized() const {
  return true;
}

void ListFileRequest::InternalSwap(ListFileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &marker_, lhs_arena,
      &other->marker_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListFileRequest, page_size_)
      + sizeof(ListFileRequest::page_size_)
      - PROTOBUF_FIELD_OFFSET(ListFileRequest, request_)>(
          reinterpret_cast<char*>(&request_),
          reinterpret_cast<char*>(&other->request_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListFileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[12]);
}

// ===================================================================

FileInfo_MetadataEntry_DoNotUse::FileInfo_MetadataEntry_DoNotUse() {}
FileInfo_MetadataEntry_DoNotUse::FileInfo_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FileInfo_MetadataEntry_DoNotUse::MergeFrom(const FileInfo_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FileInfo_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[13]);
}

// ===================================================================

class FileInfo::_Internal {
 public:
};

FileInfo::FileInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.FileInfo)
}
FileInfo::FileInfo(const FileInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_name().empty()) {
    file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_name(), 
      GetArenaForAllocation());
  }
  last_modified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    last_modified_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_modified().empty()) {
    last_modified_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_last_modified(), 
      GetArenaForAllocation());
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.FileInfo)
}

inline void FileInfo::SharedCtor() {
file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
last_modified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  last_modified_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
size_ = int64_t{0};
}

FileInfo::~FileInfo() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.FileInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_modified_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileInfo::ArenaDtor(void* object) {
  FileInfo* _this = reinterpret_cast< FileInfo* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void FileInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &FileInfo::ArenaDtor);
  }
}
void FileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.FileInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  file_name_.ClearToEmpty();
  last_modified_.ClearToEmpty();
  size_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.FileInfo.file_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string last_modified = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_last_modified();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.FileInfo.last_modified"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.FileInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (!this->_internal_file_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.FileInfo.file_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_name(), target);
  }

  // int64 size = 2;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_size(), target);
  }

  // string last_modified = 3;
  if (!this->_internal_last_modified().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_modified().data(), static_cast<int>(this->_internal_last_modified().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.FileInfo.last_modified");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_last_modified(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.FileInfo.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.FileInfo.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = FileInfo_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = FileInfo_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.FileInfo)
  return target;
}

size_t FileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.FileInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += FileInfo_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string file_name = 1;
  if (!this->_internal_file_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_name());
  }

  // string last_modified = 3;
  if (!this->_internal_last_modified().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_modified());
  }

  // int64 size = 2;
  if (this->_internal_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileInfo::GetClassData() const { return &_class_data_; }

void FileInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileInfo *>(to)->MergeFrom(
      static_cast<const FileInfo &>(from));
}


void FileInfo::MergeFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_file_name().empty()) {
    _internal_set_file_name(from._internal_file_name());
  }
  if (!from._internal_last_modified().empty()) {
    _internal_set_last_modified(from._internal_last_modified());
  }
  if (from._internal_size() != 0) {
    _internal_set_size(from._internal_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileInfo::CopyFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfo::IsInitialized() const {
  return true;
}

void FileInfo::InternalSwap(FileInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &file_name_, lhs_arena,
      &other->file_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &last_modified_, lhs_arena,
      &other->last_modified_, rhs_arena
  );
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[14]);
}

// ===================================================================

class ListFileResp::_Internal {
 public:
};

ListFileResp::ListFileResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  files_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.ListFileResp)
}
ListFileResp::ListFileResp(const ListFileResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      files_(from.files_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  marker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    marker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_marker().empty()) {
    marker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_marker(), 
      GetArenaForAllocation());
  }
  is_truncated_ = from.is_truncated_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.ListFileResp)
}

inline void ListFileResp::SharedCtor() {
marker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  marker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
is_truncated_ = false;
}

ListFileResp::~ListFileResp() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.ListFileResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListFileResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  marker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListFileResp::ArenaDtor(void* object) {
  ListFileResp* _this = reinterpret_cast< ListFileResp* >(object);
  (void)_this;
}
void ListFileResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListFileResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListFileResp::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.ListFileResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  marker_.ClearToEmpty();
  is_truncated_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListFileResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .spec.proto.runtime.v1.FileInfo files = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string marker = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_marker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.ListFileResp.marker"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_truncated = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          is_truncated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListFileResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.ListFileResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.FileInfo files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_files_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_files(i), target, stream);
  }

  // string marker = 2;
  if (!this->_internal_marker().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_marker().data(), static_cast<int>(this->_internal_marker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.ListFileResp.marker");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_marker(), target);
  }

  // bool is_truncated = 3;
  if (this->_internal_is_truncated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_truncated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.ListFileResp)
  return target;
}

size_t ListFileResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.ListFileResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.FileInfo files = 1;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string marker = 2;
  if (!this->_internal_marker().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_marker());
  }

  // bool is_truncated = 3;
  if (this->_internal_is_truncated() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFileResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListFileResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFileResp::GetClassData() const { return &_class_data_; }

void ListFileResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListFileResp *>(to)->MergeFrom(
      static_cast<const ListFileResp &>(from));
}


void ListFileResp::MergeFrom(const ListFileResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.ListFileResp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (!from._internal_marker().empty()) {
    _internal_set_marker(from._internal_marker());
  }
  if (from._internal_is_truncated() != 0) {
    _internal_set_is_truncated(from._internal_is_truncated());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListFileResp::CopyFrom(const ListFileResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.ListFileResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFileResp::IsInitialized() const {
  return true;
}

void ListFileResp::InternalSwap(ListFileResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  files_.InternalSwap(&other->files_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &marker_, lhs_arena,
      &other->marker_, rhs_arena
  );
  swap(is_truncated_, other->is_truncated_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListFileResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[15]);
}

// ===================================================================

class DelFileRequest::_Internal {
 public:
  static const ::spec::proto::runtime::v1::FileRequest& request(const DelFileRequest* msg);
};

const ::spec::proto::runtime::v1::FileRequest&
DelFileRequest::_Internal::request(const DelFileRequest* msg) {
  return *msg->request_;
}
DelFileRequest::DelFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.DelFileRequest)
}
DelFileRequest::DelFileRequest(const DelFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_request()) {
    request_ = new ::spec::proto::runtime::v1::FileRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.DelFileRequest)
}

inline void DelFileRequest::SharedCtor() {
request_ = nullptr;
}

DelFileRequest::~DelFileRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.DelFileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DelFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete request_;
}

void DelFileRequest::ArenaDtor(void* object) {
  DelFileRequest* _this = reinterpret_cast< DelFileRequest* >(object);
  (void)_this;
}
void DelFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DelFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DelFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.DelFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .spec.proto.runtime.v1.FileRequest request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DelFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.DelFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.FileRequest request = 1;
  if (this->_internal_has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.DelFileRequest)
  return target;
}

size_t DelFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.DelFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.FileRequest request = 1;
  if (this->_internal_has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DelFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelFileRequest::GetClassData() const { return &_class_data_; }

void DelFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DelFileRequest *>(to)->MergeFrom(
      static_cast<const DelFileRequest &>(from));
}


void DelFileRequest::MergeFrom(const DelFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.DelFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_request()) {
    _internal_mutable_request()->::spec::proto::runtime::v1::FileRequest::MergeFrom(from._internal_request());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DelFileRequest::CopyFrom(const DelFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.DelFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFileRequest::IsInitialized() const {
  return true;
}

void DelFileRequest::InternalSwap(DelFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelFileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[16]);
}

// ===================================================================

GetNextIdRequest_MetadataEntry_DoNotUse::GetNextIdRequest_MetadataEntry_DoNotUse() {}
GetNextIdRequest_MetadataEntry_DoNotUse::GetNextIdRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetNextIdRequest_MetadataEntry_DoNotUse::MergeFrom(const GetNextIdRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetNextIdRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[17]);
}

// ===================================================================

class GetNextIdRequest::_Internal {
 public:
  static const ::spec::proto::runtime::v1::SequencerOptions& options(const GetNextIdRequest* msg);
};

const ::spec::proto::runtime::v1::SequencerOptions&
GetNextIdRequest::_Internal::options(const GetNextIdRequest* msg) {
  return *msg->options_;
}
GetNextIdRequest::GetNextIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetNextIdRequest)
}
GetNextIdRequest::GetNextIdRequest(const GetNextIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    options_ = new ::spec::proto::runtime::v1::SequencerOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetNextIdRequest)
}

inline void GetNextIdRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
options_ = nullptr;
}

GetNextIdRequest::~GetNextIdRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetNextIdRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetNextIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete options_;
}

void GetNextIdRequest::ArenaDtor(void* object) {
  GetNextIdRequest* _this = reinterpret_cast< GetNextIdRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void GetNextIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &GetNextIdRequest::ArenaDtor);
  }
}
void GetNextIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetNextIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetNextIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty();
  key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNextIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetNextIdRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetNextIdRequest.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.SequencerOptions options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNextIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetNextIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetNextIdRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetNextIdRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // .spec.proto.runtime.v1.SequencerOptions options = 3;
  if (this->_internal_has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::options(this), target, stream);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetNextIdRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetNextIdRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetNextIdRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetNextIdRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetNextIdRequest)
  return target;
}

size_t GetNextIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetNextIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetNextIdRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .spec.proto.runtime.v1.SequencerOptions options = 3;
  if (this->_internal_has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNextIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetNextIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNextIdRequest::GetClassData() const { return &_class_data_; }

void GetNextIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetNextIdRequest *>(to)->MergeFrom(
      static_cast<const GetNextIdRequest &>(from));
}


void GetNextIdRequest::MergeFrom(const GetNextIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetNextIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_has_options()) {
    _internal_mutable_options()->::spec::proto::runtime::v1::SequencerOptions::MergeFrom(from._internal_options());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNextIdRequest::CopyFrom(const GetNextIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetNextIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextIdRequest::IsInitialized() const {
  return true;
}

void GetNextIdRequest::InternalSwap(GetNextIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNextIdRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[18]);
}

// ===================================================================

class SequencerOptions::_Internal {
 public:
};

SequencerOptions::SequencerOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.SequencerOptions)
}
SequencerOptions::SequencerOptions(const SequencerOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  increment_ = from.increment_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.SequencerOptions)
}

inline void SequencerOptions::SharedCtor() {
increment_ = 0;
}

SequencerOptions::~SequencerOptions() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.SequencerOptions)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SequencerOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SequencerOptions::ArenaDtor(void* object) {
  SequencerOptions* _this = reinterpret_cast< SequencerOptions* >(object);
  (void)_this;
}
void SequencerOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SequencerOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SequencerOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.SequencerOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  increment_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SequencerOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .spec.proto.runtime.v1.SequencerOptions.AutoIncrement increment = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_increment(static_cast<::spec::proto::runtime::v1::SequencerOptions_AutoIncrement>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SequencerOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.SequencerOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.SequencerOptions.AutoIncrement increment = 1;
  if (this->_internal_increment() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_increment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.SequencerOptions)
  return target;
}

size_t SequencerOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.SequencerOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.SequencerOptions.AutoIncrement increment = 1;
  if (this->_internal_increment() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_increment());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SequencerOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SequencerOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SequencerOptions::GetClassData() const { return &_class_data_; }

void SequencerOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SequencerOptions *>(to)->MergeFrom(
      static_cast<const SequencerOptions &>(from));
}


void SequencerOptions::MergeFrom(const SequencerOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.SequencerOptions)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_increment() != 0) {
    _internal_set_increment(from._internal_increment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SequencerOptions::CopyFrom(const SequencerOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.SequencerOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SequencerOptions::IsInitialized() const {
  return true;
}

void SequencerOptions::InternalSwap(SequencerOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(increment_, other->increment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SequencerOptions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[19]);
}

// ===================================================================

class GetNextIdResponse::_Internal {
 public:
};

GetNextIdResponse::GetNextIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetNextIdResponse)
}
GetNextIdResponse::GetNextIdResponse(const GetNextIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_id_ = from.next_id_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetNextIdResponse)
}

inline void GetNextIdResponse::SharedCtor() {
next_id_ = int64_t{0};
}

GetNextIdResponse::~GetNextIdResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetNextIdResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetNextIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetNextIdResponse::ArenaDtor(void* object) {
  GetNextIdResponse* _this = reinterpret_cast< GetNextIdResponse* >(object);
  (void)_this;
}
void GetNextIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetNextIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetNextIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetNextIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  next_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNextIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 next_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          next_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNextIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetNextIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 next_id = 1;
  if (this->_internal_next_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_next_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetNextIdResponse)
  return target;
}

size_t GetNextIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetNextIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 next_id = 1;
  if (this->_internal_next_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_next_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNextIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetNextIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNextIdResponse::GetClassData() const { return &_class_data_; }

void GetNextIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetNextIdResponse *>(to)->MergeFrom(
      static_cast<const GetNextIdResponse &>(from));
}


void GetNextIdResponse::MergeFrom(const GetNextIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetNextIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_next_id() != 0) {
    _internal_set_next_id(from._internal_next_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNextIdResponse::CopyFrom(const GetNextIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetNextIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextIdResponse::IsInitialized() const {
  return true;
}

void GetNextIdResponse::InternalSwap(GetNextIdResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(next_id_, other->next_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNextIdResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[20]);
}

// ===================================================================

class TryLockRequest::_Internal {
 public:
};

TryLockRequest::TryLockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.TryLockRequest)
}
TryLockRequest::TryLockRequest(const TryLockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource_id(), 
      GetArenaForAllocation());
  }
  lock_owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    lock_owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lock_owner().empty()) {
    lock_owner_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lock_owner(), 
      GetArenaForAllocation());
  }
  expire_ = from.expire_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.TryLockRequest)
}

inline void TryLockRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
lock_owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  lock_owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
expire_ = 0;
}

TryLockRequest::~TryLockRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.TryLockRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TryLockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lock_owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TryLockRequest::ArenaDtor(void* object) {
  TryLockRequest* _this = reinterpret_cast< TryLockRequest* >(object);
  (void)_this;
}
void TryLockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TryLockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TryLockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.TryLockRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  store_name_.ClearToEmpty();
  resource_id_.ClearToEmpty();
  lock_owner_.ClearToEmpty();
  expire_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TryLockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.TryLockRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string resource_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.TryLockRequest.resource_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lock_owner = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_lock_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.TryLockRequest.lock_owner"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 expire = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          expire_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TryLockRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.TryLockRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.TryLockRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string resource_id = 2;
  if (!this->_internal_resource_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.TryLockRequest.resource_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_id(), target);
  }

  // string lock_owner = 3;
  if (!this->_internal_lock_owner().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lock_owner().data(), static_cast<int>(this->_internal_lock_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.TryLockRequest.lock_owner");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_lock_owner(), target);
  }

  // int32 expire = 4;
  if (this->_internal_expire() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_expire(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.TryLockRequest)
  return target;
}

size_t TryLockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.TryLockRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string resource_id = 2;
  if (!this->_internal_resource_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  // string lock_owner = 3;
  if (!this->_internal_lock_owner().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lock_owner());
  }

  // int32 expire = 4;
  if (this->_internal_expire() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_expire());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TryLockRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TryLockRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TryLockRequest::GetClassData() const { return &_class_data_; }

void TryLockRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TryLockRequest *>(to)->MergeFrom(
      static_cast<const TryLockRequest &>(from));
}


void TryLockRequest::MergeFrom(const TryLockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.TryLockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_resource_id().empty()) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (!from._internal_lock_owner().empty()) {
    _internal_set_lock_owner(from._internal_lock_owner());
  }
  if (from._internal_expire() != 0) {
    _internal_set_expire(from._internal_expire());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TryLockRequest::CopyFrom(const TryLockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.TryLockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TryLockRequest::IsInitialized() const {
  return true;
}

void TryLockRequest::InternalSwap(TryLockRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_id_, lhs_arena,
      &other->resource_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lock_owner_, lhs_arena,
      &other->lock_owner_, rhs_arena
  );
  swap(expire_, other->expire_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TryLockRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[21]);
}

// ===================================================================

class TryLockResponse::_Internal {
 public:
};

TryLockResponse::TryLockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.TryLockResponse)
}
TryLockResponse::TryLockResponse(const TryLockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.TryLockResponse)
}

inline void TryLockResponse::SharedCtor() {
success_ = false;
}

TryLockResponse::~TryLockResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.TryLockResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TryLockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TryLockResponse::ArenaDtor(void* object) {
  TryLockResponse* _this = reinterpret_cast< TryLockResponse* >(object);
  (void)_this;
}
void TryLockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TryLockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TryLockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.TryLockResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TryLockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TryLockResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.TryLockResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.TryLockResponse)
  return target;
}

size_t TryLockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.TryLockResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TryLockResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TryLockResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TryLockResponse::GetClassData() const { return &_class_data_; }

void TryLockResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TryLockResponse *>(to)->MergeFrom(
      static_cast<const TryLockResponse &>(from));
}


void TryLockResponse::MergeFrom(const TryLockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.TryLockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TryLockResponse::CopyFrom(const TryLockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.TryLockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TryLockResponse::IsInitialized() const {
  return true;
}

void TryLockResponse::InternalSwap(TryLockResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TryLockResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[22]);
}

// ===================================================================

class UnlockRequest::_Internal {
 public:
};

UnlockRequest::UnlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.UnlockRequest)
}
UnlockRequest::UnlockRequest(const UnlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource_id(), 
      GetArenaForAllocation());
  }
  lock_owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    lock_owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lock_owner().empty()) {
    lock_owner_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lock_owner(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.UnlockRequest)
}

inline void UnlockRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
lock_owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  lock_owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnlockRequest::~UnlockRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.UnlockRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UnlockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lock_owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnlockRequest::ArenaDtor(void* object) {
  UnlockRequest* _this = reinterpret_cast< UnlockRequest* >(object);
  (void)_this;
}
void UnlockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.UnlockRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  store_name_.ClearToEmpty();
  resource_id_.ClearToEmpty();
  lock_owner_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.UnlockRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string resource_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.UnlockRequest.resource_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lock_owner = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_lock_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.UnlockRequest.lock_owner"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.UnlockRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.UnlockRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string resource_id = 2;
  if (!this->_internal_resource_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.UnlockRequest.resource_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_id(), target);
  }

  // string lock_owner = 3;
  if (!this->_internal_lock_owner().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lock_owner().data(), static_cast<int>(this->_internal_lock_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.UnlockRequest.lock_owner");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_lock_owner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.UnlockRequest)
  return target;
}

size_t UnlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.UnlockRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string resource_id = 2;
  if (!this->_internal_resource_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  // string lock_owner = 3;
  if (!this->_internal_lock_owner().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lock_owner());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnlockRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockRequest::GetClassData() const { return &_class_data_; }

void UnlockRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnlockRequest *>(to)->MergeFrom(
      static_cast<const UnlockRequest &>(from));
}


void UnlockRequest::MergeFrom(const UnlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.UnlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_resource_id().empty()) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (!from._internal_lock_owner().empty()) {
    _internal_set_lock_owner(from._internal_lock_owner());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockRequest::CopyFrom(const UnlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.UnlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockRequest::IsInitialized() const {
  return true;
}

void UnlockRequest::InternalSwap(UnlockRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_id_, lhs_arena,
      &other->resource_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lock_owner_, lhs_arena,
      &other->lock_owner_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[23]);
}

// ===================================================================

class UnlockResponse::_Internal {
 public:
};

UnlockResponse::UnlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.UnlockResponse)
}
UnlockResponse::UnlockResponse(const UnlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.UnlockResponse)
}

inline void UnlockResponse::SharedCtor() {
status_ = 0;
}

UnlockResponse::~UnlockResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.UnlockResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UnlockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnlockResponse::ArenaDtor(void* object) {
  UnlockResponse* _this = reinterpret_cast< UnlockResponse* >(object);
  (void)_this;
}
void UnlockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.UnlockResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .spec.proto.runtime.v1.UnlockResponse.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::spec::proto::runtime::v1::UnlockResponse_Status>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.UnlockResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.UnlockResponse.Status status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.UnlockResponse)
  return target;
}

size_t UnlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.UnlockResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.UnlockResponse.Status status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnlockResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockResponse::GetClassData() const { return &_class_data_; }

void UnlockResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnlockResponse *>(to)->MergeFrom(
      static_cast<const UnlockResponse &>(from));
}


void UnlockResponse::MergeFrom(const UnlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.UnlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockResponse::CopyFrom(const UnlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.UnlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockResponse::IsInitialized() const {
  return true;
}

void UnlockResponse::InternalSwap(UnlockResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[24]);
}

// ===================================================================

class SayHelloRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& data(const SayHelloRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
SayHelloRequest::_Internal::data(const SayHelloRequest* msg) {
  return *msg->data_;
}
void SayHelloRequest::clear_data() {
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
SayHelloRequest::SayHelloRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.SayHelloRequest)
}
SayHelloRequest::SayHelloRequest(const SayHelloRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    service_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    service_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_service_name(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_data()) {
    data_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.SayHelloRequest)
}

inline void SayHelloRequest::SharedCtor() {
service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  service_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_ = nullptr;
}

SayHelloRequest::~SayHelloRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.SayHelloRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SayHelloRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void SayHelloRequest::ArenaDtor(void* object) {
  SayHelloRequest* _this = reinterpret_cast< SayHelloRequest* >(object);
  (void)_this;
}
void SayHelloRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SayHelloRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SayHelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.SayHelloRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SayHelloRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SayHelloRequest.service_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SayHelloRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SayHelloRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.SayHelloRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SayHelloRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SayHelloRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->_internal_has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.SayHelloRequest)
  return target;
}

size_t SayHelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.SayHelloRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Any data = 3;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SayHelloRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SayHelloRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SayHelloRequest::GetClassData() const { return &_class_data_; }

void SayHelloRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SayHelloRequest *>(to)->MergeFrom(
      static_cast<const SayHelloRequest &>(from));
}


void SayHelloRequest::MergeFrom(const SayHelloRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.SayHelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_data()) {
    _internal_mutable_data()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SayHelloRequest::CopyFrom(const SayHelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.SayHelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SayHelloRequest::IsInitialized() const {
  return true;
}

void SayHelloRequest::InternalSwap(SayHelloRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &service_name_, lhs_arena,
      &other->service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SayHelloRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[25]);
}

// ===================================================================

class SayHelloResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& data(const SayHelloResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
SayHelloResponse::_Internal::data(const SayHelloResponse* msg) {
  return *msg->data_;
}
void SayHelloResponse::clear_data() {
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
SayHelloResponse::SayHelloResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.SayHelloResponse)
}
SayHelloResponse::SayHelloResponse(const SayHelloResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hello_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    hello_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hello().empty()) {
    hello_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hello(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_data()) {
    data_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.SayHelloResponse)
}

inline void SayHelloResponse::SharedCtor() {
hello_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  hello_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_ = nullptr;
}

SayHelloResponse::~SayHelloResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.SayHelloResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SayHelloResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  hello_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void SayHelloResponse::ArenaDtor(void* object) {
  SayHelloResponse* _this = reinterpret_cast< SayHelloResponse* >(object);
  (void)_this;
}
void SayHelloResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SayHelloResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SayHelloResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.SayHelloResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hello_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SayHelloResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hello = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_hello();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SayHelloResponse.hello"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SayHelloResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.SayHelloResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string hello = 1;
  if (!this->_internal_hello().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hello().data(), static_cast<int>(this->_internal_hello().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SayHelloResponse.hello");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_hello(), target);
  }

  // .google.protobuf.Any data = 2;
  if (this->_internal_has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.SayHelloResponse)
  return target;
}

size_t SayHelloResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.SayHelloResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hello = 1;
  if (!this->_internal_hello().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hello());
  }

  // .google.protobuf.Any data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SayHelloResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SayHelloResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SayHelloResponse::GetClassData() const { return &_class_data_; }

void SayHelloResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SayHelloResponse *>(to)->MergeFrom(
      static_cast<const SayHelloResponse &>(from));
}


void SayHelloResponse::MergeFrom(const SayHelloResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.SayHelloResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hello().empty()) {
    _internal_set_hello(from._internal_hello());
  }
  if (from._internal_has_data()) {
    _internal_mutable_data()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SayHelloResponse::CopyFrom(const SayHelloResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.SayHelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SayHelloResponse::IsInitialized() const {
  return true;
}

void SayHelloResponse::InternalSwap(SayHelloResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &hello_, lhs_arena,
      &other->hello_, rhs_arena
  );
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SayHelloResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[26]);
}

// ===================================================================

class InvokeServiceRequest::_Internal {
 public:
  static const ::spec::proto::runtime::v1::CommonInvokeRequest& message(const InvokeServiceRequest* msg);
};

const ::spec::proto::runtime::v1::CommonInvokeRequest&
InvokeServiceRequest::_Internal::message(const InvokeServiceRequest* msg) {
  return *msg->message_;
}
InvokeServiceRequest::InvokeServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.InvokeServiceRequest)
}
InvokeServiceRequest::InvokeServiceRequest(const InvokeServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_message()) {
    message_ = new ::spec::proto::runtime::v1::CommonInvokeRequest(*from.message_);
  } else {
    message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.InvokeServiceRequest)
}

inline void InvokeServiceRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_ = nullptr;
}

InvokeServiceRequest::~InvokeServiceRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.InvokeServiceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvokeServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete message_;
}

void InvokeServiceRequest::ArenaDtor(void* object) {
  InvokeServiceRequest* _this = reinterpret_cast< InvokeServiceRequest* >(object);
  (void)_this;
}
void InvokeServiceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvokeServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.InvokeServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.InvokeServiceRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.CommonInvokeRequest message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.InvokeServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.InvokeServiceRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .spec.proto.runtime.v1.CommonInvokeRequest message = 3;
  if (this->_internal_has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.InvokeServiceRequest)
  return target;
}

size_t InvokeServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.InvokeServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .spec.proto.runtime.v1.CommonInvokeRequest message = 3;
  if (this->_internal_has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvokeServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeServiceRequest::GetClassData() const { return &_class_data_; }

void InvokeServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InvokeServiceRequest *>(to)->MergeFrom(
      static_cast<const InvokeServiceRequest &>(from));
}


void InvokeServiceRequest::MergeFrom(const InvokeServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.InvokeServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_message()) {
    _internal_mutable_message()->::spec::proto::runtime::v1::CommonInvokeRequest::MergeFrom(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeServiceRequest::CopyFrom(const InvokeServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.InvokeServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeServiceRequest::IsInitialized() const {
  return true;
}

void InvokeServiceRequest::InternalSwap(InvokeServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(message_, other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeServiceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[27]);
}

// ===================================================================

class CommonInvokeRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& data(const CommonInvokeRequest* msg);
  static const ::spec::proto::runtime::v1::HTTPExtension& http_extension(const CommonInvokeRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
CommonInvokeRequest::_Internal::data(const CommonInvokeRequest* msg) {
  return *msg->data_;
}
const ::spec::proto::runtime::v1::HTTPExtension&
CommonInvokeRequest::_Internal::http_extension(const CommonInvokeRequest* msg) {
  return *msg->http_extension_;
}
void CommonInvokeRequest::clear_data() {
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
CommonInvokeRequest::CommonInvokeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.CommonInvokeRequest)
}
CommonInvokeRequest::CommonInvokeRequest(const CommonInvokeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_method().empty()) {
    method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_method(), 
      GetArenaForAllocation());
  }
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content_type().empty()) {
    content_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content_type(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_data()) {
    data_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  if (from._internal_has_http_extension()) {
    http_extension_ = new ::spec::proto::runtime::v1::HTTPExtension(*from.http_extension_);
  } else {
    http_extension_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.CommonInvokeRequest)
}

inline void CommonInvokeRequest::SharedCtor() {
method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&data_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&http_extension_) -
    reinterpret_cast<char*>(&data_)) + sizeof(http_extension_));
}

CommonInvokeRequest::~CommonInvokeRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.CommonInvokeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CommonInvokeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete http_extension_;
}

void CommonInvokeRequest::ArenaDtor(void* object) {
  CommonInvokeRequest* _this = reinterpret_cast< CommonInvokeRequest* >(object);
  (void)_this;
}
void CommonInvokeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommonInvokeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CommonInvokeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.CommonInvokeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmpty();
  content_type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  if (GetArenaForAllocation() == nullptr && http_extension_ != nullptr) {
    delete http_extension_;
  }
  http_extension_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonInvokeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.CommonInvokeRequest.method"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string content_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.CommonInvokeRequest.content_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.HTTPExtension http_extension = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_http_extension(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommonInvokeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.CommonInvokeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (!this->_internal_method().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.CommonInvokeRequest.method");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method(), target);
  }

  // .google.protobuf.Any data = 2;
  if (this->_internal_has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  // string content_type = 3;
  if (!this->_internal_content_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_type().data(), static_cast<int>(this->_internal_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.CommonInvokeRequest.content_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content_type(), target);
  }

  // .spec.proto.runtime.v1.HTTPExtension http_extension = 4;
  if (this->_internal_has_http_extension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::http_extension(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.CommonInvokeRequest)
  return target;
}

size_t CommonInvokeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.CommonInvokeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method = 1;
  if (!this->_internal_method().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string content_type = 3;
  if (!this->_internal_content_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_type());
  }

  // .google.protobuf.Any data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .spec.proto.runtime.v1.HTTPExtension http_extension = 4;
  if (this->_internal_has_http_extension()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *http_extension_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommonInvokeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CommonInvokeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommonInvokeRequest::GetClassData() const { return &_class_data_; }

void CommonInvokeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CommonInvokeRequest *>(to)->MergeFrom(
      static_cast<const CommonInvokeRequest &>(from));
}


void CommonInvokeRequest::MergeFrom(const CommonInvokeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.CommonInvokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_method().empty()) {
    _internal_set_method(from._internal_method());
  }
  if (!from._internal_content_type().empty()) {
    _internal_set_content_type(from._internal_content_type());
  }
  if (from._internal_has_data()) {
    _internal_mutable_data()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_data());
  }
  if (from._internal_has_http_extension()) {
    _internal_mutable_http_extension()->::spec::proto::runtime::v1::HTTPExtension::MergeFrom(from._internal_http_extension());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommonInvokeRequest::CopyFrom(const CommonInvokeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.CommonInvokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonInvokeRequest::IsInitialized() const {
  return true;
}

void CommonInvokeRequest::InternalSwap(CommonInvokeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &method_, lhs_arena,
      &other->method_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &content_type_, lhs_arena,
      &other->content_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommonInvokeRequest, http_extension_)
      + sizeof(CommonInvokeRequest::http_extension_)
      - PROTOBUF_FIELD_OFFSET(CommonInvokeRequest, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonInvokeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[28]);
}

// ===================================================================

class HTTPExtension::_Internal {
 public:
};

HTTPExtension::HTTPExtension(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.HTTPExtension)
}
HTTPExtension::HTTPExtension(const HTTPExtension& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  querystring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    querystring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_querystring().empty()) {
    querystring_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_querystring(), 
      GetArenaForAllocation());
  }
  verb_ = from.verb_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.HTTPExtension)
}

inline void HTTPExtension::SharedCtor() {
querystring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  querystring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
verb_ = 0;
}

HTTPExtension::~HTTPExtension() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.HTTPExtension)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void HTTPExtension::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  querystring_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HTTPExtension::ArenaDtor(void* object) {
  HTTPExtension* _this = reinterpret_cast< HTTPExtension* >(object);
  (void)_this;
}
void HTTPExtension::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HTTPExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HTTPExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.HTTPExtension)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  querystring_.ClearToEmpty();
  verb_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HTTPExtension::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .spec.proto.runtime.v1.HTTPExtension.Verb verb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_verb(static_cast<::spec::proto::runtime::v1::HTTPExtension_Verb>(val));
        } else
          goto handle_unusual;
        continue;
      // string querystring = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_querystring();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.HTTPExtension.querystring"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HTTPExtension::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.HTTPExtension)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.HTTPExtension.Verb verb = 1;
  if (this->_internal_verb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_verb(), target);
  }

  // string querystring = 2;
  if (!this->_internal_querystring().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_querystring().data(), static_cast<int>(this->_internal_querystring().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.HTTPExtension.querystring");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_querystring(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.HTTPExtension)
  return target;
}

size_t HTTPExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.HTTPExtension)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string querystring = 2;
  if (!this->_internal_querystring().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_querystring());
  }

  // .spec.proto.runtime.v1.HTTPExtension.Verb verb = 1;
  if (this->_internal_verb() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_verb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HTTPExtension::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HTTPExtension::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HTTPExtension::GetClassData() const { return &_class_data_; }

void HTTPExtension::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HTTPExtension *>(to)->MergeFrom(
      static_cast<const HTTPExtension &>(from));
}


void HTTPExtension::MergeFrom(const HTTPExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.HTTPExtension)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_querystring().empty()) {
    _internal_set_querystring(from._internal_querystring());
  }
  if (from._internal_verb() != 0) {
    _internal_set_verb(from._internal_verb());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HTTPExtension::CopyFrom(const HTTPExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.HTTPExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTTPExtension::IsInitialized() const {
  return true;
}

void HTTPExtension::InternalSwap(HTTPExtension* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &querystring_, lhs_arena,
      &other->querystring_, rhs_arena
  );
  swap(verb_, other->verb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HTTPExtension::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[29]);
}

// ===================================================================

class InvokeResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& data(const InvokeResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
InvokeResponse::_Internal::data(const InvokeResponse* msg) {
  return *msg->data_;
}
void InvokeResponse::clear_data() {
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
InvokeResponse::InvokeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.InvokeResponse)
}
InvokeResponse::InvokeResponse(const InvokeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content_type().empty()) {
    content_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content_type(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_data()) {
    data_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.InvokeResponse)
}

inline void InvokeResponse::SharedCtor() {
content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_ = nullptr;
}

InvokeResponse::~InvokeResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.InvokeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvokeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void InvokeResponse::ArenaDtor(void* object) {
  InvokeResponse* _this = reinterpret_cast< InvokeResponse* >(object);
  (void)_this;
}
void InvokeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvokeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.InvokeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string content_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.InvokeResponse.content_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.InvokeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any data = 1;
  if (this->_internal_has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  // string content_type = 2;
  if (!this->_internal_content_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_type().data(), static_cast<int>(this->_internal_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.InvokeResponse.content_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.InvokeResponse)
  return target;
}

size_t InvokeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.InvokeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content_type = 2;
  if (!this->_internal_content_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_type());
  }

  // .google.protobuf.Any data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvokeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeResponse::GetClassData() const { return &_class_data_; }

void InvokeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InvokeResponse *>(to)->MergeFrom(
      static_cast<const InvokeResponse &>(from));
}


void InvokeResponse::MergeFrom(const InvokeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.InvokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content_type().empty()) {
    _internal_set_content_type(from._internal_content_type());
  }
  if (from._internal_has_data()) {
    _internal_mutable_data()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeResponse::CopyFrom(const InvokeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.InvokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeResponse::IsInitialized() const {
  return true;
}

void InvokeResponse::InternalSwap(InvokeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &content_type_, lhs_arena,
      &other->content_type_, rhs_arena
  );
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[30]);
}

// ===================================================================

ConfigurationItem_TagsEntry_DoNotUse::ConfigurationItem_TagsEntry_DoNotUse() {}
ConfigurationItem_TagsEntry_DoNotUse::ConfigurationItem_TagsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ConfigurationItem_TagsEntry_DoNotUse::MergeFrom(const ConfigurationItem_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationItem_TagsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[31]);
}

// ===================================================================

ConfigurationItem_MetadataEntry_DoNotUse::ConfigurationItem_MetadataEntry_DoNotUse() {}
ConfigurationItem_MetadataEntry_DoNotUse::ConfigurationItem_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ConfigurationItem_MetadataEntry_DoNotUse::MergeFrom(const ConfigurationItem_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationItem_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[32]);
}

// ===================================================================

class ConfigurationItem::_Internal {
 public:
};

ConfigurationItem::ConfigurationItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  tags_(arena),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.ConfigurationItem)
}
ConfigurationItem::ConfigurationItem(const ConfigurationItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  metadata_.MergeFrom(from.metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArenaForAllocation());
  }
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group().empty()) {
    group_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_group(), 
      GetArenaForAllocation());
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_label().empty()) {
    label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_label(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.ConfigurationItem)
}

inline void ConfigurationItem::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigurationItem::~ConfigurationItem() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.ConfigurationItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConfigurationItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigurationItem::ArenaDtor(void* object) {
  ConfigurationItem* _this = reinterpret_cast< ConfigurationItem* >(object);
  (void)_this;
  _this->tags_. ~MapField();
  _this->metadata_. ~MapField();
}
inline void ConfigurationItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ConfigurationItem::ArenaDtor);
  }
}
void ConfigurationItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigurationItem::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.ConfigurationItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  metadata_.Clear();
  key_.ClearToEmpty();
  content_.ClearToEmpty();
  group_.ClearToEmpty();
  label_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigurationItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.ConfigurationItem.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.ConfigurationItem.content"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.ConfigurationItem.group"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string label = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.ConfigurationItem.label"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> tags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&tags_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigurationItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.ConfigurationItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.ConfigurationItem.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.ConfigurationItem.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  // string group = 3;
  if (!this->_internal_group().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.ConfigurationItem.group");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_group(), target);
  }

  // string label = 4;
  if (!this->_internal_label().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.ConfigurationItem.label");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_label(), target);
  }

  // map<string, string> tags = 5;
  if (!this->_internal_tags().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.ConfigurationItem.TagsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.ConfigurationItem.TagsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tags().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_tags().begin();
          it != this->_internal_tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ConfigurationItem_TagsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_tags().begin();
          it != this->_internal_tags().end(); ++it) {
        target = ConfigurationItem_TagsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> metadata = 6;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.ConfigurationItem.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.ConfigurationItem.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ConfigurationItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = ConfigurationItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.ConfigurationItem)
  return target;
}

size_t ConfigurationItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.ConfigurationItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tags_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_tags().begin();
      it != this->_internal_tags().end(); ++it) {
    total_size += ConfigurationItem_TagsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> metadata = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += ConfigurationItem_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string group = 3;
  if (!this->_internal_group().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  // string label = 4;
  if (!this->_internal_label().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigurationItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigurationItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigurationItem::GetClassData() const { return &_class_data_; }

void ConfigurationItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigurationItem *>(to)->MergeFrom(
      static_cast<const ConfigurationItem &>(from));
}


void ConfigurationItem::MergeFrom(const ConfigurationItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.ConfigurationItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (!from._internal_content().empty()) {
    _internal_set_content(from._internal_content());
  }
  if (!from._internal_group().empty()) {
    _internal_set_group(from._internal_group());
  }
  if (!from._internal_label().empty()) {
    _internal_set_label(from._internal_label());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigurationItem::CopyFrom(const ConfigurationItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.ConfigurationItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationItem::IsInitialized() const {
  return true;
}

void ConfigurationItem::InternalSwap(ConfigurationItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &content_, lhs_arena,
      &other->content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &group_, lhs_arena,
      &other->group_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &label_, lhs_arena,
      &other->label_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[33]);
}

// ===================================================================

GetConfigurationRequest_MetadataEntry_DoNotUse::GetConfigurationRequest_MetadataEntry_DoNotUse() {}
GetConfigurationRequest_MetadataEntry_DoNotUse::GetConfigurationRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetConfigurationRequest_MetadataEntry_DoNotUse::MergeFrom(const GetConfigurationRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[34]);
}

// ===================================================================

class GetConfigurationRequest::_Internal {
 public:
};

GetConfigurationRequest::GetConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  keys_(arena),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetConfigurationRequest)
}
GetConfigurationRequest::GetConfigurationRequest(const GetConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group().empty()) {
    group_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_group(), 
      GetArenaForAllocation());
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_label().empty()) {
    label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_label(), 
      GetArenaForAllocation());
  }
  subscribe_update_ = from.subscribe_update_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetConfigurationRequest)
}

inline void GetConfigurationRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
subscribe_update_ = false;
}

GetConfigurationRequest::~GetConfigurationRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetConfigurationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetConfigurationRequest::ArenaDtor(void* object) {
  GetConfigurationRequest* _this = reinterpret_cast< GetConfigurationRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void GetConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &GetConfigurationRequest::ArenaDtor);
  }
}
void GetConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetConfigurationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  metadata_.Clear();
  store_name_.ClearToEmpty();
  app_id_.ClearToEmpty();
  group_.ClearToEmpty();
  label_.ClearToEmpty();
  subscribe_update_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetConfigurationRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetConfigurationRequest.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetConfigurationRequest.group"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string label = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetConfigurationRequest.label"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string keys = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetConfigurationRequest.keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool subscribe_update = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          subscribe_update_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetConfigurationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetConfigurationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetConfigurationRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetConfigurationRequest.app_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_id(), target);
  }

  // string group = 3;
  if (!this->_internal_group().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetConfigurationRequest.group");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_group(), target);
  }

  // string label = 4;
  if (!this->_internal_label().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetConfigurationRequest.label");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_label(), target);
  }

  // repeated string keys = 5;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetConfigurationRequest.keys");
    target = stream->WriteString(5, s, target);
  }

  // map<string, string> metadata = 6;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetConfigurationRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetConfigurationRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // bool subscribe_update = 7;
  if (this->_internal_subscribe_update() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_subscribe_update(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetConfigurationRequest)
  return target;
}

size_t GetConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetConfigurationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keys_.Get(i));
  }

  // map<string, string> metadata = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetConfigurationRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string group = 3;
  if (!this->_internal_group().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  // string label = 4;
  if (!this->_internal_label().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  // bool subscribe_update = 7;
  if (this->_internal_subscribe_update() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConfigurationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetConfigurationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConfigurationRequest::GetClassData() const { return &_class_data_; }

void GetConfigurationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetConfigurationRequest *>(to)->MergeFrom(
      static_cast<const GetConfigurationRequest &>(from));
}


void GetConfigurationRequest::MergeFrom(const GetConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_group().empty()) {
    _internal_set_group(from._internal_group());
  }
  if (!from._internal_label().empty()) {
    _internal_set_label(from._internal_label());
  }
  if (from._internal_subscribe_update() != 0) {
    _internal_set_subscribe_update(from._internal_subscribe_update());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetConfigurationRequest::CopyFrom(const GetConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigurationRequest::IsInitialized() const {
  return true;
}

void GetConfigurationRequest::InternalSwap(GetConfigurationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  keys_.InternalSwap(&other->keys_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &group_, lhs_arena,
      &other->group_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &label_, lhs_arena,
      &other->label_, rhs_arena
  );
  swap(subscribe_update_, other->subscribe_update_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[35]);
}

// ===================================================================

class GetConfigurationResponse::_Internal {
 public:
};

GetConfigurationResponse::GetConfigurationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetConfigurationResponse)
}
GetConfigurationResponse::GetConfigurationResponse(const GetConfigurationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetConfigurationResponse)
}

inline void GetConfigurationResponse::SharedCtor() {
}

GetConfigurationResponse::~GetConfigurationResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetConfigurationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetConfigurationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetConfigurationResponse::ArenaDtor(void* object) {
  GetConfigurationResponse* _this = reinterpret_cast< GetConfigurationResponse* >(object);
  (void)_this;
}
void GetConfigurationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigurationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetConfigurationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetConfigurationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigurationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .spec.proto.runtime.v1.ConfigurationItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetConfigurationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetConfigurationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.ConfigurationItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetConfigurationResponse)
  return target;
}

size_t GetConfigurationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetConfigurationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.ConfigurationItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConfigurationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetConfigurationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConfigurationResponse::GetClassData() const { return &_class_data_; }

void GetConfigurationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetConfigurationResponse *>(to)->MergeFrom(
      static_cast<const GetConfigurationResponse &>(from));
}


void GetConfigurationResponse::MergeFrom(const GetConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetConfigurationResponse::CopyFrom(const GetConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigurationResponse::IsInitialized() const {
  return true;
}

void GetConfigurationResponse::InternalSwap(GetConfigurationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[36]);
}

// ===================================================================

SubscribeConfigurationRequest_MetadataEntry_DoNotUse::SubscribeConfigurationRequest_MetadataEntry_DoNotUse() {}
SubscribeConfigurationRequest_MetadataEntry_DoNotUse::SubscribeConfigurationRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SubscribeConfigurationRequest_MetadataEntry_DoNotUse::MergeFrom(const SubscribeConfigurationRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SubscribeConfigurationRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[37]);
}

// ===================================================================

class SubscribeConfigurationRequest::_Internal {
 public:
};

SubscribeConfigurationRequest::SubscribeConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  keys_(arena),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.SubscribeConfigurationRequest)
}
SubscribeConfigurationRequest::SubscribeConfigurationRequest(const SubscribeConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group().empty()) {
    group_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_group(), 
      GetArenaForAllocation());
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_label().empty()) {
    label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_label(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.SubscribeConfigurationRequest)
}

inline void SubscribeConfigurationRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SubscribeConfigurationRequest::~SubscribeConfigurationRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.SubscribeConfigurationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SubscribeConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubscribeConfigurationRequest::ArenaDtor(void* object) {
  SubscribeConfigurationRequest* _this = reinterpret_cast< SubscribeConfigurationRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void SubscribeConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &SubscribeConfigurationRequest::ArenaDtor);
  }
}
void SubscribeConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubscribeConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.SubscribeConfigurationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  metadata_.Clear();
  store_name_.ClearToEmpty();
  app_id_.ClearToEmpty();
  group_.ClearToEmpty();
  label_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SubscribeConfigurationRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SubscribeConfigurationRequest.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SubscribeConfigurationRequest.group"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string label = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SubscribeConfigurationRequest.label"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string keys = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SubscribeConfigurationRequest.keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubscribeConfigurationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.SubscribeConfigurationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SubscribeConfigurationRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SubscribeConfigurationRequest.app_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_id(), target);
  }

  // string group = 3;
  if (!this->_internal_group().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SubscribeConfigurationRequest.group");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_group(), target);
  }

  // string label = 4;
  if (!this->_internal_label().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SubscribeConfigurationRequest.label");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_label(), target);
  }

  // repeated string keys = 5;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SubscribeConfigurationRequest.keys");
    target = stream->WriteString(5, s, target);
  }

  // map<string, string> metadata = 6;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.SubscribeConfigurationRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.SubscribeConfigurationRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SubscribeConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = SubscribeConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.SubscribeConfigurationRequest)
  return target;
}

size_t SubscribeConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.SubscribeConfigurationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keys_.Get(i));
  }

  // map<string, string> metadata = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += SubscribeConfigurationRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string group = 3;
  if (!this->_internal_group().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  // string label = 4;
  if (!this->_internal_label().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeConfigurationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SubscribeConfigurationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeConfigurationRequest::GetClassData() const { return &_class_data_; }

void SubscribeConfigurationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SubscribeConfigurationRequest *>(to)->MergeFrom(
      static_cast<const SubscribeConfigurationRequest &>(from));
}


void SubscribeConfigurationRequest::MergeFrom(const SubscribeConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.SubscribeConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_group().empty()) {
    _internal_set_group(from._internal_group());
  }
  if (!from._internal_label().empty()) {
    _internal_set_label(from._internal_label());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeConfigurationRequest::CopyFrom(const SubscribeConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.SubscribeConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeConfigurationRequest::IsInitialized() const {
  return true;
}

void SubscribeConfigurationRequest::InternalSwap(SubscribeConfigurationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  keys_.InternalSwap(&other->keys_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &group_, lhs_arena,
      &other->group_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &label_, lhs_arena,
      &other->label_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeConfigurationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[38]);
}

// ===================================================================

class SubscribeConfigurationResponse::_Internal {
 public:
};

SubscribeConfigurationResponse::SubscribeConfigurationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.SubscribeConfigurationResponse)
}
SubscribeConfigurationResponse::SubscribeConfigurationResponse(const SubscribeConfigurationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.SubscribeConfigurationResponse)
}

inline void SubscribeConfigurationResponse::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SubscribeConfigurationResponse::~SubscribeConfigurationResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.SubscribeConfigurationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SubscribeConfigurationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubscribeConfigurationResponse::ArenaDtor(void* object) {
  SubscribeConfigurationResponse* _this = reinterpret_cast< SubscribeConfigurationResponse* >(object);
  (void)_this;
}
void SubscribeConfigurationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeConfigurationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubscribeConfigurationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.SubscribeConfigurationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  store_name_.ClearToEmpty();
  app_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeConfigurationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SubscribeConfigurationResponse.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SubscribeConfigurationResponse.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .spec.proto.runtime.v1.ConfigurationItem items = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubscribeConfigurationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.SubscribeConfigurationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SubscribeConfigurationResponse.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SubscribeConfigurationResponse.app_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_id(), target);
  }

  // repeated .spec.proto.runtime.v1.ConfigurationItem items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.SubscribeConfigurationResponse)
  return target;
}

size_t SubscribeConfigurationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.SubscribeConfigurationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.ConfigurationItem items = 3;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeConfigurationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SubscribeConfigurationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeConfigurationResponse::GetClassData() const { return &_class_data_; }

void SubscribeConfigurationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SubscribeConfigurationResponse *>(to)->MergeFrom(
      static_cast<const SubscribeConfigurationResponse &>(from));
}


void SubscribeConfigurationResponse::MergeFrom(const SubscribeConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.SubscribeConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeConfigurationResponse::CopyFrom(const SubscribeConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.SubscribeConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeConfigurationResponse::IsInitialized() const {
  return true;
}

void SubscribeConfigurationResponse::InternalSwap(SubscribeConfigurationResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeConfigurationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[39]);
}

// ===================================================================

SaveConfigurationRequest_MetadataEntry_DoNotUse::SaveConfigurationRequest_MetadataEntry_DoNotUse() {}
SaveConfigurationRequest_MetadataEntry_DoNotUse::SaveConfigurationRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SaveConfigurationRequest_MetadataEntry_DoNotUse::MergeFrom(const SaveConfigurationRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SaveConfigurationRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[40]);
}

// ===================================================================

class SaveConfigurationRequest::_Internal {
 public:
};

SaveConfigurationRequest::SaveConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.SaveConfigurationRequest)
}
SaveConfigurationRequest::SaveConfigurationRequest(const SaveConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.SaveConfigurationRequest)
}

inline void SaveConfigurationRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SaveConfigurationRequest::~SaveConfigurationRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.SaveConfigurationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SaveConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SaveConfigurationRequest::ArenaDtor(void* object) {
  SaveConfigurationRequest* _this = reinterpret_cast< SaveConfigurationRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void SaveConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &SaveConfigurationRequest::ArenaDtor);
  }
}
void SaveConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SaveConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.SaveConfigurationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  metadata_.Clear();
  store_name_.ClearToEmpty();
  app_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SaveConfigurationRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SaveConfigurationRequest.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .spec.proto.runtime.v1.ConfigurationItem items = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveConfigurationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.SaveConfigurationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SaveConfigurationRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SaveConfigurationRequest.app_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_id(), target);
  }

  // repeated .spec.proto.runtime.v1.ConfigurationItem items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_items(i), target, stream);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.SaveConfigurationRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.SaveConfigurationRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SaveConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = SaveConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.SaveConfigurationRequest)
  return target;
}

size_t SaveConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.SaveConfigurationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.ConfigurationItem items = 3;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += SaveConfigurationRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveConfigurationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SaveConfigurationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveConfigurationRequest::GetClassData() const { return &_class_data_; }

void SaveConfigurationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SaveConfigurationRequest *>(to)->MergeFrom(
      static_cast<const SaveConfigurationRequest &>(from));
}


void SaveConfigurationRequest::MergeFrom(const SaveConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.SaveConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveConfigurationRequest::CopyFrom(const SaveConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.SaveConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveConfigurationRequest::IsInitialized() const {
  return true;
}

void SaveConfigurationRequest::InternalSwap(SaveConfigurationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveConfigurationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[41]);
}

// ===================================================================

DeleteConfigurationRequest_MetadataEntry_DoNotUse::DeleteConfigurationRequest_MetadataEntry_DoNotUse() {}
DeleteConfigurationRequest_MetadataEntry_DoNotUse::DeleteConfigurationRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeleteConfigurationRequest_MetadataEntry_DoNotUse::MergeFrom(const DeleteConfigurationRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeleteConfigurationRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[42]);
}

// ===================================================================

class DeleteConfigurationRequest::_Internal {
 public:
};

DeleteConfigurationRequest::DeleteConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  keys_(arena),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.DeleteConfigurationRequest)
}
DeleteConfigurationRequest::DeleteConfigurationRequest(const DeleteConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group().empty()) {
    group_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_group(), 
      GetArenaForAllocation());
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_label().empty()) {
    label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_label(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.DeleteConfigurationRequest)
}

inline void DeleteConfigurationRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteConfigurationRequest::~DeleteConfigurationRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.DeleteConfigurationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteConfigurationRequest::ArenaDtor(void* object) {
  DeleteConfigurationRequest* _this = reinterpret_cast< DeleteConfigurationRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void DeleteConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &DeleteConfigurationRequest::ArenaDtor);
  }
}
void DeleteConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.DeleteConfigurationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  metadata_.Clear();
  store_name_.ClearToEmpty();
  app_id_.ClearToEmpty();
  group_.ClearToEmpty();
  label_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.DeleteConfigurationRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.DeleteConfigurationRequest.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.DeleteConfigurationRequest.group"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string label = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.DeleteConfigurationRequest.label"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string keys = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.DeleteConfigurationRequest.keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteConfigurationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.DeleteConfigurationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.DeleteConfigurationRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.DeleteConfigurationRequest.app_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_id(), target);
  }

  // string group = 3;
  if (!this->_internal_group().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.DeleteConfigurationRequest.group");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_group(), target);
  }

  // string label = 4;
  if (!this->_internal_label().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.DeleteConfigurationRequest.label");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_label(), target);
  }

  // repeated string keys = 5;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.DeleteConfigurationRequest.keys");
    target = stream->WriteString(5, s, target);
  }

  // map<string, string> metadata = 6;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.DeleteConfigurationRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.DeleteConfigurationRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DeleteConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = DeleteConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.DeleteConfigurationRequest)
  return target;
}

size_t DeleteConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.DeleteConfigurationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keys_.Get(i));
  }

  // map<string, string> metadata = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += DeleteConfigurationRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string app_id = 2;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string group = 3;
  if (!this->_internal_group().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  // string label = 4;
  if (!this->_internal_label().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteConfigurationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteConfigurationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteConfigurationRequest::GetClassData() const { return &_class_data_; }

void DeleteConfigurationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteConfigurationRequest *>(to)->MergeFrom(
      static_cast<const DeleteConfigurationRequest &>(from));
}


void DeleteConfigurationRequest::MergeFrom(const DeleteConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.DeleteConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_group().empty()) {
    _internal_set_group(from._internal_group());
  }
  if (!from._internal_label().empty()) {
    _internal_set_label(from._internal_label());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteConfigurationRequest::CopyFrom(const DeleteConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.DeleteConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteConfigurationRequest::IsInitialized() const {
  return true;
}

void DeleteConfigurationRequest::InternalSwap(DeleteConfigurationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  keys_.InternalSwap(&other->keys_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &group_, lhs_arena,
      &other->group_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &label_, lhs_arena,
      &other->label_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteConfigurationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[43]);
}

// ===================================================================

GetStateRequest_MetadataEntry_DoNotUse::GetStateRequest_MetadataEntry_DoNotUse() {}
GetStateRequest_MetadataEntry_DoNotUse::GetStateRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetStateRequest_MetadataEntry_DoNotUse::MergeFrom(const GetStateRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetStateRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[44]);
}

// ===================================================================

class GetStateRequest::_Internal {
 public:
};

GetStateRequest::GetStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetStateRequest)
}
GetStateRequest::GetStateRequest(const GetStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  consistency_ = from.consistency_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetStateRequest)
}

inline void GetStateRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
consistency_ = 0;
}

GetStateRequest::~GetStateRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetStateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStateRequest::ArenaDtor(void* object) {
  GetStateRequest* _this = reinterpret_cast< GetStateRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void GetStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &GetStateRequest::ArenaDtor);
  }
}
void GetStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty();
  key_.ClearToEmpty();
  consistency_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetStateRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetStateRequest.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.StateOptions.StateConsistency consistency = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_consistency(static_cast<::spec::proto::runtime::v1::StateOptions_StateConsistency>(val));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetStateRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // .spec.proto.runtime.v1.StateOptions.StateConsistency consistency = 3;
  if (this->_internal_consistency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_consistency(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetStateRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetStateRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetStateRequest)
  return target;
}

size_t GetStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetStateRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .spec.proto.runtime.v1.StateOptions.StateConsistency consistency = 3;
  if (this->_internal_consistency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_consistency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStateRequest::GetClassData() const { return &_class_data_; }

void GetStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetStateRequest *>(to)->MergeFrom(
      static_cast<const GetStateRequest &>(from));
}


void GetStateRequest::MergeFrom(const GetStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_consistency() != 0) {
    _internal_set_consistency(from._internal_consistency());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStateRequest::CopyFrom(const GetStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateRequest::IsInitialized() const {
  return true;
}

void GetStateRequest::InternalSwap(GetStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  swap(consistency_, other->consistency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[45]);
}

// ===================================================================

GetBulkStateRequest_MetadataEntry_DoNotUse::GetBulkStateRequest_MetadataEntry_DoNotUse() {}
GetBulkStateRequest_MetadataEntry_DoNotUse::GetBulkStateRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetBulkStateRequest_MetadataEntry_DoNotUse::MergeFrom(const GetBulkStateRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetBulkStateRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[46]);
}

// ===================================================================

class GetBulkStateRequest::_Internal {
 public:
};

GetBulkStateRequest::GetBulkStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  keys_(arena),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetBulkStateRequest)
}
GetBulkStateRequest::GetBulkStateRequest(const GetBulkStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  parallelism_ = from.parallelism_;
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetBulkStateRequest)
}

inline void GetBulkStateRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parallelism_ = 0;
}

GetBulkStateRequest::~GetBulkStateRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetBulkStateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBulkStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBulkStateRequest::ArenaDtor(void* object) {
  GetBulkStateRequest* _this = reinterpret_cast< GetBulkStateRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void GetBulkStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &GetBulkStateRequest::ArenaDtor);
  }
}
void GetBulkStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBulkStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetBulkStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  metadata_.Clear();
  store_name_.ClearToEmpty();
  parallelism_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBulkStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetBulkStateRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetBulkStateRequest.keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 parallelism = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          parallelism_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBulkStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetBulkStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetBulkStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated string keys = 2;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetBulkStateRequest.keys");
    target = stream->WriteString(2, s, target);
  }

  // int32 parallelism = 3;
  if (this->_internal_parallelism() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_parallelism(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetBulkStateRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetBulkStateRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetBulkStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetBulkStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetBulkStateRequest)
  return target;
}

size_t GetBulkStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetBulkStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keys_.Get(i));
  }

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetBulkStateRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // int32 parallelism = 3;
  if (this->_internal_parallelism() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_parallelism());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBulkStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBulkStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBulkStateRequest::GetClassData() const { return &_class_data_; }

void GetBulkStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBulkStateRequest *>(to)->MergeFrom(
      static_cast<const GetBulkStateRequest &>(from));
}


void GetBulkStateRequest::MergeFrom(const GetBulkStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetBulkStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from._internal_parallelism() != 0) {
    _internal_set_parallelism(from._internal_parallelism());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBulkStateRequest::CopyFrom(const GetBulkStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetBulkStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBulkStateRequest::IsInitialized() const {
  return true;
}

void GetBulkStateRequest::InternalSwap(GetBulkStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  keys_.InternalSwap(&other->keys_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  swap(parallelism_, other->parallelism_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBulkStateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[47]);
}

// ===================================================================

class GetBulkStateResponse::_Internal {
 public:
};

GetBulkStateResponse::GetBulkStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetBulkStateResponse)
}
GetBulkStateResponse::GetBulkStateResponse(const GetBulkStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetBulkStateResponse)
}

inline void GetBulkStateResponse::SharedCtor() {
}

GetBulkStateResponse::~GetBulkStateResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetBulkStateResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBulkStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBulkStateResponse::ArenaDtor(void* object) {
  GetBulkStateResponse* _this = reinterpret_cast< GetBulkStateResponse* >(object);
  (void)_this;
}
void GetBulkStateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBulkStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBulkStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetBulkStateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBulkStateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .spec.proto.runtime.v1.BulkStateItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBulkStateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetBulkStateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.BulkStateItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetBulkStateResponse)
  return target;
}

size_t GetBulkStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetBulkStateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.BulkStateItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBulkStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBulkStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBulkStateResponse::GetClassData() const { return &_class_data_; }

void GetBulkStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBulkStateResponse *>(to)->MergeFrom(
      static_cast<const GetBulkStateResponse &>(from));
}


void GetBulkStateResponse::MergeFrom(const GetBulkStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetBulkStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBulkStateResponse::CopyFrom(const GetBulkStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetBulkStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBulkStateResponse::IsInitialized() const {
  return true;
}

void GetBulkStateResponse::InternalSwap(GetBulkStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBulkStateResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[48]);
}

// ===================================================================

BulkStateItem_MetadataEntry_DoNotUse::BulkStateItem_MetadataEntry_DoNotUse() {}
BulkStateItem_MetadataEntry_DoNotUse::BulkStateItem_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void BulkStateItem_MetadataEntry_DoNotUse::MergeFrom(const BulkStateItem_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata BulkStateItem_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[49]);
}

// ===================================================================

class BulkStateItem::_Internal {
 public:
};

BulkStateItem::BulkStateItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.BulkStateItem)
}
BulkStateItem::BulkStateItem(const BulkStateItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    etag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_etag().empty()) {
    etag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_etag(), 
      GetArenaForAllocation());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error().empty()) {
    error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.BulkStateItem)
}

inline void BulkStateItem::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  etag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BulkStateItem::~BulkStateItem() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.BulkStateItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BulkStateItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BulkStateItem::ArenaDtor(void* object) {
  BulkStateItem* _this = reinterpret_cast< BulkStateItem* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void BulkStateItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &BulkStateItem::ArenaDtor);
  }
}
void BulkStateItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BulkStateItem::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.BulkStateItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  key_.ClearToEmpty();
  data_.ClearToEmpty();
  etag_.ClearToEmpty();
  error_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulkStateItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.BulkStateItem.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string etag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_etag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.BulkStateItem.etag"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.BulkStateItem.error"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BulkStateItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.BulkStateItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.BulkStateItem.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  // string etag = 3;
  if (!this->_internal_etag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_etag().data(), static_cast<int>(this->_internal_etag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.BulkStateItem.etag");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_etag(), target);
  }

  // string error = 4;
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.BulkStateItem.error");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error(), target);
  }

  // map<string, string> metadata = 5;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.BulkStateItem.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.BulkStateItem.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = BulkStateItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = BulkStateItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.BulkStateItem)
  return target;
}

size_t BulkStateItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.BulkStateItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += BulkStateItem_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string etag = 3;
  if (!this->_internal_etag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_etag());
  }

  // string error = 4;
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BulkStateItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BulkStateItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BulkStateItem::GetClassData() const { return &_class_data_; }

void BulkStateItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BulkStateItem *>(to)->MergeFrom(
      static_cast<const BulkStateItem &>(from));
}


void BulkStateItem::MergeFrom(const BulkStateItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.BulkStateItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (!from._internal_etag().empty()) {
    _internal_set_etag(from._internal_etag());
  }
  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BulkStateItem::CopyFrom(const BulkStateItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.BulkStateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkStateItem::IsInitialized() const {
  return true;
}

void BulkStateItem::InternalSwap(BulkStateItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &etag_, lhs_arena,
      &other->etag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_, lhs_arena,
      &other->error_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BulkStateItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[50]);
}

// ===================================================================

GetStateResponse_MetadataEntry_DoNotUse::GetStateResponse_MetadataEntry_DoNotUse() {}
GetStateResponse_MetadataEntry_DoNotUse::GetStateResponse_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetStateResponse_MetadataEntry_DoNotUse::MergeFrom(const GetStateResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetStateResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[51]);
}

// ===================================================================

class GetStateResponse::_Internal {
 public:
};

GetStateResponse::GetStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.GetStateResponse)
}
GetStateResponse::GetStateResponse(const GetStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    etag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_etag().empty()) {
    etag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_etag(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.GetStateResponse)
}

inline void GetStateResponse::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  etag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStateResponse::~GetStateResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.GetStateResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStateResponse::ArenaDtor(void* object) {
  GetStateResponse* _this = reinterpret_cast< GetStateResponse* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void GetStateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &GetStateResponse::ArenaDtor);
  }
}
void GetStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.GetStateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  data_.ClearToEmpty();
  etag_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string etag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_etag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.GetStateResponse.etag"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.GetStateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // string etag = 2;
  if (!this->_internal_etag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_etag().data(), static_cast<int>(this->_internal_etag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.GetStateResponse.etag");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_etag(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetStateResponse.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.GetStateResponse.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetStateResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetStateResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.GetStateResponse)
  return target;
}

size_t GetStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.GetStateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetStateResponse_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string etag = 2;
  if (!this->_internal_etag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_etag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStateResponse::GetClassData() const { return &_class_data_; }

void GetStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetStateResponse *>(to)->MergeFrom(
      static_cast<const GetStateResponse &>(from));
}


void GetStateResponse::MergeFrom(const GetStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.GetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (!from._internal_etag().empty()) {
    _internal_set_etag(from._internal_etag());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStateResponse::CopyFrom(const GetStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.GetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateResponse::IsInitialized() const {
  return true;
}

void GetStateResponse::InternalSwap(GetStateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &etag_, lhs_arena,
      &other->etag_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStateResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[52]);
}

// ===================================================================

DeleteStateRequest_MetadataEntry_DoNotUse::DeleteStateRequest_MetadataEntry_DoNotUse() {}
DeleteStateRequest_MetadataEntry_DoNotUse::DeleteStateRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeleteStateRequest_MetadataEntry_DoNotUse::MergeFrom(const DeleteStateRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeleteStateRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[53]);
}

// ===================================================================

class DeleteStateRequest::_Internal {
 public:
  static const ::spec::proto::runtime::v1::Etag& etag(const DeleteStateRequest* msg);
  static const ::spec::proto::runtime::v1::StateOptions& options(const DeleteStateRequest* msg);
};

const ::spec::proto::runtime::v1::Etag&
DeleteStateRequest::_Internal::etag(const DeleteStateRequest* msg) {
  return *msg->etag_;
}
const ::spec::proto::runtime::v1::StateOptions&
DeleteStateRequest::_Internal::options(const DeleteStateRequest* msg) {
  return *msg->options_;
}
DeleteStateRequest::DeleteStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.DeleteStateRequest)
}
DeleteStateRequest::DeleteStateRequest(const DeleteStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_etag()) {
    etag_ = new ::spec::proto::runtime::v1::Etag(*from.etag_);
  } else {
    etag_ = nullptr;
  }
  if (from._internal_has_options()) {
    options_ = new ::spec::proto::runtime::v1::StateOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.DeleteStateRequest)
}

inline void DeleteStateRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&etag_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&options_) -
    reinterpret_cast<char*>(&etag_)) + sizeof(options_));
}

DeleteStateRequest::~DeleteStateRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.DeleteStateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete etag_;
  if (this != internal_default_instance()) delete options_;
}

void DeleteStateRequest::ArenaDtor(void* object) {
  DeleteStateRequest* _this = reinterpret_cast< DeleteStateRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void DeleteStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &DeleteStateRequest::ArenaDtor);
  }
}
void DeleteStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.DeleteStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty();
  key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && etag_ != nullptr) {
    delete etag_;
  }
  etag_ = nullptr;
  if (GetArenaForAllocation() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.DeleteStateRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.DeleteStateRequest.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.Etag etag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_etag(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.StateOptions options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.DeleteStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.DeleteStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.DeleteStateRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // .spec.proto.runtime.v1.Etag etag = 3;
  if (this->_internal_has_etag()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::etag(this), target, stream);
  }

  // .spec.proto.runtime.v1.StateOptions options = 4;
  if (this->_internal_has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::options(this), target, stream);
  }

  // map<string, string> metadata = 5;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.DeleteStateRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.DeleteStateRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DeleteStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = DeleteStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.DeleteStateRequest)
  return target;
}

size_t DeleteStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.DeleteStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += DeleteStateRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .spec.proto.runtime.v1.Etag etag = 3;
  if (this->_internal_has_etag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *etag_);
  }

  // .spec.proto.runtime.v1.StateOptions options = 4;
  if (this->_internal_has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteStateRequest::GetClassData() const { return &_class_data_; }

void DeleteStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteStateRequest *>(to)->MergeFrom(
      static_cast<const DeleteStateRequest &>(from));
}


void DeleteStateRequest::MergeFrom(const DeleteStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.DeleteStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_has_etag()) {
    _internal_mutable_etag()->::spec::proto::runtime::v1::Etag::MergeFrom(from._internal_etag());
  }
  if (from._internal_has_options()) {
    _internal_mutable_options()->::spec::proto::runtime::v1::StateOptions::MergeFrom(from._internal_options());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteStateRequest::CopyFrom(const DeleteStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.DeleteStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteStateRequest::IsInitialized() const {
  return true;
}

void DeleteStateRequest::InternalSwap(DeleteStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteStateRequest, options_)
      + sizeof(DeleteStateRequest::options_)
      - PROTOBUF_FIELD_OFFSET(DeleteStateRequest, etag_)>(
          reinterpret_cast<char*>(&etag_),
          reinterpret_cast<char*>(&other->etag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteStateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[54]);
}

// ===================================================================

class DeleteBulkStateRequest::_Internal {
 public:
};

DeleteBulkStateRequest::DeleteBulkStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  states_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.DeleteBulkStateRequest)
}
DeleteBulkStateRequest::DeleteBulkStateRequest(const DeleteBulkStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      states_(from.states_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.DeleteBulkStateRequest)
}

inline void DeleteBulkStateRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteBulkStateRequest::~DeleteBulkStateRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.DeleteBulkStateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteBulkStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteBulkStateRequest::ArenaDtor(void* object) {
  DeleteBulkStateRequest* _this = reinterpret_cast< DeleteBulkStateRequest* >(object);
  (void)_this;
}
void DeleteBulkStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteBulkStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteBulkStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.DeleteBulkStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  states_.Clear();
  store_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteBulkStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.DeleteBulkStateRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .spec.proto.runtime.v1.StateItem states = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteBulkStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.DeleteBulkStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.DeleteBulkStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated .spec.proto.runtime.v1.StateItem states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_states_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_states(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.DeleteBulkStateRequest)
  return target;
}

size_t DeleteBulkStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.DeleteBulkStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.StateItem states = 2;
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->states_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteBulkStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteBulkStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteBulkStateRequest::GetClassData() const { return &_class_data_; }

void DeleteBulkStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteBulkStateRequest *>(to)->MergeFrom(
      static_cast<const DeleteBulkStateRequest &>(from));
}


void DeleteBulkStateRequest::MergeFrom(const DeleteBulkStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.DeleteBulkStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  states_.MergeFrom(from.states_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteBulkStateRequest::CopyFrom(const DeleteBulkStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.DeleteBulkStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBulkStateRequest::IsInitialized() const {
  return true;
}

void DeleteBulkStateRequest::InternalSwap(DeleteBulkStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  states_.InternalSwap(&other->states_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteBulkStateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[55]);
}

// ===================================================================

class SaveStateRequest::_Internal {
 public:
};

SaveStateRequest::SaveStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  states_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.SaveStateRequest)
}
SaveStateRequest::SaveStateRequest(const SaveStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      states_(from.states_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_store_name().empty()) {
    store_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.SaveStateRequest)
}

inline void SaveStateRequest::SharedCtor() {
store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SaveStateRequest::~SaveStateRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.SaveStateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SaveStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SaveStateRequest::ArenaDtor(void* object) {
  SaveStateRequest* _this = reinterpret_cast< SaveStateRequest* >(object);
  (void)_this;
}
void SaveStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SaveStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SaveStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.SaveStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  states_.Clear();
  store_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.SaveStateRequest.store_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .spec.proto.runtime.v1.StateItem states = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.SaveStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.SaveStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated .spec.proto.runtime.v1.StateItem states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_states_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_states(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.SaveStateRequest)
  return target;
}

size_t SaveStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.SaveStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.StateItem states = 2;
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->states_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string store_name = 1;
  if (!this->_internal_store_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SaveStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveStateRequest::GetClassData() const { return &_class_data_; }

void SaveStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SaveStateRequest *>(to)->MergeFrom(
      static_cast<const SaveStateRequest &>(from));
}


void SaveStateRequest::MergeFrom(const SaveStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.SaveStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  states_.MergeFrom(from.states_);
  if (!from._internal_store_name().empty()) {
    _internal_set_store_name(from._internal_store_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveStateRequest::CopyFrom(const SaveStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.SaveStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveStateRequest::IsInitialized() const {
  return true;
}

void SaveStateRequest::InternalSwap(SaveStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  states_.InternalSwap(&other->states_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &store_name_, lhs_arena,
      &other->store_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveStateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[56]);
}

// ===================================================================

StateItem_MetadataEntry_DoNotUse::StateItem_MetadataEntry_DoNotUse() {}
StateItem_MetadataEntry_DoNotUse::StateItem_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void StateItem_MetadataEntry_DoNotUse::MergeFrom(const StateItem_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata StateItem_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[57]);
}

// ===================================================================

class StateItem::_Internal {
 public:
  static const ::spec::proto::runtime::v1::Etag& etag(const StateItem* msg);
  static const ::spec::proto::runtime::v1::StateOptions& options(const StateItem* msg);
};

const ::spec::proto::runtime::v1::Etag&
StateItem::_Internal::etag(const StateItem* msg) {
  return *msg->etag_;
}
const ::spec::proto::runtime::v1::StateOptions&
StateItem::_Internal::options(const StateItem* msg) {
  return *msg->options_;
}
StateItem::StateItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.StateItem)
}
StateItem::StateItem(const StateItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_etag()) {
    etag_ = new ::spec::proto::runtime::v1::Etag(*from.etag_);
  } else {
    etag_ = nullptr;
  }
  if (from._internal_has_options()) {
    options_ = new ::spec::proto::runtime::v1::StateOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.StateItem)
}

inline void StateItem::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&etag_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&options_) -
    reinterpret_cast<char*>(&etag_)) + sizeof(options_));
}

StateItem::~StateItem() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.StateItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StateItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete etag_;
  if (this != internal_default_instance()) delete options_;
}

void StateItem::ArenaDtor(void* object) {
  StateItem* _this = reinterpret_cast< StateItem* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void StateItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &StateItem::ArenaDtor);
  }
}
void StateItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StateItem::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.StateItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  key_.ClearToEmpty();
  value_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && etag_ != nullptr) {
    delete etag_;
  }
  etag_ = nullptr;
  if (GetArenaForAllocation() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.StateItem.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.Etag etag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_etag(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.StateOptions options = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StateItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.StateItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.StateItem.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  // .spec.proto.runtime.v1.Etag etag = 3;
  if (this->_internal_has_etag()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::etag(this), target, stream);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.StateItem.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.StateItem.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = StateItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = StateItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .spec.proto.runtime.v1.StateOptions options = 5;
  if (this->_internal_has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.StateItem)
  return target;
}

size_t StateItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.StateItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += StateItem_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // .spec.proto.runtime.v1.Etag etag = 3;
  if (this->_internal_has_etag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *etag_);
  }

  // .spec.proto.runtime.v1.StateOptions options = 5;
  if (this->_internal_has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StateItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StateItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StateItem::GetClassData() const { return &_class_data_; }

void StateItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StateItem *>(to)->MergeFrom(
      static_cast<const StateItem &>(from));
}


void StateItem::MergeFrom(const StateItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.StateItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_has_etag()) {
    _internal_mutable_etag()->::spec::proto::runtime::v1::Etag::MergeFrom(from._internal_etag());
  }
  if (from._internal_has_options()) {
    _internal_mutable_options()->::spec::proto::runtime::v1::StateOptions::MergeFrom(from._internal_options());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StateItem::CopyFrom(const StateItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.StateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateItem::IsInitialized() const {
  return true;
}

void StateItem::InternalSwap(StateItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateItem, options_)
      + sizeof(StateItem::options_)
      - PROTOBUF_FIELD_OFFSET(StateItem, etag_)>(
          reinterpret_cast<char*>(&etag_),
          reinterpret_cast<char*>(&other->etag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StateItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[58]);
}

// ===================================================================

class Etag::_Internal {
 public:
};

Etag::Etag(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.Etag)
}
Etag::Etag(const Etag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.Etag)
}

inline void Etag::SharedCtor() {
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Etag::~Etag() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.Etag)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Etag::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Etag::ArenaDtor(void* object) {
  Etag* _this = reinterpret_cast< Etag* >(object);
  (void)_this;
}
void Etag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Etag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Etag::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.Etag)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Etag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.Etag.value"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Etag::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.Etag)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.Etag.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.Etag)
  return target;
}

size_t Etag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.Etag)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Etag::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Etag::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Etag::GetClassData() const { return &_class_data_; }

void Etag::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Etag *>(to)->MergeFrom(
      static_cast<const Etag &>(from));
}


void Etag::MergeFrom(const Etag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.Etag)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Etag::CopyFrom(const Etag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.Etag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Etag::IsInitialized() const {
  return true;
}

void Etag::InternalSwap(Etag* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Etag::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[59]);
}

// ===================================================================

class StateOptions::_Internal {
 public:
};

StateOptions::StateOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.StateOptions)
}
StateOptions::StateOptions(const StateOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&concurrency_, &from.concurrency_,
    static_cast<size_t>(reinterpret_cast<char*>(&consistency_) -
    reinterpret_cast<char*>(&concurrency_)) + sizeof(consistency_));
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.StateOptions)
}

inline void StateOptions::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&concurrency_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&consistency_) -
    reinterpret_cast<char*>(&concurrency_)) + sizeof(consistency_));
}

StateOptions::~StateOptions() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.StateOptions)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StateOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StateOptions::ArenaDtor(void* object) {
  StateOptions* _this = reinterpret_cast< StateOptions* >(object);
  (void)_this;
}
void StateOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StateOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StateOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.StateOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&concurrency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&consistency_) -
      reinterpret_cast<char*>(&concurrency_)) + sizeof(consistency_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .spec.proto.runtime.v1.StateOptions.StateConcurrency concurrency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_concurrency(static_cast<::spec::proto::runtime::v1::StateOptions_StateConcurrency>(val));
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.StateOptions.StateConsistency consistency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_consistency(static_cast<::spec::proto::runtime::v1::StateOptions_StateConsistency>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StateOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.StateOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.StateOptions.StateConcurrency concurrency = 1;
  if (this->_internal_concurrency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_concurrency(), target);
  }

  // .spec.proto.runtime.v1.StateOptions.StateConsistency consistency = 2;
  if (this->_internal_consistency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_consistency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.StateOptions)
  return target;
}

size_t StateOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.StateOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .spec.proto.runtime.v1.StateOptions.StateConcurrency concurrency = 1;
  if (this->_internal_concurrency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_concurrency());
  }

  // .spec.proto.runtime.v1.StateOptions.StateConsistency consistency = 2;
  if (this->_internal_consistency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_consistency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StateOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StateOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StateOptions::GetClassData() const { return &_class_data_; }

void StateOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StateOptions *>(to)->MergeFrom(
      static_cast<const StateOptions &>(from));
}


void StateOptions::MergeFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.StateOptions)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_concurrency() != 0) {
    _internal_set_concurrency(from._internal_concurrency());
  }
  if (from._internal_consistency() != 0) {
    _internal_set_consistency(from._internal_consistency());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StateOptions::CopyFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateOptions::IsInitialized() const {
  return true;
}

void StateOptions::InternalSwap(StateOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateOptions, consistency_)
      + sizeof(StateOptions::consistency_)
      - PROTOBUF_FIELD_OFFSET(StateOptions, concurrency_)>(
          reinterpret_cast<char*>(&concurrency_),
          reinterpret_cast<char*>(&other->concurrency_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StateOptions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[60]);
}

// ===================================================================

class TransactionalStateOperation::_Internal {
 public:
  static const ::spec::proto::runtime::v1::StateItem& request(const TransactionalStateOperation* msg);
};

const ::spec::proto::runtime::v1::StateItem&
TransactionalStateOperation::_Internal::request(const TransactionalStateOperation* msg) {
  return *msg->request_;
}
TransactionalStateOperation::TransactionalStateOperation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.TransactionalStateOperation)
}
TransactionalStateOperation::TransactionalStateOperation(const TransactionalStateOperation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  operationtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    operationtype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operationtype().empty()) {
    operationtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_operationtype(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_request()) {
    request_ = new ::spec::proto::runtime::v1::StateItem(*from.request_);
  } else {
    request_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.TransactionalStateOperation)
}

inline void TransactionalStateOperation::SharedCtor() {
operationtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  operationtype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
request_ = nullptr;
}

TransactionalStateOperation::~TransactionalStateOperation() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.TransactionalStateOperation)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TransactionalStateOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  operationtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void TransactionalStateOperation::ArenaDtor(void* object) {
  TransactionalStateOperation* _this = reinterpret_cast< TransactionalStateOperation* >(object);
  (void)_this;
}
void TransactionalStateOperation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TransactionalStateOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransactionalStateOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.TransactionalStateOperation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operationtype_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionalStateOperation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string operationType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_operationtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.TransactionalStateOperation.operationType"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .spec.proto.runtime.v1.StateItem request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransactionalStateOperation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.TransactionalStateOperation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string operationType = 1;
  if (!this->_internal_operationtype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operationtype().data(), static_cast<int>(this->_internal_operationtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.TransactionalStateOperation.operationType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_operationtype(), target);
  }

  // .spec.proto.runtime.v1.StateItem request = 2;
  if (this->_internal_has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.TransactionalStateOperation)
  return target;
}

size_t TransactionalStateOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.TransactionalStateOperation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string operationType = 1;
  if (!this->_internal_operationtype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operationtype());
  }

  // .spec.proto.runtime.v1.StateItem request = 2;
  if (this->_internal_has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransactionalStateOperation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TransactionalStateOperation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransactionalStateOperation::GetClassData() const { return &_class_data_; }

void TransactionalStateOperation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TransactionalStateOperation *>(to)->MergeFrom(
      static_cast<const TransactionalStateOperation &>(from));
}


void TransactionalStateOperation::MergeFrom(const TransactionalStateOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.TransactionalStateOperation)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_operationtype().empty()) {
    _internal_set_operationtype(from._internal_operationtype());
  }
  if (from._internal_has_request()) {
    _internal_mutable_request()->::spec::proto::runtime::v1::StateItem::MergeFrom(from._internal_request());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionalStateOperation::CopyFrom(const TransactionalStateOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.TransactionalStateOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionalStateOperation::IsInitialized() const {
  return true;
}

void TransactionalStateOperation::InternalSwap(TransactionalStateOperation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &operationtype_, lhs_arena,
      &other->operationtype_, rhs_arena
  );
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionalStateOperation::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[61]);
}

// ===================================================================

ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse() {}
ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::MergeFrom(const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[62]);
}

// ===================================================================

class ExecuteStateTransactionRequest::_Internal {
 public:
};

ExecuteStateTransactionRequest::ExecuteStateTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  operations_(arena),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
}
ExecuteStateTransactionRequest::ExecuteStateTransactionRequest(const ExecuteStateTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      operations_(from.operations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  storename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    storename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_storename().empty()) {
    storename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storename(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
}

inline void ExecuteStateTransactionRequest::SharedCtor() {
storename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  storename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ExecuteStateTransactionRequest::~ExecuteStateTransactionRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ExecuteStateTransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  storename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExecuteStateTransactionRequest::ArenaDtor(void* object) {
  ExecuteStateTransactionRequest* _this = reinterpret_cast< ExecuteStateTransactionRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void ExecuteStateTransactionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ExecuteStateTransactionRequest::ArenaDtor);
  }
}
void ExecuteStateTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecuteStateTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  metadata_.Clear();
  storename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteStateTransactionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string storeName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_storename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.ExecuteStateTransactionRequest.storeName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .spec.proto.runtime.v1.TransactionalStateOperation operations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExecuteStateTransactionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string storeName = 1;
  if (!this->_internal_storename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_storename().data(), static_cast<int>(this->_internal_storename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.ExecuteStateTransactionRequest.storeName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_storename(), target);
  }

  // repeated .spec.proto.runtime.v1.TransactionalStateOperation operations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_operations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_operations(i), target, stream);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.ExecuteStateTransactionRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.ExecuteStateTransactionRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
  return target;
}

size_t ExecuteStateTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spec.proto.runtime.v1.TransactionalStateOperation operations = 2;
  total_size += 1UL * this->_internal_operations_size();
  for (const auto& msg : this->operations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string storeName = 1;
  if (!this->_internal_storename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_storename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExecuteStateTransactionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExecuteStateTransactionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExecuteStateTransactionRequest::GetClassData() const { return &_class_data_; }

void ExecuteStateTransactionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ExecuteStateTransactionRequest *>(to)->MergeFrom(
      static_cast<const ExecuteStateTransactionRequest &>(from));
}


void ExecuteStateTransactionRequest::MergeFrom(const ExecuteStateTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_storename().empty()) {
    _internal_set_storename(from._internal_storename());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExecuteStateTransactionRequest::CopyFrom(const ExecuteStateTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.ExecuteStateTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteStateTransactionRequest::IsInitialized() const {
  return true;
}

void ExecuteStateTransactionRequest::InternalSwap(ExecuteStateTransactionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  operations_.InternalSwap(&other->operations_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &storename_, lhs_arena,
      &other->storename_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteStateTransactionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[63]);
}

// ===================================================================

PublishEventRequest_MetadataEntry_DoNotUse::PublishEventRequest_MetadataEntry_DoNotUse() {}
PublishEventRequest_MetadataEntry_DoNotUse::PublishEventRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PublishEventRequest_MetadataEntry_DoNotUse::MergeFrom(const PublishEventRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PublishEventRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[64]);
}

// ===================================================================

class PublishEventRequest::_Internal {
 public:
};

PublishEventRequest::PublishEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.PublishEventRequest)
}
PublishEventRequest::PublishEventRequest(const PublishEventRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pubsub_name().empty()) {
    pubsub_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pubsub_name(), 
      GetArenaForAllocation());
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_topic().empty()) {
    topic_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_topic(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  data_content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_content_type().empty()) {
    data_content_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data_content_type(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.PublishEventRequest)
}

inline void PublishEventRequest::SharedCtor() {
pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PublishEventRequest::~PublishEventRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.PublishEventRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PublishEventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pubsub_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PublishEventRequest::ArenaDtor(void* object) {
  PublishEventRequest* _this = reinterpret_cast< PublishEventRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void PublishEventRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &PublishEventRequest::ArenaDtor);
  }
}
void PublishEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PublishEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.PublishEventRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  pubsub_name_.ClearToEmpty();
  topic_.ClearToEmpty();
  data_.ClearToEmpty();
  data_content_type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublishEventRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pubsub_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pubsub_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.PublishEventRequest.pubsub_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string topic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.PublishEventRequest.topic"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string data_content_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_data_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.PublishEventRequest.data_content_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PublishEventRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.PublishEventRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_name = 1;
  if (!this->_internal_pubsub_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pubsub_name().data(), static_cast<int>(this->_internal_pubsub_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.PublishEventRequest.pubsub_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pubsub_name(), target);
  }

  // string topic = 2;
  if (!this->_internal_topic().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.PublishEventRequest.topic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_topic(), target);
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  // string data_content_type = 4;
  if (!this->_internal_data_content_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_content_type().data(), static_cast<int>(this->_internal_data_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.PublishEventRequest.data_content_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_data_content_type(), target);
  }

  // map<string, string> metadata = 5;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.PublishEventRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.PublishEventRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PublishEventRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = PublishEventRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.PublishEventRequest)
  return target;
}

size_t PublishEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.PublishEventRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += PublishEventRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string pubsub_name = 1;
  if (!this->_internal_pubsub_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pubsub_name());
  }

  // string topic = 2;
  if (!this->_internal_topic().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string data_content_type = 4;
  if (!this->_internal_data_content_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_content_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PublishEventRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PublishEventRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PublishEventRequest::GetClassData() const { return &_class_data_; }

void PublishEventRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PublishEventRequest *>(to)->MergeFrom(
      static_cast<const PublishEventRequest &>(from));
}


void PublishEventRequest::MergeFrom(const PublishEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.PublishEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_pubsub_name().empty()) {
    _internal_set_pubsub_name(from._internal_pubsub_name());
  }
  if (!from._internal_topic().empty()) {
    _internal_set_topic(from._internal_topic());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (!from._internal_data_content_type().empty()) {
    _internal_set_data_content_type(from._internal_data_content_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PublishEventRequest::CopyFrom(const PublishEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.PublishEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishEventRequest::IsInitialized() const {
  return true;
}

void PublishEventRequest::InternalSwap(PublishEventRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pubsub_name_, lhs_arena,
      &other->pubsub_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &topic_, lhs_arena,
      &other->topic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_content_type_, lhs_arena,
      &other->data_content_type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PublishEventRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[65]);
}

// ===================================================================

InvokeBindingRequest_MetadataEntry_DoNotUse::InvokeBindingRequest_MetadataEntry_DoNotUse() {}
InvokeBindingRequest_MetadataEntry_DoNotUse::InvokeBindingRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InvokeBindingRequest_MetadataEntry_DoNotUse::MergeFrom(const InvokeBindingRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InvokeBindingRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[66]);
}

// ===================================================================

class InvokeBindingRequest::_Internal {
 public:
};

InvokeBindingRequest::InvokeBindingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.InvokeBindingRequest)
}
InvokeBindingRequest::InvokeBindingRequest(const InvokeBindingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  operation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    operation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operation().empty()) {
    operation_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_operation(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.InvokeBindingRequest)
}

inline void InvokeBindingRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
operation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  operation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeBindingRequest::~InvokeBindingRequest() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.InvokeBindingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvokeBindingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  operation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InvokeBindingRequest::ArenaDtor(void* object) {
  InvokeBindingRequest* _this = reinterpret_cast< InvokeBindingRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void InvokeBindingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &InvokeBindingRequest::ArenaDtor);
  }
}
void InvokeBindingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvokeBindingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.InvokeBindingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  name_.ClearToEmpty();
  data_.ClearToEmpty();
  operation_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeBindingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.InvokeBindingRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string operation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_operation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spec.proto.runtime.v1.InvokeBindingRequest.operation"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeBindingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.InvokeBindingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.InvokeBindingRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.InvokeBindingRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.InvokeBindingRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InvokeBindingRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = InvokeBindingRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string operation = 4;
  if (!this->_internal_operation().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation().data(), static_cast<int>(this->_internal_operation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spec.proto.runtime.v1.InvokeBindingRequest.operation");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.InvokeBindingRequest)
  return target;
}

size_t InvokeBindingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.InvokeBindingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += InvokeBindingRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string operation = 4;
  if (!this->_internal_operation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeBindingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvokeBindingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeBindingRequest::GetClassData() const { return &_class_data_; }

void InvokeBindingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InvokeBindingRequest *>(to)->MergeFrom(
      static_cast<const InvokeBindingRequest &>(from));
}


void InvokeBindingRequest::MergeFrom(const InvokeBindingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.InvokeBindingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (!from._internal_operation().empty()) {
    _internal_set_operation(from._internal_operation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeBindingRequest::CopyFrom(const InvokeBindingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.InvokeBindingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeBindingRequest::IsInitialized() const {
  return true;
}

void InvokeBindingRequest::InternalSwap(InvokeBindingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &operation_, lhs_arena,
      &other->operation_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeBindingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[67]);
}

// ===================================================================

InvokeBindingResponse_MetadataEntry_DoNotUse::InvokeBindingResponse_MetadataEntry_DoNotUse() {}
InvokeBindingResponse_MetadataEntry_DoNotUse::InvokeBindingResponse_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InvokeBindingResponse_MetadataEntry_DoNotUse::MergeFrom(const InvokeBindingResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InvokeBindingResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[68]);
}

// ===================================================================

class InvokeBindingResponse::_Internal {
 public:
};

InvokeBindingResponse::InvokeBindingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:spec.proto.runtime.v1.InvokeBindingResponse)
}
InvokeBindingResponse::InvokeBindingResponse(const InvokeBindingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:spec.proto.runtime.v1.InvokeBindingResponse)
}

inline void InvokeBindingResponse::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeBindingResponse::~InvokeBindingResponse() {
  // @@protoc_insertion_point(destructor:spec.proto.runtime.v1.InvokeBindingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvokeBindingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InvokeBindingResponse::ArenaDtor(void* object) {
  InvokeBindingResponse* _this = reinterpret_cast< InvokeBindingResponse* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void InvokeBindingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &InvokeBindingResponse::ArenaDtor);
  }
}
void InvokeBindingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvokeBindingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spec.proto.runtime.v1.InvokeBindingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeBindingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeBindingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spec.proto.runtime.v1.InvokeBindingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // map<string, string> metadata = 2;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.InvokeBindingResponse.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "spec.proto.runtime.v1.InvokeBindingResponse.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InvokeBindingResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = InvokeBindingResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spec.proto.runtime.v1.InvokeBindingResponse)
  return target;
}

size_t InvokeBindingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spec.proto.runtime.v1.InvokeBindingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += InvokeBindingResponse_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeBindingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvokeBindingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeBindingResponse::GetClassData() const { return &_class_data_; }

void InvokeBindingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InvokeBindingResponse *>(to)->MergeFrom(
      static_cast<const InvokeBindingResponse &>(from));
}


void InvokeBindingResponse::MergeFrom(const InvokeBindingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spec.proto.runtime.v1.InvokeBindingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeBindingResponse::CopyFrom(const InvokeBindingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spec.proto.runtime.v1.InvokeBindingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeBindingResponse::IsInitialized() const {
  return true;
}

void InvokeBindingResponse::InternalSwap(InvokeBindingResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeBindingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_runtime_2eproto_getter, &descriptor_table_runtime_2eproto_once,
      file_level_metadata_runtime_2eproto[69]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace spec
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetFileMetaRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetFileMetaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetFileMetaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetFileMetaResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetFileMetaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetFileMetaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::FileMetaValue* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::FileMetaValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::FileMetaValue >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::FileMeta_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::FileMeta_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::FileMeta_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::FileMeta* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::FileMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::FileMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetFileRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetFileRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetFileRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetFileRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetFileResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::PutFileRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::PutFileRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::PutFileRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::PutFileRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::PutFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::PutFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::FileRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::FileRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::FileRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::FileRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::FileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::FileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::ListFileRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::ListFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::ListFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::FileInfo_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::FileInfo_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::FileInfo_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::FileInfo* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::FileInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::FileInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::ListFileResp* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::ListFileResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::ListFileResp >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::DelFileRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::DelFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::DelFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetNextIdRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetNextIdRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetNextIdRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetNextIdRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetNextIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetNextIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SequencerOptions* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SequencerOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SequencerOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetNextIdResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetNextIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetNextIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::TryLockRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::TryLockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::TryLockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::TryLockResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::TryLockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::TryLockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::UnlockRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::UnlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::UnlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::UnlockResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::UnlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::UnlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SayHelloRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SayHelloRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SayHelloRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SayHelloResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SayHelloResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SayHelloResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::InvokeServiceRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::InvokeServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::InvokeServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::CommonInvokeRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::CommonInvokeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::CommonInvokeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::HTTPExtension* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::HTTPExtension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::HTTPExtension >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::InvokeResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::InvokeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::InvokeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::ConfigurationItem_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::ConfigurationItem_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::ConfigurationItem_TagsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::ConfigurationItem_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::ConfigurationItem_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::ConfigurationItem_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::ConfigurationItem* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::ConfigurationItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::ConfigurationItem >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetConfigurationRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetConfigurationResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetConfigurationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetConfigurationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SubscribeConfigurationRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SubscribeConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SubscribeConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SubscribeConfigurationResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SubscribeConfigurationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SubscribeConfigurationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SaveConfigurationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SaveConfigurationRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SaveConfigurationRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SaveConfigurationRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SaveConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SaveConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::DeleteConfigurationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::DeleteConfigurationRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::DeleteConfigurationRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::DeleteConfigurationRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::DeleteConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::DeleteConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetStateRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetBulkStateRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetBulkStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetBulkStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetBulkStateResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetBulkStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetBulkStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::BulkStateItem* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::BulkStateItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::BulkStateItem >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::GetStateResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::GetStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::GetStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::DeleteStateRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::DeleteStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::DeleteStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::DeleteBulkStateRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::DeleteBulkStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::DeleteBulkStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::SaveStateRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::SaveStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::SaveStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::StateItem_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::StateItem_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::StateItem_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::StateItem* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::StateItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::StateItem >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::Etag* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::Etag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::Etag >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::StateOptions* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::StateOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::StateOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::TransactionalStateOperation* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::TransactionalStateOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::TransactionalStateOperation >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::ExecuteStateTransactionRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::ExecuteStateTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::PublishEventRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::PublishEventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::PublishEventRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::InvokeBindingRequest* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::InvokeBindingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::InvokeBindingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::spec::proto::runtime::v1::InvokeBindingResponse* Arena::CreateMaybeMessage< ::spec::proto::runtime::v1::InvokeBindingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::spec::proto::runtime::v1::InvokeBindingResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
